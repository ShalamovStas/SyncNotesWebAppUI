{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/esm2015/drag-drop.js","webpack:///src/app/material-component/buttons/buttons.component.ts","webpack:///src/app/material-component/buttons/buttons.component.html","webpack:///src/app/material-component/chips/chips.component.ts","webpack:///src/app/material-component/chips/chips.component.html","webpack:///src/app/material-component/custom-questions/custom-questions.component.ts","webpack:///src/app/material-component/custom-questions/custom-questions.component.html","webpack:///src/app/material-component/custom-questions/edit-policy-dialog.html","webpack:///src/app/material-component/custom-questions/dialogs/dialog-add-question.ts","webpack:///src/app/material-component/custom-questions/dialogs/add-question-dialog.html","webpack:///src/app/material-component/custom-questions/dialogs/edit-test-result-model-dialog.ts","webpack:///src/app/material-component/custom-questions/dialogs/edit-test-result-model-dialog.html","webpack:///src/app/material-component/custom-questions/questionModels.ts","webpack:///src/app/material-component/custom-questions/questionWizard.ts","webpack:///src/app/material-component/destination-tab/destination.component.ts","webpack:///src/app/material-component/destination-tab/destination.component.html","webpack:///src/app/material-component/destination-tab/present-simple/data.ts","webpack:///src/app/material-component/destination-tab/present-simple/present-simple.component.ts","webpack:///src/app/material-component/destination-tab/present-simple/present-simple.component.html","webpack:///src/app/material-component/dialog/dialog.component.ts","webpack:///src/app/material-component/dialog/dialog.component.html","webpack:///src/app/material-component/expansion/expansion.component.ts","webpack:///src/app/material-component/expansion/expansion.component.html","webpack:///src/app/material-component/grid/grid.component.ts","webpack:///src/app/material-component/grid/grid.component.html","webpack:///src/app/material-component/lists/lists.component.ts","webpack:///src/app/material-component/lists/lists.component.html","webpack:///src/app/material-component/material.module.ts","webpack:///src/app/material-component/material.routing.ts","webpack:///src/app/material-component/menu/menu.component.ts","webpack:///src/app/material-component/menu/menu.component.html","webpack:///src/app/material-component/progress-snipper/progress-snipper.component.ts","webpack:///src/app/material-component/progress-snipper/progress-snipper.component.html","webpack:///src/app/material-component/progress/progress.component.ts","webpack:///src/app/material-component/progress/progress.component.html","webpack:///src/app/material-component/slide-toggle/slide-toggle.component.ts","webpack:///src/app/material-component/slide-toggle/slide-toggle.component.html","webpack:///src/app/material-component/slider/slider.component.ts","webpack:///src/app/material-component/slider/slider.component.html","webpack:///src/app/material-component/snackbar/snackbar.component.ts","webpack:///src/app/material-component/snackbar/snackbar.component.html","webpack:///src/app/material-component/stepper/stepper.component.ts","webpack:///src/app/material-component/stepper/stepper.component.html","webpack:///src/app/material-component/tabs/tabs.component.ts","webpack:///src/app/material-component/tabs/tabs.component.html","webpack:///src/app/material-component/toolbar/toolbar.component.ts","webpack:///src/app/material-component/toolbar/toolbar.component.html","webpack:///src/app/material-component/tooltip/tooltip.component.ts","webpack:///src/app/material-component/tooltip/tooltip.component.html"],"names":["extendStyles","dest","source","key","hasOwnProperty","toggleNativeDragInteractions","element","enable","userSelect","style","touchAction","webkitUserDrag","webkitTapHighlightColor","msUserSelect","webkitUserSelect","MozUserSelect","parseCssTimeUnitsToMs","value","multiplier","toLowerCase","indexOf","parseFloat","getTransformTransitionDurationInMs","computedStyle","getComputedStyle","transitionedProperties","parseCssPropertyValue","property","find","prop","propertyIndex","rawDurations","rawDelays","name","getPropertyValue","split","map","part","trim","passiveEventListenerOptions","passive","activeEventListenerOptions","MOUSE_EVENT_IGNORE_TIME","DragRef","_config","_document","_ngZone","_viewportRuler","_dragDropRegistry","_passiveTransform","x","y","_activeTransform","_moveEvents","_pointerMoveSubscription","EMPTY","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_boundaryElement","_nativeInteractionsEnabled","_handles","_disabledHandles","Set","_direction","dragStartDelay","_disabled","beforeStarted","started","released","ended","entered","exited","dropped","moved","asObservable","_pointerDown","event","next","length","targetHandle","handle","target","contains","has","disabled","_initializeDragSequence","_rootElement","_pointerMove","_hasStartedDragging","pointerPosition","_getPointerPositionOnPage","distanceX","Math","abs","_pickupPositionOnPage","distanceY","isOverThreshold","dragStartThreshold","isDelayElapsed","Date","now","_dragStartTime","_endDragSequence","_dropContainer","isDragging","run","_startDragSequence","_previewRect","width","height","_preview","getBoundingClientRect","constrainedPointerPosition","_getConstrainedPointerPosition","_hasMoved","preventDefault","_updatePointerDirectionDelta","_updateActiveDropContainer","activeTransform","_applyRootElementTransform","SVGElement","appliedTransform","setAttribute","observers","distance","_getDragDistance","delta","_pointerDirectionDelta","_pointerUp","withRootElement","registerDragItem","_placeholder","handles","forEach","_toggleNativeDragInteractions","template","_previewTemplate","_placeholderTemplate","rootElement","_removeRootElementListeners","addEventListener","_initialTransform","undefined","boundaryElement","unsubscribe","change","subscribe","_containInsideBoundaryOnResize","removeElement","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeSubscriptions","complete","clear","_nextSibling","transform","add","direction","container","position","_pointerPositionAtLastDirectionChange","_previewRef","destroy","_placeholderRef","stopDragging","_rootElementTapHighlight","_stopScrolling","_animatePreviewToPlaceholder","then","_cleanupDragArtifacts","_cleanupCachedDimensions","isTouchEvent","_lastTouchEventTime","nextSibling","preview","_createPreviewElement","placeholder","_createPlaceholderElement","display","body","appendChild","parentNode","replaceChild","getPreviewInsertionPoint","start","referenceElement","stopPropagation","isTouchSequence","isAuxiliaryMouseButton","button","isSyntheticEvent","draggable","type","_initialContainer","pointerMove","pointerUp","scroll","pipe","_scrollPosition","getViewportScrollPosition","_boundaryRect","_pickupPositionInElement","_getPointerPositionInElement","startDragging","insertBefore","currentIndex","getItemIndex","isPointerOverContainer","_isOverContainer","item","previousIndex","previousContainer","drop","newContainer","_getSiblingContainerFromPosition","exit","enter","_startScrollingIfNecessary","_sortItem","getTransform","previewConfig","previewTemplate","viewRef","viewContainer","createEmbeddedView","context","getRootNode","elementRect","deepCloneNode","left","top","pointerEvents","margin","zIndex","classList","Promise","resolve","placeholderRect","duration","runOutsideAngular","handler","propertyName","removeEventListener","clearTimeout","timeout","setTimeout","placeholderConfig","placeholderTemplate","handleElement","referenceRect","point","targetTouches","pageX","pageY","touches","changedTouches","constrainedPoint","constrainPosition","dropContainerLock","lockAxis","pickupX","pickupY","boundaryRect","previewRect","minY","maxY","bottom","minX","maxX","right","clamp","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","setFreeDragPosition","newValue","round","node","clone","cloneNode","descendantsWithId","querySelectorAll","descendantCanvases","removeAttribute","i","cloneCanvases","correspondingCloneContext","getContext","drawImage","min","max","removeChild","documentRef","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","rootNode","rootNodes","nodeType","ELEMENT_NODE","wrapper","createElement","moveItemInArray","array","fromIndex","toIndex","from","clamp$1","to","transferArrayItem","currentArray","targetArray","targetIndex","splice","copyArrayItem","_uniqueIdCounter","DROP_PROXIMITY_THRESHOLD","SCROLL_PROXIMITY_THRESHOLD","AUTO_SCROLL_STEP","DropListRef","id","sortingDisabled","autoScrollDisabled","enterPredicate","sorted","_isDragging","_itemPositions","_viewportScrollPosition","_previousSwap","drag","_siblings","_orientation","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","_horizontalScrollDirection","_stopScrollTimers","_handleScroll","_updateAfterScroll","scrollTop","scrollLeft","_startScrollInterval","_scrollNode","incrementVerticalScroll","incrementHorizontalScroll","nativeNode","_shadowRoot","getShadowRoot","registerDropContainer","_removeListeners","removeDropContainer","_cacheItems","sibling","_startReceiving","_listenToScrollEvents","pointerX","pointerY","newIndex","_draggables","_getItemIndexFromPointerPosition","activeDraggables","_activeDraggables","getPlaceholderElement","newPositionReference","getRootElement","parentElement","push","_cacheItemPositions","_reset","items","_withDropContainer","connectedTo","slice","orientation","reverse","findIndex","currentItem","size","pointerDelta","_isPointerNearDropContainer","siblings","isHorizontal","siblingAtNewPosition","clientRect","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","index","isDraggedItem","offset","elementToOffset","adjustClientRect","scrollNode","verticalScrollDirection","horizontalScrollDirection","getElementScrollDirections","_clientRect","getViewportSize","getVerticalScrollDirection","getHorizontalScrollDirection","window","getMutableClientRect","elementToMeasure","sort","a","b","_stopReceiving","immediateSibling","end","xThreshold","yThreshold","_","floor","_cacheOwnPosition","scrollPosition","newTop","newLeft","extraClientRect","topDifference","leftDifference","_sortFromLastPointerPosition","isInsideClientRect","_canReceive","elementFromPoint","nativeElement","activeSiblings","isReceiving","predicate","amount","scrollBy","computedVertical","computedHorizontal","scrollHeight","clientHeight","scrollWidth","clientWidth","ShadowRoot","activeCapturingEventOptions","capture","DragDropRegistry","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","Map","_preventDefaultWhileDragging","getDropContainer","Error","startsWith","moveEvent","upEvent","set","e","options","config","_clearGlobalListeners","Array","instance","ɵfac","DragDropRegistry_Factory","t","ɵprov","token","factory","providedIn","ctorParameters","decorators","args","ngInjectableDef","DEFAULT_CONFIG","DragDrop","DragDrop_Factory","CDK_DROP_LIST","CDK_DROP_LIST_CONTAINER","CDK_DRAG_PARENT","CdkDragHandle","parentDrag","_stateChanges","_parentDrag","CdkDragHandle_Factory","ɵdir","selectors","hostAttrs","inputs","propDecorators","selector","host","CdkDragPlaceholder","templateRef","CdkDragPlaceholder_Factory","data","CdkDragPreview","CdkDragPreview_Factory","CDK_DRAG_CONFIG","CDK_DRAG_CONFIG_FACTORY","CdkDrag","dropContainer","_viewContainerRef","_dir","dragDrop","_changeDetectorRef","_destroyed","observer","subscription","_dragRef","movedEvent","createDrag","_syncInputs","_handleEvents","reset","getFreeDragPosition","onStable","_updateRootElement","changes","childHandleElements","filter","withHandles","handleInstance","dragRef","disableHandle","enableHandle","freeDragPosition","rootSelectorChange","positionChange","firstChange","dispose","rootElementSelector","getClosestMatchingAncestor","nodeName","boundary","ref","dir","withBoundaryElement","_getBoundaryElement","withPlaceholderTemplate","withPreviewTemplate","withDirection","emit","markForCheck","CdkDrag_Factory","contentQueries","CdkDrag_ContentQueries","rf","ctx","dirIndex","_t","first","hostVars","hostBindings","CdkDrag_HostBindings","outputs","exportAs","features","provide","useExisting","descendants","providers","currentElement","matches","msMatchesSelector","CdkDropListGroup","_items","CdkDropListGroup_Factory","_uniqueIdCounter$1","ɵ0","CdkDropList","_group","_sortingDisabled","_dropListRef","createDropList","_dropLists","withItems","result","list","withOrientation","CdkDropList_Factory","CdkDropList_ContentQueries","CdkDropList_HostBindings","useValue","DragDropModule","ɵmod","ɵinj","DragDropModule_Factory","ngJitMode","declarations","exports","ButtonsComponent","templateUrl","styleUrls","color","ChipsComponent","visible","selectable","removable","addOnBlur","availableColors","separatorKeysCodes","fruits","input","fruit","DialogEditPolicyComponent","dialogRef","close","CustomQuestionsComponent","dialog","snackBar","editQuestionViewModel","questions","isOpen","testResultModels","questionWizardEngine","question_1","newGuid","text","questionType","TRUE_FALSE_QUESTION","question_2","INPUT_QUESTION","question_3","question_4","child_question","childQuestion","defaultResult","message","points","init","currentQuestion","console","error","editQuestionMode","parentQuestion","UNDEFINED","pointsPositive","pointsNegative","log","dialogNewQuestion","open","afterClosed","editedQuestion","saveQuestion","openSnackBar","newQuestion","question","editQuestionByIndex","onCloseEdit","addQuestionMode","arr","saveNewQuestion","action","panelClass","questionStrategy","q","questionTrueFalseStrategy","trueFalseStrategy","questionId","newTestResult","currentResult","setStateStart","res","handleAnswer","replace","c","r","random","v","toString","AddNewQuestionDialog","addResult","dropTestResult","startQuiz","DialogAddQuestionComponent","DialogEditTestResultModelComponent","Question","QuestionType","TrueFalseQuestionStrategy","answerTrueFalse","AnswerTrueFalse","TRUE","FALSE","inputAnswer","EditQuestionViewModel","TestResultModel","ResultHandler","resultsList","QuestionWizardEngineState","QuestionWizardEngine","sequenceEngine","SequenceEngine","state","IS_READY","currentPoints","STARTED","currentTestResult","isFinished","calcPoints","childQuestionPolicy","checkChildQuestion","showChild","FINISHED","handleTestResult","getAnswerPoint","SHOW_CHILD_IF_PARENT_IS_TRUE","parentAnswer","SKIP_CHILD_IF_PARENT_IS_TRUE","_currentIndex","_state","SequenceState","IS_READY_TO_START","IS_FINISHED","IS_IN_PROGRESS","checkReachSequenceEnd","DestinationComponent","Data","f_q_1","f_q_2","f_q_2_test","PresentSimpleComponent","DialogOverviewExampleDialogComponent","onNoClick","DialogComponent","animal","openDialog","ExpansionComponent","panelOpenState","step","setStep","nextStep","prevStep","GridComponent","tiles","cols","rows","ListsComponent","typesOfShoes","messages","image","subject","content","folders","updated","notes","MaterialComponentsModule","forChild","imports","entryComponents","MaterialRoutes","path","component","MenuComponent","ProgressSnipperComponent","mode","ProgressComponent","bufferValue","SlideToggleComponent","checked","SliderComponent","demo","val","SnackbarComponent","StepperComponent","_formBuilder","isLinear","firstFormGroup","Object","create","secondFormGroup","isLinearvarient","varientfirstFormGroup","varientsecondFormGroup","isLinearposition","positionfirstFormGroup","positionsecondFormGroup","optionalfirstFormGroup","optionalsecondFormGroup","isOptional","editablefirstFormGroup","editablesecondFormGroup","isEditable","customizefirstFormGroup","customizesecondFormGroup","errorfirstFormGroup","errorsecondFormGroup","group","firstCtrl","required","secondCtrl","varientfirstCtrl","varientsecondCtrl","positionfirstCtrl","positionsecondCtrl","optionalfirstCtrl","optionalsecondCtrl","editablefirstCtrl","editablesecondCtrl","customizefirstCtrl","customizesecondCtrl","errorfirstCtrl","errorsecondCtrl","displayDefaultIndicatorType","TabsComponent","ToolbarComponent","TooltipComponent"],"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","file":"material-component-material-module-es5.js","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { normalizePassiveListenerOptions, _supportsShadowDom } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceNumberProperty, coerceArray } from '@angular/cdk/coercion';\nimport { Subscription, Subject, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { startWith, takeUntil, take, map, switchMap, tap } from 'rxjs/operators';\nimport { Injectable, NgZone, Inject, InjectionToken, NgModule, ContentChildren, ElementRef, EventEmitter, forwardRef, Input, Output, Optional, Directive, ChangeDetectorRef, SkipSelf, ContentChild, ViewContainerRef, isDevMode, TemplateRef, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * \\@docs-private\n * @param {?} dest\n * @param {?} source\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nfunction extendStyles(dest, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            dest[key] = (/** @type {?} */ (source[key]));\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * \\@docs-private\n * @param {?} element Element on which to toggle the drag interactions.\n * @param {?} enable Whether the drag interactions should be enabled.\n * @return {?}\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    /** @type {?} */\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        touchAction: enable ? '' : 'none',\n        webkitUserDrag: enable ? '' : 'none',\n        webkitTapHighlightColor: enable ? '' : 'transparent',\n        userSelect: userSelect,\n        msUserSelect: userSelect,\n        webkitUserSelect: userSelect,\n        MozUserSelect: userSelect\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Parses a CSS time value to milliseconds.\n * @param {?} value\n * @return {?}\n */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    /** @type {?} */\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/**\n * Gets the transform transition duration, including the delay, of an element in milliseconds.\n * @param {?} element\n * @return {?}\n */\nfunction getTransformTransitionDurationInMs(element) {\n    /** @type {?} */\n    const computedStyle = getComputedStyle(element);\n    /** @type {?} */\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    /** @type {?} */\n    const property = transitionedProperties.find((/**\n     * @param {?} prop\n     * @return {?}\n     */\n    prop => prop === 'transform' || prop === 'all'));\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    /** @type {?} */\n    const propertyIndex = transitionedProperties.indexOf(property);\n    /** @type {?} */\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    /** @type {?} */\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/**\n * Parses out multiple values from a computed style into an array.\n * @param {?} computedStyle\n * @param {?} name\n * @return {?}\n */\nfunction parseCssPropertyValue(computedStyle, name) {\n    /** @type {?} */\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map((/**\n     * @param {?} part\n     * @return {?}\n     */\n    part => part.trim()));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options that can be used to bind a passive event listener.\n * @type {?}\n */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Options that can be used to bind an active event listener.\n * @type {?}\n */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n * @type {?}\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n * \\@docs-private\n * @template T\n */\nclass DragRef {\n    /**\n     * @param {?} element\n     * @param {?} _config\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?} _dragDropRegistry\n     */\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /**\n         * CSS `transform` that is applied to the element while it's being dragged.\n         */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Emits when the item is being moved.\n         */\n        this._moveEvents = new Subject();\n        /**\n         * Subscription to pointer movement events.\n         */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the event that is dispatched when the user lifts their pointer.\n         */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the viewport being scrolled.\n         */\n        this._scrollSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the viewport being resized.\n         */\n        this._resizeSubscription = Subscription.EMPTY;\n        /**\n         * Cached reference to the boundary element.\n         */\n        this._boundaryElement = null;\n        /**\n         * Whether the native dragging interactions have been enabled on the root element.\n         */\n        this._nativeInteractionsEnabled = true;\n        /**\n         * Elements that can be used to drag the draggable item.\n         */\n        this._handles = [];\n        /**\n         * Registered handles that are currently disabled.\n         */\n        this._disabledHandles = new Set();\n        /**\n         * Layout direction of the item.\n         */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /**\n         * Emits as the drag sequence is being prepared.\n         */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user starts dragging the item.\n         */\n        this.started = new Subject();\n        /**\n         * Emits when the user has released a drag item, before any animations have started.\n         */\n        this.released = new Subject();\n        /**\n         * Emits when the user stops dragging an item in the container.\n         */\n        this.ended = new Subject();\n        /**\n         * Emits when the user has moved the item into a new container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes the item its container by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /**\n         * Emits when the user drops the item inside a container.\n         */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents.asObservable();\n        /**\n         * Handler for the `mousedown`/`touchstart` events.\n         */\n        this._pointerDown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                /** @type {?} */\n                const targetHandle = this._handles.find((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                handle => {\n                    /** @type {?} */\n                    const target = event.target;\n                    return !!target && (target === handle || handle.contains((/** @type {?} */ (target))));\n                }));\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        });\n        /**\n         * Handler that is invoked when the user moves their pointer after they've initiated a drag.\n         */\n        this._pointerMove = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (!this._hasStartedDragging) {\n                /** @type {?} */\n                const pointerPosition = this._getPointerPositionOnPage(event);\n                /** @type {?} */\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                /** @type {?} */\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                /** @type {?} */\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    /** @type {?} */\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + (this.dragStartDelay || 0);\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!this._dropContainer || !this._dropContainer.isDragging()) {\n                        this._hasStartedDragging = true;\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this._startDragSequence(event)));\n                    }\n                }\n                return;\n            }\n            // We only need the preview dimensions if we have a boundary element.\n            if (this._boundaryElement) {\n                // Cache the preview element rect if we haven't cached it already or if\n                // we cached it too early before the element dimensions were computed.\n                if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n                    this._previewRect = (this._preview || this._rootElement).getBoundingClientRect();\n                }\n            }\n            /** @type {?} */\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(event);\n            this._hasMoved = true;\n            event.preventDefault();\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition);\n            }\n            else {\n                /** @type {?} */\n                const activeTransform = this._activeTransform;\n                activeTransform.x =\n                    constrainedPointerPosition.x - this._pickupPositionOnPage.x + this._passiveTransform.x;\n                activeTransform.y =\n                    constrainedPointerPosition.y - this._pickupPositionOnPage.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n                // Apply transform as attribute if dragging and svg element to work for IE\n                if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n                    /** @type {?} */\n                    const appliedTransform = `translate(${activeTransform.x} ${activeTransform.y})`;\n                    this._rootElement.setAttribute('transform', appliedTransform);\n                }\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta\n                    });\n                }));\n            }\n        });\n        /**\n         * Handler that is invoked when the user lifts their pointer up, after initiating a drag.\n         */\n        this._pointerUp = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this._endDragSequence(event);\n        });\n        this.withRootElement(element);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /**\n     * Whether starting to drag this element is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n        }\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Registers the handles that can be used to drag the element.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} handles\n     * @return {THIS}\n     */\n    withHandles(handles) {\n        (/** @type {?} */ (this))._handles = handles.map((/**\n         * @param {?} handle\n         * @return {?}\n         */\n        handle => coerceElement(handle)));\n        (/** @type {?} */ (this))._handles.forEach((/**\n         * @param {?} handle\n         * @return {?}\n         */\n        handle => toggleNativeDragInteractions(handle, false)));\n        (/** @type {?} */ (this))._toggleNativeDragInteractions();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} template Template that from which to stamp out the preview.\n     * @return {THIS}\n     */\n    withPreviewTemplate(template) {\n        (/** @type {?} */ (this))._previewTemplate = template;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} template Template that from which to stamp out the placeholder.\n     * @return {THIS}\n     */\n    withPlaceholderTemplate(template) {\n        (/** @type {?} */ (this))._placeholderTemplate = template;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} rootElement\n     * @return {THIS}\n     */\n    withRootElement(rootElement) {\n        /** @type {?} */\n        const element = coerceElement(rootElement);\n        if (element !== (/** @type {?} */ (this))._rootElement) {\n            if ((/** @type {?} */ (this))._rootElement) {\n                (/** @type {?} */ (this))._removeRootElementListeners((/** @type {?} */ (this))._rootElement);\n            }\n            element.addEventListener('mousedown', (/** @type {?} */ (this))._pointerDown, activeEventListenerOptions);\n            element.addEventListener('touchstart', (/** @type {?} */ (this))._pointerDown, passiveEventListenerOptions);\n            (/** @type {?} */ (this))._initialTransform = undefined;\n            (/** @type {?} */ (this))._rootElement = element;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} boundaryElement\n     * @return {THIS}\n     */\n    withBoundaryElement(boundaryElement) {\n        (/** @type {?} */ (this))._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        (/** @type {?} */ (this))._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            (/** @type {?} */ (this))._resizeSubscription = (/** @type {?} */ (this))._viewportRuler\n                .change(10)\n                .subscribe((/**\n             * @return {?}\n             */\n            () => (/** @type {?} */ (this))._containInsideBoundaryOnResize()));\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Removes the dragging functionality from the DOM element.\n     * @return {?}\n     */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            removeElement(this._rootElement);\n        }\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._boundaryElement = this._rootElement = this._placeholderTemplate =\n            this._previewTemplate = this._nextSibling = (/** @type {?} */ (null));\n    }\n    /**\n     * Checks whether the element is currently being dragged.\n     * @return {?}\n     */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /**\n     * Resets a standalone drag item to its initial position.\n     * @return {?}\n     */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param {?} handle Handle element that should be disabled.\n     * @return {?}\n     */\n    disableHandle(handle) {\n        if (this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param {?} handle Handle element to be enabled.\n     * @return {?}\n     */\n    enableHandle(handle) {\n        this._disabledHandles.delete(handle);\n    }\n    /**\n     * Sets the layout direction of the draggable item.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction\n     * @return {THIS}\n     */\n    withDirection(direction) {\n        (/** @type {?} */ (this))._direction = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the container that the item is part of.\n     * @param {?} container\n     * @return {?}\n     */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     * @return {?}\n     */\n    getFreeDragPosition() {\n        /** @type {?} */\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} value New position to be set.\n     * @return {THIS}\n     */\n    setFreeDragPosition(value) {\n        (/** @type {?} */ (this))._activeTransform = { x: 0, y: 0 };\n        (/** @type {?} */ (this))._passiveTransform.x = value.x;\n        (/** @type {?} */ (this))._passiveTransform.y = value.y;\n        if (!(/** @type {?} */ (this))._dropContainer) {\n            (/** @type {?} */ (this))._applyRootElementTransform(value.x, value.y);\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Updates the item's sort order based on the last-known pointer position.\n     * @return {?}\n     */\n    _sortFromLastPointerPosition() {\n        /** @type {?} */\n        const position = this._pointerPositionAtLastDirectionChange;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(position);\n        }\n    }\n    /**\n     * Unsubscribes from the global subscriptions.\n     * @private\n     * @return {?}\n     */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /**\n     * Destroys the preview element and its ViewRef.\n     * @private\n     * @return {?}\n     */\n    _destroyPreview() {\n        if (this._preview) {\n            removeElement(this._preview);\n        }\n        if (this._previewRef) {\n            this._previewRef.destroy();\n        }\n        this._preview = this._previewRef = (/** @type {?} */ (null));\n    }\n    /**\n     * Destroys the placeholder element and its ViewRef.\n     * @private\n     * @return {?}\n     */\n    _destroyPlaceholder() {\n        if (this._placeholder) {\n            removeElement(this._placeholder);\n        }\n        if (this._placeholderRef) {\n            this._placeholderRef.destroy();\n        }\n        this._placeholder = this._placeholderRef = (/** @type {?} */ (null));\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @private\n     * @param {?} event Browser event object that ended the sequence.\n     * @return {?}\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then((/**\n             * @return {?}\n             */\n            () => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            }));\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(this._getPointerPositionOnPage(event))\n                });\n            }));\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /**\n     * Starts the dragging sequence.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _startDragSequence(event) {\n        // Emit the event on the item before the one on the container.\n        this.started.next({ source: this });\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        if (this._dropContainer) {\n            /** @type {?} */\n            const element = this._rootElement;\n            // Grab the `nextSibling` before the preview and placeholder\n            // have been created so we don't get the preview by accident.\n            this._nextSibling = element.nextSibling;\n            /** @type {?} */\n            const preview = this._preview = this._createPreviewElement();\n            /** @type {?} */\n            const placeholder = this._placeholder = this._createPlaceholderElement();\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            element.style.display = 'none';\n            this._document.body.appendChild((/** @type {?} */ (element.parentNode)).replaceChild(placeholder, element));\n            getPreviewInsertionPoint(this._document).appendChild(preview);\n            this._dropContainer.start();\n        }\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @private\n     * @param {?} referenceElement Element that started the drag sequence.\n     * @param {?} event Browser event object that started the sequence.\n     * @return {?}\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Always stop propagation for the event that initializes\n        // the dragging sequence, in order to prevent it from potentially\n        // starting another sequence for a draggable parent somewhere up the DOM tree.\n        event.stopPropagation();\n        /** @type {?} */\n        const isDragging = this.isDragging();\n        /** @type {?} */\n        const isTouchSequence = isTouchEvent(event);\n        /** @type {?} */\n        const isAuxiliaryMouseButton = !isTouchSequence && ((/** @type {?} */ (event))).button !== 0;\n        /** @type {?} */\n        const rootElement = this._rootElement;\n        /** @type {?} */\n        const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (event.target && ((/** @type {?} */ (event.target))).draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            this._rootElementTapHighlight = rootElement.style.webkitTapHighlightColor;\n            rootElement.style.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        this._initialContainer = (/** @type {?} */ (this._dropContainer));\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry.scroll.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        }));\n        if (this._boundaryElement) {\n            this._boundaryRect = this._boundaryElement.getBoundingClientRect();\n        }\n        // If we have a custom preview template, the element won't be visible anyway so we avoid the\n        // extra `getBoundingClientRect` calls and just move the preview next to the cursor.\n        this._pickupPositionInElement = this._previewTemplate && this._previewTemplate.template ?\n            { x: 0, y: 0 } :\n            this._getPointerPositionInElement(referenceElement, event);\n        /** @type {?} */\n        const pointerPosition = this._pickupPositionOnPage = this._getPointerPositionOnPage(event);\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /**\n     * Cleans up the DOM artifacts that were added to facilitate the element being dragged.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        this._rootElement.style.display = '';\n        if (this._nextSibling) {\n            (/** @type {?} */ (this._nextSibling.parentNode)).insertBefore(this._rootElement, this._nextSibling);\n        }\n        else {\n            coerceElement(this._initialContainer.element).appendChild(this._rootElement);\n        }\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._boundaryRect = this._previewRect = undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const container = (/** @type {?} */ (this._dropContainer));\n            /** @type {?} */\n            const currentIndex = container.getItemIndex(this);\n            /** @type {?} */\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            /** @type {?} */\n            const distance = this._getDragDistance(this._getPointerPositionOnPage(event));\n            /** @type {?} */\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialContainer.getItemIndex(this),\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance\n            });\n            container.drop(this, currentIndex, this._initialContainer, isPointerOverContainer, distance);\n            this._dropContainer = this._initialContainer;\n        }));\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     * @private\n     * @param {?} __0\n     * @return {?}\n     */\n    _updateActiveDropContainer({ x, y }) {\n        // Drop container that draggable has been moved into.\n        /** @type {?} */\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer && this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: (/** @type {?} */ (this._dropContainer)) });\n                (/** @type {?} */ (this._dropContainer)).exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = (/** @type {?} */ (newContainer));\n                this._dropContainer.enter(this, x, y);\n                this.entered.next({\n                    item: this,\n                    container: (/** @type {?} */ (newContainer)),\n                    currentIndex: (/** @type {?} */ (newContainer)).getItemIndex(this)\n                });\n            }));\n        }\n        (/** @type {?} */ (this._dropContainer))._startScrollingIfNecessary(x, y);\n        (/** @type {?} */ (this._dropContainer))._sortItem(this, x, y, this._pointerDirectionDelta);\n        this._preview.style.transform =\n            getTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     * @private\n     * @return {?}\n     */\n    _createPreviewElement() {\n        /** @type {?} */\n        const previewConfig = this._previewTemplate;\n        /** @type {?} */\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        /** @type {?} */\n        let preview;\n        if (previewTemplate) {\n            /** @type {?} */\n            const viewRef = (/** @type {?} */ (previewConfig)).viewContainer.createEmbeddedView(previewTemplate, (/** @type {?} */ (previewConfig)).context);\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            preview.style.transform =\n                getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n        }\n        else {\n            /** @type {?} */\n            const element = this._rootElement;\n            /** @type {?} */\n            const elementRect = element.getBoundingClientRect();\n            preview = deepCloneNode(element);\n            preview.style.width = `${elementRect.width}px`;\n            preview.style.height = `${elementRect.height}px`;\n            preview.style.transform = getTransform(elementRect.left, elementRect.top);\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            pointerEvents: 'none',\n            // We have to reset the margin, because can throw off positioning relative to the viewport.\n            margin: '0',\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            zIndex: '1000'\n        });\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @private\n     * @return {?} Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        /** @type {?} */\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._preview.style.transform = getTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        /** @type {?} */\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return new Promise((/**\n             * @param {?} resolve\n             * @return {?}\n             */\n            resolve => {\n                /** @type {?} */\n                const handler = (/** @type {?} */ (((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    if (!event || (event.target === this._preview && event.propertyName === 'transform')) {\n                        this._preview.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                }))));\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                /** @type {?} */\n                const timeout = setTimeout((/** @type {?} */ (handler)), duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            }));\n        }));\n    }\n    /**\n     * Creates an element that will be shown instead of the current element while dragging.\n     * @private\n     * @return {?}\n     */\n    _createPlaceholderElement() {\n        /** @type {?} */\n        const placeholderConfig = this._placeholderTemplate;\n        /** @type {?} */\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        /** @type {?} */\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = (/** @type {?} */ (placeholderConfig)).viewContainer.createEmbeddedView(placeholderTemplate, (/** @type {?} */ (placeholderConfig)).context);\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @private\n     * @param {?} referenceElement Element that initiated the dragging.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    _getPointerPositionInElement(referenceElement, event) {\n        /** @type {?} */\n        const elementRect = this._rootElement.getBoundingClientRect();\n        /** @type {?} */\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        /** @type {?} */\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        /** @type {?} */\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        /** @type {?} */\n        const x = point.pageX - referenceRect.left - this._scrollPosition.left;\n        /** @type {?} */\n        const y = point.pageY - referenceRect.top - this._scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y\n        };\n    }\n    /**\n     * Determines the point of the page that was touched by the user.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _getPointerPositionOnPage(event) {\n        // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n        /** @type {?} */\n        const point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n        return {\n            x: point.pageX - this._scrollPosition.left,\n            y: point.pageY - this._scrollPosition.top\n        };\n    }\n    /**\n     * Gets the pointer position on the page, accounting for any position constraints.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _getConstrainedPointerPosition(event) {\n        /** @type {?} */\n        const point = this._getPointerPositionOnPage(event);\n        /** @type {?} */\n        const constrainedPoint = this.constrainPosition ? this.constrainPosition(point, this) : point;\n        /** @type {?} */\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            constrainedPoint.y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            constrainedPoint.x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            /** @type {?} */\n            const boundaryRect = this._boundaryRect;\n            /** @type {?} */\n            const previewRect = (/** @type {?} */ (this._previewRect));\n            /** @type {?} */\n            const minY = boundaryRect.top + pickupY;\n            /** @type {?} */\n            const maxY = boundaryRect.bottom - (previewRect.height - pickupY);\n            /** @type {?} */\n            const minX = boundaryRect.left + pickupX;\n            /** @type {?} */\n            const maxX = boundaryRect.right - (previewRect.width - pickupX);\n            constrainedPoint.x = clamp(constrainedPoint.x, minX, maxX);\n            constrainedPoint.y = clamp(constrainedPoint.y, minY, maxY);\n        }\n        return constrainedPoint;\n    }\n    /**\n     * Updates the current drag delta, based on the user's current pointer position on the page.\n     * @private\n     * @param {?} pointerPositionOnPage\n     * @return {?}\n     */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        /** @type {?} */\n        const delta = this._pointerDirectionDelta;\n        /** @type {?} */\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        /** @type {?} */\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        /** @type {?} */\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /**\n     * Toggles the native drag interactions, based on how many handles are registered.\n     * @private\n     * @return {?}\n     */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        /** @type {?} */\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /**\n     * Removes the manually-added event listeners from the root element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @private\n     * @param {?} x New transform value along the X axis.\n     * @param {?} y New transform value along the Y axis.\n     * @return {?}\n     */\n    _applyRootElementTransform(x, y) {\n        /** @type {?} */\n        const transform = getTransform(x, y);\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        if (this._initialTransform == null) {\n            this._initialTransform = this._rootElement.style.transform || '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        this._rootElement.style.transform = this._initialTransform ?\n            transform + ' ' + this._initialTransform : transform;\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @private\n     * @param {?} currentPosition Current position of the user's pointer.\n     * @return {?}\n     */\n    _getDragDistance(currentPosition) {\n        /** @type {?} */\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /**\n     * Cleans up any cached element dimensions that we don't need after dragging has stopped.\n     * @private\n     * @return {?}\n     */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     * @private\n     * @return {?}\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        /** @type {?} */\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        /** @type {?} */\n        const elementRect = this._rootElement.getBoundingClientRect();\n        /** @type {?} */\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        /** @type {?} */\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        /** @type {?} */\n        const topOverflow = boundaryRect.top - elementRect.top;\n        /** @type {?} */\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param {?} x Desired position of the element along the X axis.\n * @param {?} y Desired position of the element along the Y axis.\n * @return {?}\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/**\n * Creates a deep clone of an element.\n * @param {?} node\n * @return {?}\n */\nfunction deepCloneNode(node) {\n    /** @type {?} */\n    const clone = (/** @type {?} */ (node.cloneNode(true)));\n    /** @type {?} */\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    /** @type {?} */\n    const descendantCanvases = node.querySelectorAll('canvas');\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    // `cloneNode` won't transfer the content of `canvas` elements so we have to do it ourselves.\n    // We match up the cloned canvas to their sources using their index in the DOM.\n    if (descendantCanvases.length) {\n        /** @type {?} */\n        const cloneCanvases = clone.querySelectorAll('canvas');\n        for (let i = 0; i < descendantCanvases.length; i++) {\n            /** @type {?} */\n            const correspondingCloneContext = cloneCanvases[i].getContext('2d');\n            if (correspondingCloneContext) {\n                correspondingCloneContext.drawImage(descendantCanvases[i], 0, 0);\n            }\n        }\n    }\n    return clone;\n}\n/**\n * Clamps a value between a minimum and a maximum.\n * @param {?} value\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * Helper to remove an element from the DOM and to do all the necessary null checks.\n * @param {?} element Element to be removed.\n * @return {?}\n */\nfunction removeElement(element) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n/**\n * Determines whether an event is a touch event.\n * @param {?} event\n * @return {?}\n */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the element into which the drag preview should be inserted.\n * @param {?} documentRef\n * @return {?}\n */\nfunction getPreviewInsertionPoint(documentRef) {\n    // We can't use the body if the user is in fullscreen mode,\n    // because the preview will render under the fullscreen element.\n    // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n    return documentRef.fullscreenElement ||\n        documentRef.webkitFullscreenElement ||\n        documentRef.mozFullScreenElement ||\n        documentRef.msFullscreenElement ||\n        documentRef.body;\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n * @param {?} viewRef\n * @param {?} _document\n * @return {?}\n */\nfunction getRootNode(viewRef, _document) {\n    /** @type {?} */\n    const rootNode = viewRef.rootNodes[0];\n    if (rootNode.nodeType !== _document.ELEMENT_NODE) {\n        /** @type {?} */\n        const wrapper = _document.createElement('div');\n        wrapper.appendChild(rootNode);\n        return wrapper;\n    }\n    return (/** @type {?} */ (rootNode));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Moves an item one index in an array to another.\n * @template T\n * @param {?} array Array in which to move the item.\n * @param {?} fromIndex Starting index of the item.\n * @param {?} toIndex Index to which the item should be moved.\n * @return {?}\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    /** @type {?} */\n    const from = clamp$1(fromIndex, array.length - 1);\n    /** @type {?} */\n    const to = clamp$1(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    /** @type {?} */\n    const target = array[from];\n    /** @type {?} */\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @template T\n * @param {?} currentArray Array from which to transfer the item.\n * @param {?} targetArray Array into which to put the item.\n * @param {?} currentIndex Index of the item in its current array.\n * @param {?} targetIndex Index at which to insert the item.\n * @return {?}\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    /** @type {?} */\n    const from = clamp$1(currentIndex, currentArray.length - 1);\n    /** @type {?} */\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @template T\n * @param {?} currentArray Array from which to copy the item.\n * @param {?} targetArray Array into which is copy the item.\n * @param {?} currentIndex Index of the item in its current array.\n * @param {?} targetIndex Index at which to insert the item.\n *\n * @return {?}\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    /** @type {?} */\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/**\n * Clamps a number between zero and a maximum.\n * @param {?} value\n * @param {?} max\n * @return {?}\n */\nfunction clamp$1(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique ids for drop refs.\n * @type {?}\n */\nlet _uniqueIdCounter = 0;\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n * @type {?}\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n * @type {?}\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Number of pixels to scroll for each frame when auto-scrolling an element.\n * The value comes from trying it out manually until it feels right.\n * @type {?}\n */\nconst AUTO_SCROLL_STEP = 2;\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n * \\@docs-private\n * @template T\n */\nclass DropListRef {\n    /**\n     * @param {?} element\n     * @param {?} _dragDropRegistry\n     * @param {?} _document\n     * @param {?=} _ngZone\n     * @param {?=} _viewportRuler\n     */\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /**\n         * Unique ID for the drop list.\n         * @deprecated No longer being used. To be removed.\n         * \\@breaking-change 8.0.0\n         */\n        this.id = `cdk-drop-list-ref-${_uniqueIdCounter++}`;\n        /**\n         * Whether starting a dragging sequence from this container is disabled.\n         */\n        this.disabled = false;\n        /**\n         * Whether sorting items within the list is disabled.\n         */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = (/**\n         * @return {?}\n         */\n        () => true);\n        /**\n         * Emits right before dragging has started.\n         */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /**\n         * Emits when the user drops an item inside the container.\n         */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is swapping items while actively dragging.\n         */\n        this.sorted = new Subject();\n        /**\n         * Whether an item in the list is being dragged.\n         */\n        this._isDragging = false;\n        /**\n         * Cache of the dimensions of all the items inside the container.\n         */\n        this._itemPositions = [];\n        /**\n         * Keeps track of the container's scroll position.\n         */\n        this._scrollPosition = { top: 0, left: 0 };\n        /**\n         * Keeps track of the scroll position of the viewport.\n         */\n        this._viewportScrollPosition = { top: 0, left: 0 };\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as\n         * well as what direction the pointer was moving in when the swap occured.\n         */\n        this._previousSwap = { drag: (/** @type {?} */ (null)), delta: 0 };\n        /**\n         * Drop lists that are connected to the current one.\n         */\n        this._siblings = [];\n        /**\n         * Direction in which the list is oriented.\n         */\n        this._orientation = 'vertical';\n        /**\n         * Connected siblings that currently have a dragged item.\n         */\n        this._activeSiblings = new Set();\n        /**\n         * Layout direction of the drop list.\n         */\n        this._direction = 'ltr';\n        /**\n         * Subscription to the window being scrolled.\n         */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /**\n         * Vertical direction in which the list is currently scrolling.\n         */\n        this._verticalScrollDirection = 0 /* NONE */;\n        /**\n         * Horizontal direction in which the list is currently scrolling.\n         */\n        this._horizontalScrollDirection = 0 /* NONE */;\n        /**\n         * Used to signal to the current auto-scroll sequence when to stop.\n         */\n        this._stopScrollTimers = new Subject();\n        /**\n         * Handles the container being scrolled. Has to be an arrow function to preserve the context.\n         */\n        this._handleScroll = (/**\n         * @return {?}\n         */\n        () => {\n            if (!this.isDragging()) {\n                return;\n            }\n            /** @type {?} */\n            const element = coerceElement(this.element);\n            this._updateAfterScroll(this._scrollPosition, element.scrollTop, element.scrollLeft);\n        });\n        /**\n         * Starts the interval that'll auto-scroll the element.\n         */\n        this._startScrollInterval = (/**\n         * @return {?}\n         */\n        () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const node = this._scrollNode;\n                if (this._verticalScrollDirection === 1 /* UP */) {\n                    incrementVerticalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._verticalScrollDirection === 2 /* DOWN */) {\n                    incrementVerticalScroll(node, AUTO_SCROLL_STEP);\n                }\n                if (this._horizontalScrollDirection === 1 /* LEFT */) {\n                    incrementHorizontalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._horizontalScrollDirection === 2 /* RIGHT */) {\n                    incrementHorizontalScroll(node, AUTO_SCROLL_STEP);\n                }\n            }));\n        });\n        /** @type {?} */\n        const nativeNode = this.element = coerceElement(element);\n        this._shadowRoot = getShadowRoot(nativeNode) || _document;\n        _dragDropRegistry.registerDropContainer(this);\n    }\n    /**\n     * Removes the drop list functionality from the DOM element.\n     * @return {?}\n     */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._removeListeners();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = (/** @type {?} */ (null));\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /**\n     * Whether an item from this list is currently being dragged.\n     * @return {?}\n     */\n    isDragging() {\n        return this._isDragging;\n    }\n    /**\n     * Starts dragging an item.\n     * @return {?}\n     */\n    start() {\n        /** @type {?} */\n        const element = coerceElement(this.element);\n        this.beforeStarted.next();\n        this._isDragging = true;\n        this._cacheItems();\n        this._siblings.forEach((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        sibling => sibling._startReceiving(this)));\n        this._removeListeners();\n        // @breaking-change 9.0.0 Remove check for _ngZone once it's marked as a required param.\n        if (this._ngZone) {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => element.addEventListener('scroll', this._handleScroll)));\n        }\n        else {\n            element.addEventListener('scroll', this._handleScroll);\n        }\n        // @breaking-change 9.0.0 Remove check for _viewportRuler once it's marked as a required param.\n        if (this._viewportRuler) {\n            this._listenToScrollEvents();\n        }\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @return {?}\n     */\n    enter(item, pointerX, pointerY) {\n        this.start();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        /** @type {?} */\n        let newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;\n        if (newIndex === -1) {\n            // We use the coordinates of where the item entered the drop\n            // zone to figure out at which index it should be inserted.\n            newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n        }\n        /** @type {?} */\n        const activeDraggables = this._activeDraggables;\n        /** @type {?} */\n        const currentIndex = activeDraggables.indexOf(item);\n        /** @type {?} */\n        const placeholder = item.getPlaceholderElement();\n        /** @type {?} */\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            /** @type {?} */\n            const element = newPositionReference.getRootElement();\n            (/** @type {?} */ (element.parentElement)).insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            coerceElement(this.element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that the positions were already cached when we called `start` above,\n        // but we need to refresh them since the amount of items has changed.\n        this._cacheItemPositions();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * \\@breaking-change 9.0.0 `distance` parameter to become required.\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @param {?} isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param {?=} distance Distance the user has dragged since the start of the dragging sequence.\n     * @return {?}\n     */\n    drop(item, currentIndex, previousContainer, isPointerOverContainer, distance = { x: 0, y: 0 }) {\n        this._reset();\n        this.dropped.next({\n            item,\n            currentIndex,\n            previousIndex: previousContainer.getItemIndex(item),\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} items Items that are a part of this list.\n     * @return {THIS}\n     */\n    withItems(items) {\n        (/** @type {?} */ (this))._draggables = items;\n        items.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => item._withDropContainer((/** @type {?} */ (this)))));\n        if ((/** @type {?} */ (this)).isDragging()) {\n            (/** @type {?} */ (this))._cacheItems();\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the layout direction of the drop list.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction\n     * @return {THIS}\n     */\n    withDirection(direction) {\n        (/** @type {?} */ (this))._direction = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} connectedTo Other containers that the current containers should be connected to.\n     * @return {THIS}\n     */\n    connectedTo(connectedTo) {\n        (/** @type {?} */ (this))._siblings = connectedTo.slice();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the orientation of the container.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} orientation New orientation for the container.\n     * @return {THIS}\n     */\n    withOrientation(orientation) {\n        (/** @type {?} */ (this))._orientation = orientation;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    getItemIndex(item) {\n        if (!this._isDragging) {\n            return this._draggables.indexOf(item);\n        }\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        /** @type {?} */\n        const items = this._orientation === 'horizontal' && this._direction === 'rtl' ?\n            this._itemPositions.slice().reverse() : this._itemPositions;\n        return findIndex(items, (/**\n         * @param {?} currentItem\n         * @return {?}\n         */\n        currentItem => currentItem.drag === item));\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     * @return {?}\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param {?} item Item to be sorted.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?} pointerDelta Direction in which the pointer is moving along each axis.\n     * @return {?}\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled || !this._isPointerNearDropContainer(pointerX, pointerY)) {\n            return;\n        }\n        /** @type {?} */\n        const siblings = this._itemPositions;\n        /** @type {?} */\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return;\n        }\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        const currentIndex = findIndex(siblings, (/**\n         * @param {?} currentItem\n         * @return {?}\n         */\n        currentItem => currentItem.drag === item));\n        /** @type {?} */\n        const siblingAtNewPosition = siblings[newIndex];\n        /** @type {?} */\n        const currentPosition = siblings[currentIndex].clientRect;\n        /** @type {?} */\n        const newPosition = siblingAtNewPosition.clientRect;\n        /** @type {?} */\n        const delta = currentIndex > newIndex ? 1 : -1;\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n        // How many pixels the item's placeholder should be offset.\n        /** @type {?} */\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        /** @type {?} */\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        /** @type {?} */\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        this.sorted.next({\n            previousIndex: currentIndex,\n            currentIndex: newIndex,\n            container: this,\n            item\n        });\n        siblings.forEach((/**\n         * @param {?} sibling\n         * @param {?} index\n         * @return {?}\n         */\n        (sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            /** @type {?} */\n            const isDraggedItem = sibling.drag === item;\n            /** @type {?} */\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            /** @type {?} */\n            const elementToOffset = isDraggedItem ? item.getPlaceholderElement() :\n                sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = `translate3d(${Math.round(sibling.offset)}px, 0, 0)`;\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = `translate3d(0, ${Math.round(sibling.offset)}px, 0)`;\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        }));\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param {?} pointerX User's pointer position along the x axis.\n     * @param {?} pointerY User's pointer position along the y axis.\n     * @return {?}\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        /** @type {?} */\n        let scrollNode;\n        /** @type {?} */\n        let verticalScrollDirection = 0 /* NONE */;\n        /** @type {?} */\n        let horizontalScrollDirection = 0 /* NONE */;\n        // Check whether we should start scrolling the container.\n        if (this._isPointerNearDropContainer(pointerX, pointerY)) {\n            /** @type {?} */\n            const element = coerceElement(this.element);\n            [verticalScrollDirection, horizontalScrollDirection] =\n                getElementScrollDirections(element, this._clientRect, pointerX, pointerY);\n            if (verticalScrollDirection || horizontalScrollDirection) {\n                scrollNode = element;\n            }\n        }\n        // @breaking-change 9.0.0 Remove null check for _viewportRuler once it's a required parameter.\n        // Otherwise check if we can start scrolling the viewport.\n        if (this._viewportRuler && !verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            /** @type {?} */\n            const clientRect = { width, height, top: 0, right: width, bottom: height, left: 0 };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection ||\n            horizontalScrollDirection !== this._horizontalScrollDirection ||\n            scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                // @breaking-change 9.0.0 Remove null check for `_ngZone` once it is made required.\n                if (this._ngZone) {\n                    this._ngZone.runOutsideAngular(this._startScrollInterval);\n                }\n                else {\n                    this._startScrollInterval();\n                }\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /**\n     * Stops any currently-running auto-scroll sequences.\n     * @return {?}\n     */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /**\n     * Caches the position of the drop list.\n     * @private\n     * @return {?}\n     */\n    _cacheOwnPosition() {\n        /** @type {?} */\n        const element = coerceElement(this.element);\n        this._clientRect = getMutableClientRect(element);\n        this._scrollPosition = { top: element.scrollTop, left: element.scrollLeft };\n    }\n    /**\n     * Refreshes the position cache of the items and sibling containers.\n     * @private\n     * @return {?}\n     */\n    _cacheItemPositions() {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables.map((/**\n         * @param {?} drag\n         * @return {?}\n         */\n        drag => {\n            /** @type {?} */\n            const elementToMeasure = this._dragDropRegistry.isDragging(drag) ?\n                // If the element is being dragged, we have to measure the\n                // placeholder, because the element is hidden.\n                drag.getPlaceholderElement() :\n                drag.getRootElement();\n            return { drag, offset: 0, clientRect: getMutableClientRect(elementToMeasure) };\n        })).sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => {\n            return isHorizontal ? a.clientRect.left - b.clientRect.left :\n                a.clientRect.top - b.clientRect.top;\n        }));\n    }\n    /**\n     * Resets the container to its initial state.\n     * @private\n     * @return {?}\n     */\n    _reset() {\n        this._isDragging = false;\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => item.getRootElement().style.transform = ''));\n        this._siblings.forEach((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        sibling => sibling._stopReceiving(this)));\n        this._activeDraggables = [];\n        this._itemPositions = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._stopScrolling();\n        this._removeListeners();\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @private\n     * @param {?} currentIndex Index of the item currently being dragged.\n     * @param {?} siblings All of the items in the list.\n     * @param {?} delta Direction in which the user is moving.\n     * @return {?}\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        const currentPosition = siblings[currentIndex].clientRect;\n        /** @type {?} */\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        /** @type {?} */\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            /** @type {?} */\n            const start = isHorizontal ? 'left' : 'top';\n            /** @type {?} */\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Checks whether the pointer coordinates are close to the drop container.\n     * @private\n     * @param {?} pointerX Coordinates along the X axis.\n     * @param {?} pointerY Coordinates along the Y axis.\n     * @return {?}\n     */\n    _isPointerNearDropContainer(pointerX, pointerY) {\n        const { top, right, bottom, left, width, height } = this._clientRect;\n        /** @type {?} */\n        const xThreshold = width * DROP_PROXIMITY_THRESHOLD;\n        /** @type {?} */\n        const yThreshold = height * DROP_PROXIMITY_THRESHOLD;\n        return pointerY > top - yThreshold && pointerY < bottom + yThreshold &&\n            pointerX > left - xThreshold && pointerX < right + xThreshold;\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @private\n     * @param {?} currentPosition Current position of the item.\n     * @param {?} newPosition Position of the item where the current item should be moved.\n     * @param {?} delta Direction in which the user is moving.\n     * @return {?}\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        let itemOffset = isHorizontal ? newPosition.left - currentPosition.left :\n            newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal ? newPosition.width - currentPosition.width :\n                newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @private\n     * @param {?} item Item that is being sorted.\n     * @param {?} pointerX Position of the user's pointer along the X axis.\n     * @param {?} pointerY Position of the user's pointer along the Y axis.\n     * @param {?=} delta Direction in which the user is moving their pointer.\n     * @return {?}\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        return findIndex(this._itemPositions, (/**\n         * @param {?} __0\n         * @param {?} _\n         * @param {?} array\n         * @return {?}\n         */\n        ({ drag, clientRect }, _, array) => {\n            if (drag === item) {\n                // If there's only one item left in the container, it must be\n                // the dragged item itself so we use it as a reference.\n                return array.length < 2;\n            }\n            if (delta) {\n                /** @type {?} */\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, and they didn't change\n                // the direction in which they're dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag && direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal ?\n                // Round these down since most browsers report client rects with\n                // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                pointerX >= Math.floor(clientRect.left) && pointerX <= Math.floor(clientRect.right) :\n                pointerY >= Math.floor(clientRect.top) && pointerY <= Math.floor(clientRect.bottom);\n        }));\n    }\n    /**\n     * Caches the current items in the list and their positions.\n     * @private\n     * @return {?}\n     */\n    _cacheItems() {\n        this._activeDraggables = this._draggables.slice();\n        this._cacheItemPositions();\n        this._cacheOwnPosition();\n    }\n    /**\n     * Updates the internal state of the container after a scroll event has happened.\n     * @private\n     * @param {?} scrollPosition Object that is keeping track of the scroll position.\n     * @param {?} newTop New top scroll position.\n     * @param {?} newLeft New left scroll position.\n     * @param {?=} extraClientRect Extra `ClientRect` object that should be updated, in addition to the\n     *  ones of the drag items. Useful when the viewport has been scrolled and we also need to update\n     *  the `ClientRect` of the list.\n     * @return {?}\n     */\n    _updateAfterScroll(scrollPosition, newTop, newLeft, extraClientRect) {\n        /** @type {?} */\n        const topDifference = scrollPosition.top - newTop;\n        /** @type {?} */\n        const leftDifference = scrollPosition.left - newLeft;\n        if (extraClientRect) {\n            adjustClientRect(extraClientRect, topDifference, leftDifference);\n        }\n        // Since we know the amount that the user has scrolled we can shift all of the client rectangles\n        // ourselves. This is cheaper than re-measuring everything and we can avoid inconsistent\n        // behavior where we might be measuring the element before its position has changed.\n        this._itemPositions.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ clientRect }) => {\n            adjustClientRect(clientRect, topDifference, leftDifference);\n        }));\n        // We need two loops for this, because we want all of the cached\n        // positions to be up-to-date before we re-sort the item.\n        this._itemPositions.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ drag }) => {\n            if (this._dragDropRegistry.isDragging(drag)) {\n                // We need to re-sort the item manually, because the pointer move\n                // events won't be dispatched while the user is scrolling.\n                drag._sortFromLastPointerPosition();\n            }\n        }));\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n    }\n    /**\n     * Removes the event listeners associated with this drop list.\n     * @private\n     * @return {?}\n     */\n    _removeListeners() {\n        coerceElement(this.element).removeEventListener('scroll', this._handleScroll);\n        this._viewportScrollSubscription.unsubscribe();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param {?} x Pointer position along the X axis.\n     * @param {?} y Pointer position along the Y axis.\n     * @return {?}\n     */\n    _isOverContainer(x, y) {\n        return isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param {?} item Drag item that is being moved.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        sibling => sibling._canReceive(item, x, y)));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param {?} item Item that is being dragged into the list.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    _canReceive(item, x, y) {\n        if (!this.enterPredicate(item, this) || !isInsideClientRect(this._clientRect, x, y)) {\n            return false;\n        }\n        /** @type {?} */\n        const elementFromPoint = (/** @type {?} */ (this._shadowRoot.elementFromPoint(x, y)));\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        /** @type {?} */\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param {?} sibling Sibling in which dragging has started.\n     * @return {?}\n     */\n    _startReceiving(sibling) {\n        /** @type {?} */\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling)) {\n            activeSiblings.add(sibling);\n            this._cacheOwnPosition();\n            this._listenToScrollEvents();\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param {?} sibling Sibling whose dragging has stopped.\n     * @return {?}\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     * @private\n     * @return {?}\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollPosition = (/** @type {?} */ (this._viewportRuler)).getViewportScrollPosition();\n        this._viewportScrollSubscription = this._dragDropRegistry.scroll.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.isDragging()) {\n                /** @type {?} */\n                const newPosition = (/** @type {?} */ (this._viewportRuler)).getViewportScrollPosition();\n                this._updateAfterScroll(this._viewportScrollPosition, newPosition.top, newPosition.left, this._clientRect);\n            }\n            else if (this.isReceiving()) {\n                this._cacheOwnPosition();\n            }\n        }));\n    }\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param {?} clientRect `ClientRect` that should be updated.\n * @param {?} top Amount to add to the `top` position.\n * @param {?} left Amount to add to the `left` position.\n * @return {?}\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Finds the index of an item that matches a predicate function. Used as an equivalent\n * of `Array.prototype.findIndex` which isn't part of the standard Google typings.\n * @template T\n * @param {?} array Array in which to look for matches.\n * @param {?} predicate Function used to determine whether an item is a match.\n * @return {?}\n */\nfunction findIndex(array, predicate) {\n    for (let i = 0; i < array.length; i++) {\n        if (predicate(array[i], i, array)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param {?} clientRect ClientRect that is being checked.\n * @param {?} x Coordinates along the X axis.\n * @param {?} y Coordinates along the Y axis.\n * @return {?}\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Gets a mutable version of an element's bounding `ClientRect`.\n * @param {?} element\n * @return {?}\n */\nfunction getMutableClientRect(element) {\n    /** @type {?} */\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height\n    };\n}\n/**\n * Increments the vertical scroll position of a node.\n * @param {?} node Node whose scroll position should change.\n * @param {?} amount Amount of pixels that the `node` should be scrolled.\n * @return {?}\n */\nfunction incrementVerticalScroll(node, amount) {\n    if (node === window) {\n        ((/** @type {?} */ (node))).scrollBy(0, amount);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        ((/** @type {?} */ (node))).scrollTop += amount;\n    }\n}\n/**\n * Increments the horizontal scroll position of a node.\n * @param {?} node Node whose scroll position should change.\n * @param {?} amount Amount of pixels that the `node` should be scrolled.\n * @return {?}\n */\nfunction incrementHorizontalScroll(node, amount) {\n    if (node === window) {\n        ((/** @type {?} */ (node))).scrollBy(amount, 0);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        ((/** @type {?} */ (node))).scrollLeft += amount;\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param {?} clientRect Dimensions of the node.\n * @param {?} pointerY Position of the user's pointer along the y axis.\n * @return {?}\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    /** @type {?} */\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* DOWN */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param {?} clientRect Dimensions of the node.\n * @param {?} pointerX Position of the user's pointer along the x axis.\n * @return {?}\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    /** @type {?} */\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* RIGHT */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param {?} element Element for which we should calculate the scroll direction.\n * @param {?} clientRect Bounding client rectangle of the element.\n * @param {?} pointerX Position of the user's pointer along the x axis.\n * @param {?} pointerY Position of the user's pointer along the y axis.\n * @return {?}\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    /** @type {?} */\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    /** @type {?} */\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    /** @type {?} */\n    let verticalScrollDirection = 0 /* NONE */;\n    /** @type {?} */\n    let horizontalScrollDirection = 0 /* NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        /** @type {?} */\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        /** @type {?} */\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n/**\n * Gets the shadow root of an element, if any.\n * @param {?} element\n * @return {?}\n */\nfunction getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        /** @type {?} */\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        if (rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Event options that can be used to bind an active, capturing event.\n * @type {?}\n */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * \\@docs-private\n * @template I, C\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _document\n     */\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /**\n         * Registered drop container instances.\n         */\n        this._dropInstances = new Set();\n        /**\n         * Registered drag item instances.\n         */\n        this._dragInstances = new Set();\n        /**\n         * Drag item instances that are currently being dragged.\n         */\n        this._activeDragInstances = new Set();\n        /**\n         * Keeps track of the event listeners that we've bound to the `document`.\n         */\n        this._globalListeners = new Map();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Emits when the viewport has been scrolled while the user is dragging an item.\n         */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this._activeDragInstances.size) {\n                event.preventDefault();\n            }\n        });\n        this._document = _document;\n    }\n    /**\n     * Adds a drop container to the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            if (this.getDropContainer(drop.id)) {\n                throw Error(`Drop instance with id \"${drop.id}\" has already been registered.`);\n            }\n            this._dropInstances.add(drop);\n        }\n    }\n    /**\n     * Adds a drag item instance to the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n            }));\n        }\n    }\n    /**\n     * Removes a drop container from the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /**\n     * Removes a drag item instance from the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param {?} drag Drag instance which is being dragged.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.has(drag)) {\n            return;\n        }\n        this._activeDragInstances.add(drag);\n        if (this._activeDragInstances.size === 1) {\n            /** @type {?} */\n            const isTouchEvent = event.type.startsWith('touch');\n            /** @type {?} */\n            const moveEvent = isTouchEvent ? 'touchmove' : 'mousemove';\n            /** @type {?} */\n            const upEvent = isTouchEvent ? 'touchend' : 'mouseup';\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(moveEvent, {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => this.pointerMove.next((/** @type {?} */ (e)))),\n                options: activeCapturingEventOptions\n            })\n                .set(upEvent, {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => this.pointerUp.next((/** @type {?} */ (e)))),\n                options: true\n            })\n                .set('scroll', {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => this.scroll.next(e)),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions\n            });\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                this._globalListeners.forEach((/**\n                 * @param {?} config\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                }));\n            }));\n        }\n    }\n    /**\n     * Stops dragging a drag item instance.\n     * @param {?} drag\n     * @return {?}\n     */\n    stopDragging(drag) {\n        this._activeDragInstances.delete(drag);\n        if (this._activeDragInstances.size === 0) {\n            this._clearGlobalListeners();\n        }\n    }\n    /**\n     * Gets whether a drag item instance is currently being dragged.\n     * @param {?} drag\n     * @return {?}\n     */\n    isDragging(drag) {\n        return this._activeDragInstances.has(drag);\n    }\n    /**\n     * Gets a drop container by its id.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 8.0.0\n     * @param {?} id\n     * @return {?}\n     */\n    getDropContainer(id) {\n        return Array.from(this._dropInstances).find((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        instance => instance.id === id));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._dragInstances.forEach((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        instance => this.removeDragItem(instance)));\n        this._dropInstances.forEach((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        instance => this.removeDropContainer(instance)));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /**\n     * Clears out the global event listeners from the `document`.\n     * @private\n     * @return {?}\n     */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((/**\n         * @param {?} config\n         * @param {?} name\n         * @return {?}\n         */\n        (config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        }));\n        this._globalListeners.clear();\n    }\n}\nDragDropRegistry.ɵfac = function DragDropRegistry_Factory(t) { return new (t || DragDropRegistry)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\nDragDropRegistry.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: DragDropRegistry, factory: DragDropRegistry.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nDragDropRegistry.ctorParameters = () => [\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ DragDropRegistry.ngInjectableDef = ɵɵdefineInjectable({ factory: function DragDropRegistry_Factory() { return new DragDropRegistry(ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: DragDropRegistry, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default configuration to be used when creating a `DragRef`.\n * @type {?}\n */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    /**\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?} _dragDropRegistry\n     */\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @template T\n     * @param {?} element Element to which to attach the dragging functionality.\n     * @param {?=} config Object used to configure the dragging behavior.\n     * @return {?}\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @template T\n     * @param {?} element Element to which to attach the drop list functionality.\n     * @return {?}\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n}\nDragDrop.ɵfac = function DragDrop_Factory(t) { return new (t || DragDrop)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DragDropRegistry)); };\nDragDrop.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: DragDrop, factory: DragDrop.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nDragDrop.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewportRuler },\n    { type: DragDropRegistry }\n];\n/** @nocollapse */ DragDrop.ngInjectableDef = ɵɵdefineInjectable({ factory: function DragDrop_Factory() { return new DragDrop(ɵɵinject(DOCUMENT), ɵɵinject(NgZone), ɵɵinject(ViewportRuler), ɵɵinject(DragDropRegistry)); }, token: DragDrop, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDrop, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.ViewportRuler }, { type: DragDropRegistry }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that is used to provide a CdkDropList instance to CdkDrag.\n * Used for avoiding circular imports.\n * @type {?}\n */\nconst CDK_DROP_LIST = new InjectionToken('CDK_DROP_LIST');\n/**\n * Injection token that is used to provide a CdkDropList instance to CdkDrag.\n * Used for avoiding circular imports.\n * @deprecated Use `CDK_DROP_LIST` instead.\n * \\@breaking-change 8.0.0\n * @type {?}\n */\nconst CDK_DROP_LIST_CONTAINER = CDK_DROP_LIST;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Handle that can be used to drag and CdkDrag instance.\n */\nclass CdkDragHandle {\n    /**\n     * @param {?} element\n     * @param {?=} parentDrag\n     */\n    constructor(element, parentDrag) {\n        this.element = element;\n        /**\n         * Emits when the state of the handle has changed.\n         */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        this._parentDrag = parentDrag;\n        toggleNativeDragInteractions(element.nativeElement, false);\n    }\n    /**\n     * Whether starting to drag through this handle is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nCdkDragHandle.ɵfac = function CdkDragHandle_Factory(t) { return new (t || CdkDragHandle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_PARENT, 8)); };\nCdkDragHandle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragHandle, selectors: [[\"\", \"cdkDragHandle\", \"\"]], hostAttrs: [1, \"cdk-drag-handle\"], inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] } });\n/** @nocollapse */\nCdkDragHandle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_PARENT,] }, { type: Optional }] }\n];\nCdkDragHandle.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDragHandleDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragHandle, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDragHandle]',\n                host: {\n                    'class': 'cdk-drag-handle'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DRAG_PARENT]\n            }, {\n                type: Optional\n            }] }]; }, { disabled: [{\n            type: Input,\n            args: ['cdkDragHandleDisabled']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n * @template T\n */\nclass CdkDragPlaceholder {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPlaceholder.ɵfac = function CdkDragPlaceholder_Factory(t) { return new (t || CdkDragPlaceholder)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkDragPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPlaceholder, selectors: [[\"ng-template\", \"cdkDragPlaceholder\", \"\"]], inputs: { data: \"data\" } });\n/** @nocollapse */\nCdkDragPlaceholder.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPlaceholder.propDecorators = {\n    data: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPlaceholder]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { data: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n * @template T\n */\nclass CdkDragPreview {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPreview.ɵfac = function CdkDragPreview_Factory(t) { return new (t || CdkDragPreview)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkDragPreview.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPreview, selectors: [[\"ng-template\", \"cdkDragPreview\", \"\"]], inputs: { data: \"data\" } });\n/** @nocollapse */\nCdkDragPreview.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPreview.propDecorators = {\n    data: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragPreview, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPreview]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { data: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to configure the behavior of `CdkDrag`.\n * @type {?}\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG', {\n    providedIn: 'root',\n    factory: CDK_DRAG_CONFIG_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction CDK_DRAG_CONFIG_FACTORY() {\n    return { dragStartThreshold: 5, pointerDirectionChangeThreshold: 5 };\n}\n/**\n * Element that can be moved inside a CdkDropList container.\n * @template T\n */\nclass CdkDrag {\n    /**\n     * @param {?} element\n     * @param {?} dropContainer\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewContainerRef\n     * @param {?} config\n     * @param {?} _dir\n     * @param {?} dragDrop\n     * @param {?} _changeDetectorRef\n     */\n    constructor(element, dropContainer, _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._destroyed = new Subject();\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /**\n         * Emits when the user starts dragging the item.\n         */\n        this.started = new EventEmitter();\n        /**\n         * Emits when the user has released a drag item, before any animations have started.\n         */\n        this.released = new EventEmitter();\n        /**\n         * Emits when the user stops dragging an item in the container.\n         */\n        this.ended = new EventEmitter();\n        /**\n         * Emits when the user has moved the item into a new container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes the item its container by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /**\n         * Emits when the user drops the item inside a container.\n         */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const subscription = this._dragRef.moved.pipe(map((/**\n             * @param {?} movedEvent\n             * @return {?}\n             */\n            movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance\n            })))).subscribe(observer);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n            });\n        }));\n        this._dragRef = dragDrop.createDrag(element, config);\n        this._dragRef.data = this;\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /**\n     * Selector that will be used to determine the element to which the draggable's position will\n     * be constrained. Matching starts from the element's parent and goes up the DOM until a matching\n     * element has been found\n     * @deprecated Use `boundaryElement` instead.\n     * \\@breaking-change 9.0.0\n     * @return {?}\n     */\n    get boundaryElementSelector() {\n        return typeof this.boundaryElement === 'string' ? this.boundaryElement : (/** @type {?} */ (undefined));\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    set boundaryElementSelector(selector) {\n        this.boundaryElement = selector;\n    }\n    /**\n     * Whether starting to drag this element is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /**\n     * Resets a standalone drag item to its initial position.\n     * @return {?}\n     */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     * @return {?}\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // We need to wait for the zone to stabilize, in order for the reference\n        // element to be in the proper place in the DOM. This is mostly relevant\n        // for draggable elements inside portals since they get stamped out in\n        // their original DOM position and then they get transferred to the portal.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._updateRootElement();\n            // Listen for any newly-added handles.\n            this._handles.changes.pipe(startWith(this._handles), \n            // Sync the new handles with the DragRef.\n            tap((/**\n             * @param {?} handles\n             * @return {?}\n             */\n            (handles) => {\n                /** @type {?} */\n                const childHandleElements = handles\n                    .filter((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                handle => handle._parentDrag === this))\n                    .map((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                handle => handle.element));\n                this._dragRef.withHandles(childHandleElements);\n            })), \n            // Listen if the state of any of the handles changes.\n            switchMap((/**\n             * @param {?} handles\n             * @return {?}\n             */\n            (handles) => {\n                return merge(...handles.map((/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                item => item._stateChanges)));\n            })), takeUntil(this._destroyed)).subscribe((/**\n             * @param {?} handleInstance\n             * @return {?}\n             */\n            handleInstance => {\n                // Enabled/disable the handle that changed in the DragRef.\n                /** @type {?} */\n                const dragRef = this._dragRef;\n                /** @type {?} */\n                const handle = handleInstance.element.nativeElement;\n                handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n            }));\n            if (this.freeDragPosition) {\n                this._dragRef.setFreeDragPosition(this.freeDragPosition);\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const rootSelectorChange = changes['rootElementSelector'];\n        /** @type {?} */\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._dragRef.dispose();\n    }\n    /**\n     * Syncs the root element with the `DragRef`.\n     * @private\n     * @return {?}\n     */\n    _updateRootElement() {\n        /** @type {?} */\n        const element = this.element.nativeElement;\n        /** @type {?} */\n        const rootElement = this.rootElementSelector ?\n            getClosestMatchingAncestor(element, this.rootElementSelector) : element;\n        if (rootElement && rootElement.nodeType !== this._document.ELEMENT_NODE) {\n            throw Error(`cdkDrag must be attached to an element node. ` +\n                `Currently attached to \"${rootElement.nodeName}\".`);\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /**\n     * Gets the boundary element, based on the `boundaryElement` value.\n     * @private\n     * @return {?}\n     */\n    _getBoundaryElement() {\n        /** @type {?} */\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return getClosestMatchingAncestor(this.element.nativeElement, boundary);\n        }\n        /** @type {?} */\n        const element = coerceElement(boundary);\n        if (isDevMode() && !element.contains(this.element.nativeElement)) {\n            throw Error('Draggable element is not inside of the node passed into cdkDragBoundary.');\n        }\n        return element;\n    }\n    /**\n     * Syncs the inputs of the CdkDrag with the options of the underlying DragRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (!ref.isDragging()) {\n                /** @type {?} */\n                const dir = this._dir;\n                /** @type {?} */\n                const placeholder = this._placeholderTemplate ? {\n                    template: this._placeholderTemplate.templateRef,\n                    context: this._placeholderTemplate.data,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                /** @type {?} */\n                const preview = this._previewTemplate ? {\n                    template: this._previewTemplate.templateRef,\n                    context: this._previewTemplate.data,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay = coerceNumberProperty(this.dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview);\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        }));\n    }\n    /**\n     * Handles the events from the underlying `DragRef`.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _handleEvents(ref) {\n        ref.started.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.started.emit({ source: this });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.released.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.released.emit({ source: this });\n        }));\n        ref.ended.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.ended.emit({ source: this, distance: event.distance });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.entered.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.entered.emit({\n                container: event.container.data,\n                item: this,\n                currentIndex: event.currentIndex\n            });\n        }));\n        ref.exited.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.exited.emit({\n                container: event.container.data,\n                item: this\n            });\n        }));\n        ref.dropped.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                item: this,\n                distance: event.distance\n            });\n        }));\n    }\n}\nCdkDrag.ɵfac = function CdkDrag_Factory(t) { return new (t || CdkDrag)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DROP_LIST, 12), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nCdkDrag.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDrag, selectors: [[\"\", \"cdkDrag\", \"\"]], contentQueries: function CdkDrag_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDragPreview, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDragPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDragHandle, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previewTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._handles = _t);\n    } }, hostAttrs: [1, \"cdk-drag\"], hostVars: 4, hostBindings: function CdkDrag_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-drag-disabled\", ctx.disabled)(\"cdk-drag-dragging\", ctx._dragRef.isDragging());\n    } }, inputs: { dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], disabled: [\"cdkDragDisabled\", \"disabled\"], data: [\"cdkDragData\", \"data\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, exportAs: [\"cdkDrag\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]), ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkDrag.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DROP_LIST,] }, { type: Optional }, { type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_CONFIG,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: DragDrop },\n    { type: ChangeDetectorRef }\n];\nCdkDrag.propDecorators = {\n    _handles: [{ type: ContentChildren, args: [CdkDragHandle, { descendants: true },] }],\n    _previewTemplate: [{ type: ContentChild, args: [CdkDragPreview, { static: false },] }],\n    _placeholderTemplate: [{ type: ContentChild, args: [CdkDragPlaceholder, { static: false },] }],\n    data: [{ type: Input, args: ['cdkDragData',] }],\n    lockAxis: [{ type: Input, args: ['cdkDragLockAxis',] }],\n    rootElementSelector: [{ type: Input, args: ['cdkDragRootElement',] }],\n    boundaryElement: [{ type: Input, args: ['cdkDragBoundary',] }],\n    dragStartDelay: [{ type: Input, args: ['cdkDragStartDelay',] }],\n    freeDragPosition: [{ type: Input, args: ['cdkDragFreeDragPosition',] }],\n    disabled: [{ type: Input, args: ['cdkDragDisabled',] }],\n    constrainPosition: [{ type: Input, args: ['cdkDragConstrainPosition',] }],\n    started: [{ type: Output, args: ['cdkDragStarted',] }],\n    released: [{ type: Output, args: ['cdkDragReleased',] }],\n    ended: [{ type: Output, args: ['cdkDragEnded',] }],\n    entered: [{ type: Output, args: ['cdkDragEntered',] }],\n    exited: [{ type: Output, args: ['cdkDragExited',] }],\n    dropped: [{ type: Output, args: ['cdkDragDropped',] }],\n    moved: [{ type: Output, args: ['cdkDragMoved',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDrag, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDrag]',\n                exportAs: 'cdkDrag',\n                host: {\n                    'class': 'cdk-drag',\n                    '[class.cdk-drag-disabled]': 'disabled',\n                    '[class.cdk-drag-dragging]': '_dragRef.isDragging()'\n                },\n                providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DROP_LIST]\n            }, {\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }]; }, { dragStartDelay: [{\n            type: Input,\n            args: ['cdkDragStartDelay']\n        }], started: [{\n            type: Output,\n            args: ['cdkDragStarted']\n        }], released: [{\n            type: Output,\n            args: ['cdkDragReleased']\n        }], ended: [{\n            type: Output,\n            args: ['cdkDragEnded']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDragEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDragExited']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDragDropped']\n        }], moved: [{\n            type: Output,\n            args: ['cdkDragMoved']\n        }], boundaryElement: [{\n            type: Input,\n            args: ['cdkDragBoundary']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDragDisabled']\n        }], _handles: [{\n            type: ContentChildren,\n            args: [CdkDragHandle, { descendants: true }]\n        }], _previewTemplate: [{\n            type: ContentChild,\n            args: [CdkDragPreview, { static: false }]\n        }], _placeholderTemplate: [{\n            type: ContentChild,\n            args: [CdkDragPlaceholder, { static: false }]\n        }], data: [{\n            type: Input,\n            args: ['cdkDragData']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDragLockAxis']\n        }], rootElementSelector: [{\n            type: Input,\n            args: ['cdkDragRootElement']\n        }], freeDragPosition: [{\n            type: Input,\n            args: ['cdkDragFreeDragPosition']\n        }], constrainPosition: [{\n            type: Input,\n            args: ['cdkDragConstrainPosition']\n        }] }); })();\n/**\n * Gets the closest ancestor of an element that matches a selector.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction getClosestMatchingAncestor(element, selector) {\n    /** @type {?} */\n    let currentElement = (/** @type {?} */ (element.parentElement));\n    while (currentElement) {\n        // IE doesn't support `matches` so we have to fall back to `msMatchesSelector`.\n        if (currentElement.matches ? currentElement.matches(selector) :\n            ((/** @type {?} */ (currentElement))).msMatchesSelector(selector)) {\n            return currentElement;\n        }\n        currentElement = currentElement.parentElement;\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n * @template T\n */\nclass CdkDropListGroup {\n    constructor() {\n        /**\n         * Drop lists registered inside the group.\n         */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /**\n     * Whether starting a dragging sequence from inside this group is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._items.clear();\n    }\n}\nCdkDropListGroup.ɵfac = function CdkDropListGroup_Factory(t) { return new (t || CdkDropListGroup)(); };\nCdkDropListGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropListGroup, selectors: [[\"\", \"cdkDropListGroup\", \"\"]], inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, exportAs: [\"cdkDropListGroup\"] });\nCdkDropListGroup.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDropListGroupDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDropListGroup, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropListGroup]',\n                exportAs: 'cdkDropListGroup'\n            }]\n    }], function () { return []; }, { disabled: [{\n            type: Input,\n            args: ['cdkDropListGroupDisabled']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique ids for drop zones.\n * @type {?}\n */\nlet _uniqueIdCounter$1 = 0;\nconst ɵ0 = undefined;\n// @breaking-change 8.0.0 `CdkDropList` implements `CdkDropListContainer` for backwards\n// compatiblity. The implements clause, as well as all the methods that it enforces can\n// be removed when `CdkDropListContainer` is deleted.\n/**\n * Container that wraps a set of draggable items.\n * @template T\n */\nclass CdkDropList {\n    /**\n     * @param {?} element\n     * @param {?} dragDrop\n     * @param {?} _changeDetectorRef\n     * @param {?=} _dir\n     * @param {?=} _group\n     */\n    constructor(element, dragDrop, _changeDetectorRef, _dir, _group) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._group = _group;\n        /**\n         * Emits when the list has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Direction in which the list is oriented.\n         */\n        this.orientation = 'vertical';\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter$1++}`;\n        this._disabled = false;\n        this._sortingDisabled = false;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = (/**\n         * @return {?}\n         */\n        () => true);\n        /**\n         * Whether to auto-scroll the view when the user moves their pointer close to the edges.\n         */\n        this.autoScrollDisabled = false;\n        /**\n         * Emits when the user drops an item inside the container.\n         */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /**\n         * Emits as the user is swapping items while actively dragging.\n         */\n        this.sorted = new EventEmitter();\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        this._dropListRef.enterPredicate = (/**\n         * @param {?} drag\n         * @param {?} drop\n         * @return {?}\n         */\n        (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        });\n        this._syncInputs(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /**\n     * Whether starting a dragging sequence from this container is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether sorting within this drop list is disabled.\n     * @return {?}\n     */\n    get sortingDisabled() { return this._sortingDisabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set sortingDisabled(value) {\n        this._sortingDisabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._draggables.changes\n            .pipe(startWith(this._draggables), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} items\n         * @return {?}\n         */\n        (items) => {\n            this._dropListRef.withItems(items.map((/**\n             * @param {?} drag\n             * @return {?}\n             */\n            drag => drag._dragRef)));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Starts dragging an item.\n     * @return {?}\n     */\n    start() {\n        this._dropListRef.start();\n    }\n    /**\n     * Drops an item into this container.\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @param {?} isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @return {?}\n     */\n    drop(item, currentIndex, previousContainer, isPointerOverContainer) {\n        this._dropListRef.drop(item._dragRef, currentIndex, ((/** @type {?} */ (previousContainer)))._dropListRef, isPointerOverContainer);\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @return {?}\n     */\n    enter(item, pointerX, pointerY) {\n        this._dropListRef.enter(item._dragRef, pointerX, pointerY);\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    exit(item) {\n        this._dropListRef.exit(item._dragRef);\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    getItemIndex(item) {\n        return this._dropListRef.getItemIndex(item._dragRef);\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param {?} item Item to be sorted.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?} pointerDelta Direction in which the pointer is moving along each axis.\n     * @return {?}\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        return this._dropListRef._sortItem(item._dragRef, pointerX, pointerY, pointerDelta);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param {?} item Drag item that is being moved.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        /** @type {?} */\n        const result = this._dropListRef._getSiblingContainerFromPosition(item._dragRef, x, y);\n        return result ? result.data : null;\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param {?} x Pointer position along the X axis.\n     * @param {?} y Pointer position along the Y axis.\n     * @return {?}\n     */\n    _isOverContainer(x, y) {\n        return this._dropListRef._isOverContainer(x, y);\n    }\n    /**\n     * Syncs the inputs of the CdkDropList with the options of the underlying DropListRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _syncInputs(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => ref.withDirection(value)));\n        }\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const siblings = coerceArray(this.connectedTo).map((/**\n             * @param {?} drop\n             * @return {?}\n             */\n            drop => {\n                return typeof drop === 'string' ?\n                    (/** @type {?} */ (CdkDropList._dropLists.find((/**\n                     * @param {?} list\n                     * @return {?}\n                     */\n                    list => list.id === drop)))) : drop;\n            }));\n            if (this._group) {\n                this._group._items.forEach((/**\n                 * @param {?} drop\n                 * @return {?}\n                 */\n                drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                }));\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = this.sortingDisabled;\n            ref.autoScrollDisabled = this.autoScrollDisabled;\n            ref\n                .connectedTo(siblings.filter((/**\n             * @param {?} drop\n             * @return {?}\n             */\n            drop => drop && drop !== this)).map((/**\n             * @param {?} list\n             * @return {?}\n             */\n            list => list._dropListRef)))\n                .withOrientation(this.orientation);\n        }));\n    }\n    /**\n     * Handles events from the underlying DropListRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.entered.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex\n            });\n        }));\n        ref.exited.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data\n            });\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.sorted.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data\n            });\n        }));\n        ref.dropped.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                item: event.item.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                distance: event.distance\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n}\nCdkDropList.ɵfac = function CdkDropList_Factory(t) { return new (t || CdkDropList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(CdkDropListGroup, 12)); };\nCdkDropList.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropList, selectors: [[\"\", \"cdkDropList\", \"\"], [\"cdk-drop-list\"]], contentQueries: function CdkDropList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDrag, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._draggables = _t);\n    } }, hostAttrs: [1, \"cdk-drop-list\"], hostVars: 7, hostBindings: function CdkDropList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵclassProp(\"cdk-drop-list-disabled\", ctx.disabled)(\"cdk-drop-list-dragging\", ctx._dropListRef.isDragging())(\"cdk-drop-list-receiving\", ctx._dropListRef.isReceiving());\n    } }, inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], id: \"id\", enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], data: [\"cdkDropListData\", \"data\"], lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, exportAs: [\"cdkDropList\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Prevent child drop lists from picking up the same group as their parent.\n            { provide: CdkDropListGroup, useValue: ɵ0 },\n            { provide: CDK_DROP_LIST_CONTAINER, useExisting: CdkDropList },\n        ])] });\n/**\n * Keeps track of the drop lists that are currently on the page.\n */\nCdkDropList._dropLists = [];\n/** @nocollapse */\nCdkDropList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DragDrop },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: CdkDropListGroup, decorators: [{ type: Optional }, { type: SkipSelf }] }\n];\nCdkDropList.propDecorators = {\n    _draggables: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => CdkDrag)), {\n                    // Explicitly set to false since some of the logic below makes assumptions about it.\n                    // The `.withItems` call below should be updated if we ever need to switch this to `true`.\n                    descendants: false\n                },] }],\n    connectedTo: [{ type: Input, args: ['cdkDropListConnectedTo',] }],\n    data: [{ type: Input, args: ['cdkDropListData',] }],\n    orientation: [{ type: Input, args: ['cdkDropListOrientation',] }],\n    id: [{ type: Input }],\n    lockAxis: [{ type: Input, args: ['cdkDropListLockAxis',] }],\n    disabled: [{ type: Input, args: ['cdkDropListDisabled',] }],\n    sortingDisabled: [{ type: Input, args: ['cdkDropListSortingDisabled',] }],\n    enterPredicate: [{ type: Input, args: ['cdkDropListEnterPredicate',] }],\n    autoScrollDisabled: [{ type: Input, args: ['cdkDropListAutoScrollDisabled',] }],\n    dropped: [{ type: Output, args: ['cdkDropListDropped',] }],\n    entered: [{ type: Output, args: ['cdkDropListEntered',] }],\n    exited: [{ type: Output, args: ['cdkDropListExited',] }],\n    sorted: [{ type: Output, args: ['cdkDropListSorted',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDropList, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropList], cdk-drop-list',\n                exportAs: 'cdkDropList',\n                providers: [\n                    // Prevent child drop lists from picking up the same group as their parent.\n                    { provide: CdkDropListGroup, useValue: ɵ0 },\n                    { provide: CDK_DROP_LIST_CONTAINER, useExisting: CdkDropList },\n                ],\n                host: {\n                    'class': 'cdk-drop-list',\n                    '[id]': 'id',\n                    '[class.cdk-drop-list-disabled]': 'disabled',\n                    '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                    '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: CdkDropListGroup, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }]; }, { connectedTo: [{\n            type: Input,\n            args: ['cdkDropListConnectedTo']\n        }], orientation: [{\n            type: Input,\n            args: ['cdkDropListOrientation']\n        }], id: [{\n            type: Input\n        }], enterPredicate: [{\n            type: Input,\n            args: ['cdkDropListEnterPredicate']\n        }], autoScrollDisabled: [{\n            type: Input,\n            args: ['cdkDropListAutoScrollDisabled']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDropListDropped']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDropListEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDropListExited']\n        }], sorted: [{\n            type: Output,\n            args: ['cdkDropListSorted']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDropListDisabled']\n        }], sortingDisabled: [{\n            type: Input,\n            args: ['cdkDropListSortingDisabled']\n        }], _draggables: [{\n            type: ContentChildren,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => CdkDrag)), {\n                    // Explicitly set to false since some of the logic below makes assumptions about it.\n                    // The `.withItems` call below should be updated if we ever need to switch this to `true`.\n                    descendants: false\n                }]\n        }], data: [{\n            type: Input,\n            args: ['cdkDropListData']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDropListLockAxis']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DragDropModule {\n}\nDragDropModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DragDropModule });\nDragDropModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DragDropModule_Factory(t) { return new (t || DragDropModule)(); }, providers: [\n        DragDrop,\n    ] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DragDropModule, { declarations: [CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder], exports: [CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                exports: [\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                providers: [\n                    DragDrop,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DragDrop, DragRef, DropListRef, CdkDropList, CDK_DROP_LIST, CDK_DROP_LIST_CONTAINER, moveItemInArray, transferArrayItem, copyArrayItem, DragDropModule, DragDropRegistry, CdkDropListGroup, CDK_DRAG_CONFIG_FACTORY, CDK_DRAG_CONFIG, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder, CDK_DRAG_PARENT as ɵb };\n\n//# sourceMappingURL=drag-drop.js.map","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-buttons',\r\n  templateUrl: './buttons.component.html',\r\n  styleUrls: ['./buttons.component.scss']\r\n})\r\nexport class ButtonsComponent {\r\n  constructor() { }\r\n}\r\n","<mat-card>\r\n\t<mat-card-content>    \r\n\t<mat-card-title>Buttons</mat-card-title>\r\n\t\t\t<mat-card-subtitle>Angular Material buttons are native <code> button or a </code> elements enhanced with Material Design styling and ink ripples. <code><a href=\"https://material.angular.io/components/button/overview\" target=\"_blank\">Official Doc</a></code></mat-card-subtitle>\r\n\t\r\n\t\t\t<h4>Basic Buttons <br/><code class=\"bg-light\">&lt;button mat-button color=\"primary\"&gt;Primary&lt;/button&gt;</code></h4>\r\n\t\t<div class=\"button-row\">\r\n\t\t\t<button mat-button>Basic</button>\r\n\t\t\t<button mat-button color=\"primary\">Primary</button>\r\n\t\t\t<button mat-button color=\"accent\">Accent</button>\r\n\t\t\t<button mat-button color=\"warn\">Warn</button>\r\n\t\t\t<button mat-button disabled>Disabled</button>\r\n\t\t\t<a mat-button routerLink=\".\">Link</a>\r\n\t\t</div>\r\n\r\n\t\t<h4>Raised Buttons <br/><code class=\"bg-light\">&lt;button mat-raised-button color=\"primary\"&gt;Primary&lt;/button&gt;</code></h4>\r\n\t\t<div class=\"button-row\">\r\n\t\t\t<button mat-raised-button>Basic</button>\r\n\t\t\t<button mat-raised-button color=\"primary\">Primary</button>\r\n\t\t\t<button mat-raised-button color=\"accent\">Accent</button>\r\n\t\t\t<button mat-raised-button color=\"warn\">Warn</button>\r\n\t\t\t<button mat-raised-button disabled>Disabled</button>\r\n\t\t\t<a mat-raised-button routerLink=\".\">Link</a>\r\n\t\t</div>\r\n\r\n\t\t<h4>Icon Buttons <br/><code class=\"bg-light\">&lt;button mat-icon-button color=\"primary\"&gt; <br/>&nbsp;&nbsp;&nbsp;&nbsp;&lt;mat-icon aria-label=\"Example icon-button with a heart icon\"&gt;favorite&lt;/mat-icon&gt;<br/>&lt;/button&gt;</code></h4>\r\n\t\t<div class=\"button-row\">\r\n\t\t\t<button mat-icon-button>\r\n\t\t\t\t<mat-icon aria-label=\"Example icon-button with a heart icon\">favorite</mat-icon>\r\n\t\t\t</button>\r\n\t\t\t<button mat-icon-button color=\"primary\">\r\n\t\t\t\t<mat-icon aria-label=\"Example icon-button with a heart icon\">favorite</mat-icon>\r\n\t\t\t</button>\r\n\t\t\t<button mat-icon-button color=\"accent\">\r\n\t\t\t\t<mat-icon aria-label=\"Example icon-button with a heart icon\">favorite</mat-icon>\r\n\t\t\t</button>\r\n\t\t\t<button mat-icon-button color=\"warn\">\r\n\t\t\t\t<mat-icon aria-label=\"Example icon-button with a heart icon\">favorite</mat-icon>\r\n\t\t\t</button>\r\n\t\t\t<button mat-icon-button disabled>\r\n\t\t\t\t<mat-icon aria-label=\"Example icon-button with a heart icon\">favorite</mat-icon>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\r\n\t\t<h4>Fab Buttons <br/><code class=\"bg-light\">&lt;button mat-fab color=\"primary\"&gt;Primary&lt;/button&gt;</code></h4>\r\n\t\t<div class=\"button-row\">\r\n\t\t\t<button mat-fab>Basic</button>\r\n\t\t\t<button mat-fab color=\"primary\">Primary</button>\r\n\t\t\t<button mat-fab color=\"accent\">Accent</button>\r\n\t\t\t<button mat-fab color=\"warn\">Warn</button>\r\n\t\t\t<button mat-fab disabled>Disabled</button>\r\n\t\t\t<button mat-fab>\r\n\t\t\t\t<mat-icon aria-label=\"Example icon-button with a heart icon\">favorite</mat-icon>\r\n\t\t\t</button>\r\n\t\t\t<a mat-fab routerLink=\".\">Link</a>\r\n\t\t</div>\r\n\r\n\t\t<h4>Mini Fab Buttons <br/><code class=\"bg-light\">&lt;button mat-mini-fab color=\"primary\"&gt;Primary&lt;/button&gt;</code></h4>\r\n\t\t<div class=\"button-row\">\r\n\t\t\t<button mat-mini-fab>Base</button>\r\n\t\t\t<button mat-mini-fab color=\"primary\">Pri</button>\r\n\t\t\t<button mat-mini-fab color=\"accent\">Acc</button>\r\n\t\t\t<button mat-mini-fab color=\"warn\">Warn</button>\r\n\t\t\t<button mat-mini-fab disabled>Dis</button>\r\n\t\t\t<button mat-mini-fab>\r\n\t\t\t\t<mat-icon aria-label=\"Example icon-button with a heart icon\">favorite</mat-icon>\r\n\t\t\t</button>\r\n\t\t\t<a mat-mini-fab routerLink=\".\">Link</a>\r\n\t\t</div>\r\n\r\n\t\t<h4>Basic button-toggles <span class=\"bg-success text-white rounded font-12 pl-5 pr-5\">New</span></h4>\r\n\t\t<mat-button-toggle-group name=\"fontStyle\" aria-label=\"Font Style\">\r\n\t\t  \t<mat-button-toggle value=\"bold\">Bold</mat-button-toggle>\r\n\t\t  \t<mat-button-toggle value=\"italic\">Italic</mat-button-toggle>\r\n\t\t  \t<mat-button-toggle value=\"underline\">Underline</mat-button-toggle>\r\n\t\t</mat-button-toggle-group>\r\n\r\n\r\n\t\t<h4>Button toggle </h4>  \r\n\t\t<mat-button-toggle-group #group=\"matButtonToggleGroup\">\r\n\t\t\t<mat-button-toggle value=\"left\">\r\n\t\t\t\t<mat-icon>format_align_left</mat-icon>\r\n\t\t\t</mat-button-toggle>\r\n\t\t\t<mat-button-toggle value=\"center\">\r\n\t\t\t\t<mat-icon>format_align_center</mat-icon>\r\n\t\t\t</mat-button-toggle>\r\n\t\t\t<mat-button-toggle value=\"right\">\r\n\t\t\t\t<mat-icon>format_align_right</mat-icon>\r\n\t\t\t</mat-button-toggle>\r\n\t\t\t<mat-button-toggle value=\"justify\" disabled>\r\n\t\t\t\t<mat-icon>format_align_justify</mat-icon>\r\n\t\t\t</mat-button-toggle>\r\n\t\t</mat-button-toggle-group>\r\n\t\t<div class=\"m-t-20\">Selected value: {{group.value}}</div>  \r\n\r\n\r\n\t\t<h4>Button toggle appearance <span class=\"bg-success text-white rounded font-12 pl-5 pr-5\">New</span></h4>\r\n\t\t<span>Default appearance:</span>\r\n\t\t<mat-button-toggle-group name=\"fontStyle\" aria-label=\"Font Style\" class=\"m-l-20\">\r\n\t\t    <mat-button-toggle value=\"bold\">Bold</mat-button-toggle>\r\n\t\t    <mat-button-toggle value=\"italic\">Italic</mat-button-toggle>\r\n\t\t    <mat-button-toggle value=\"underline\">Underline</mat-button-toggle>\r\n\t\t</mat-button-toggle-group><br/>\r\n\r\n\t\t<div class=\"m-t-20\">\r\n\t\t\t<span>Legacy appearance:</span>\r\n\t\t  \t<mat-button-toggle-group appearance=\"legacy\" name=\"fontStyle\" aria-label=\"Font Style\" class=\"m-l-20\">\r\n\t\t\t    <mat-button-toggle value=\"bold\">Bold</mat-button-toggle>\r\n\t\t\t    <mat-button-toggle value=\"italic\">Italic</mat-button-toggle>\r\n\t\t\t    <mat-button-toggle value=\"underline\">Underline</mat-button-toggle>\r\n\t\t  \t</mat-button-toggle-group>\r\n\t\t</div>\r\n\t</mat-card-content>\r\n</mat-card>\r\n","import { Component } from '@angular/core';\r\nimport { MatChipInputEvent } from '@angular/material';\r\nimport { ENTER, COMMA } from '@angular/cdk/keycodes';\r\n\r\nexport interface DemoColor {\r\n  name: string;\r\n  color: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-chips',\r\n  templateUrl: './chips.component.html',\r\n  styleUrls: ['./chips.component.scss']\r\n})\r\nexport class ChipsComponent {\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n\r\n  availableColors: DemoColor[] = [\r\n    { name: 'none', color: 'gray' },\r\n    { name: 'Primary', color: 'primary' },\r\n    { name: 'Accent', color: 'accent' },\r\n    { name: 'Warn', color: 'warn' }\r\n  ];\r\n\r\n  // Enter, comma\r\n  separatorKeysCodes = [ENTER, COMMA];\r\n\r\n  fruits = [{ name: 'Lemon' }, { name: 'Lime' }, { name: 'Apple' }];\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n\r\n    // Add our fruit\r\n    if ((value || '').trim()) {\r\n      this.fruits.push({ name: value.trim() });\r\n    }\r\n\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n  }\r\n\r\n  remove(fruit: any): void {\r\n    const index = this.fruits.indexOf(fruit);\r\n\r\n    if (index >= 0) {\r\n      this.fruits.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n","\r\n  <mat-card>\r\n    <mat-card-content>  \r\n    <mat-card-title>Basic Chips</mat-card-title>\r\n    <mat-card-subtitle><code>&lt;mat-chip&gt;</code>displays a list of values as individual, keyboard accessible, chips. <code class=\"\"><a href=\"https://material.angular.io/components/chips/overview\">Official Component</a></code></mat-card-subtitle>\r\n    <mat-chip-list>\r\n      <mat-chip>One fish</mat-chip>\r\n      <mat-chip>Two fish</mat-chip>\r\n      <mat-chip color=\"primary\" selected=\"true\">Primary fish</mat-chip>\r\n      <mat-chip color=\"accent\" selected=\"true\">Accent fish</mat-chip>\r\n    </mat-chip-list>\r\n\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card>\r\n    <mat-card-content>  \r\n    <mat-card-title>Chip input</mat-card-title>\r\n    <mat-card-subtitle>The MatChipInput directive can be used together with a chip-list to streamline the interaction between the two components. This directive adds chip-specific behaviors to the input element within for adding and removing chips. </mat-card-subtitle>\r\n    \r\n      <mat-form-field class=\"demo-chip-list\">\r\n          <mat-chip-list #chipList>\r\n            <mat-chip *ngFor=\"let fruit of fruits\" [selectable]=\"selectable\"\r\n                     [removable]=\"removable\" (removed)=\"remove(fruit)\">\r\n              {{fruit.name}}\r\n              <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n            </mat-chip>\r\n            <input placeholder=\"New fruit...\"\r\n                   [matChipInputFor]=\"chipList\"\r\n                   [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                   [matChipInputAddOnBlur]=\"addOnBlur\"\r\n                   (matChipInputTokenEnd)=\"add($event)\" />\r\n          </mat-chip-list>\r\n        </mat-form-field>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card>\r\n    <mat-card-content>  \r\n    <mat-card-title>Stacked Chips</mat-card-title>\r\n    <mat-card-subtitle>You can also stack the chips if you want them on top of each other and/or use the\r\n        <code>(focus)</code> event to run custom code.</mat-card-subtitle>\r\n    \r\n      <mat-chip-list class=\"mat-chip-list-stacked\">\r\n        <mat-chip *ngFor=\"let aColor of availableColors\"\r\n                 (focus)=\"color = aColor.color\" color=\"{{aColor.color}}\" selected=\"true\">\r\n          {{aColor.name}}\r\n        </mat-chip>\r\n      </mat-chip-list>\r\n    </mat-card-content>\r\n  </mat-card>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { EditQuestionViewModel, Question, QuestionType, TestResultModel } from \"./questionModels\";\r\nimport { trigger, state, transition, animate, style } from '@angular/animations';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DialogAddQuestionComponent } from './dialogs/dialog-add-question'\r\nimport { DialogEditTestResultModelComponent } from './dialogs/edit-test-result-model-dialog'\r\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material';\r\nimport { QuestionWizardEngine } from './questionWizard';\r\n\r\n\r\n@Component({\r\n  selector: 'app-dialog-overview-example-dialog',\r\n  templateUrl: './edit-policy-dialog.html'\r\n})\r\nexport class DialogEditPolicyComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogEditPolicyComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) { }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-custom-questions',\r\n  templateUrl: './custom-questions.component.html',\r\n  styleUrls: ['./custom-questions.component.scss'],\r\n})\r\n\r\nexport class CustomQuestionsComponent implements OnInit {\r\n  public editQuestionViewModel: EditQuestionViewModel = new EditQuestionViewModel();\r\n  public questions: Array<Question> = new Array<Question>();\r\n  isOpen = false;\r\n  public testResultModels: Array<TestResultModel> = new Array<TestResultModel>()\r\n  public questionWizardEngine: QuestionWizardEngine = new QuestionWizardEngine();\r\n\r\n  constructor(public dialog: MatDialog, public snackBar: MatSnackBar) { }\r\n  ngOnInit(): void {\r\n\r\n    let question_1 = new Question();\r\n    question_1.id = this.newGuid();\r\n    question_1.text = 'Episode I - The Phantom Menace';\r\n    question_1.questionType = QuestionType.TRUE_FALSE_QUESTION;\r\n    this.questions.push(question_1);\r\n\r\n    let question_2 = new Question();\r\n    question_2.id = this.newGuid();\r\n    question_2.text = 'Episode II - Attack of the Clones';\r\n    question_2.questionType = QuestionType.INPUT_QUESTION;\r\n    this.questions.push(question_2);\r\n\r\n    let question_3 = new Question();\r\n    question_3.id = this.newGuid()\r\n    question_3.text = 'Episode III - Revenge of the Sith';\r\n    question_3.questionType = QuestionType.TRUE_FALSE_QUESTION;\r\n    this.questions.push(question_3);\r\n\r\n    let question_4 = new Question();\r\n    question_4.id = this.newGuid();\r\n    question_4.text = 'Within the last 14 days, have you come in contact with a person with a confirmed or suspected case of a newly identified viral illness?';\r\n    question_4.questionType = QuestionType.TRUE_FALSE_QUESTION;\r\n    this.questions.push(question_4);\r\n\r\n    let child_question = new Question();\r\n    child_question.id = this.newGuid();\r\n    child_question.text = 'Did you wear protective equipment?';\r\n    child_question.questionType = QuestionType.TRUE_FALSE_QUESTION;\r\n    question_4.childQuestion = child_question;\r\n\r\n    let defaultResult = new TestResultModel();\r\n    defaultResult.id = this.newGuid();\r\n    defaultResult.message = 'Test passed!';\r\n    defaultResult.points = 10;\r\n\r\n    this.testResultModels.push(defaultResult)\r\n\r\n    this.questionWizardEngine.init(this.questions, this.testResultModels);\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n\r\n    let currentQuestion = this.questions[event.previousIndex];\r\n\r\n    moveItemInArray(this.questions, event.previousIndex, event.currentIndex);\r\n  }\r\n\r\n  dropTestResult(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.testResultModels, event.previousIndex, event.currentIndex);\r\n  }\r\n\r\n  editCard(id: any) {\r\n    let currentQuestion = this.questions.find(x => { return x.id === id });\r\n    if (!currentQuestion) {\r\n      console.error(\"question not found\")\r\n      this.editQuestionViewModel.editQuestionMode = false;\r\n      this.editQuestionViewModel.currentQuestion = undefined;\r\n      return;\r\n    }\r\n\r\n    let parentQuestion = new Question()\r\n    parentQuestion.id = currentQuestion.id;\r\n    parentQuestion.text = currentQuestion.text;\r\n    parentQuestion.childQuestion = currentQuestion.childQuestion;\r\n\r\n\r\n    parentQuestion.questionType = (currentQuestion ? currentQuestion?.questionType : QuestionType.UNDEFINED) + '';\r\n\r\n    parentQuestion.pointsPositive = currentQuestion?.pointsPositive\r\n    parentQuestion.pointsNegative = currentQuestion?.pointsNegative\r\n\r\n    console.log(parentQuestion)\r\n    const dialogNewQuestion = this.dialog.open(DialogAddQuestionComponent, {\r\n      width: '500px',\r\n      data: parentQuestion\r\n    });\r\n\r\n    dialogNewQuestion.afterClosed().subscribe(editedQuestion => {\r\n      console.log(editedQuestion);\r\n      if (!editedQuestion)\r\n        return;\r\n\r\n      this.saveQuestion(editedQuestion);\r\n      this.openSnackBar('Saved', 'Ok')\r\n    });\r\n  }\r\n\r\n  addChildQuestion(id: any) {\r\n    let currentQuestion = this.questions.find(x => { return x.id === id });\r\n    if (!currentQuestion) {\r\n      console.error(\"question not found\")\r\n      this.editQuestionViewModel.editQuestionMode = false;\r\n      this.editQuestionViewModel.currentQuestion = undefined;\r\n      return;\r\n    }\r\n\r\n    let newQuestion = new Question();\r\n    newQuestion.questionType = '1';\r\n    const dialogNewQuestion = this.dialog.open(DialogAddQuestionComponent, {\r\n      width: '500px',\r\n      data: newQuestion\r\n    });\r\n\r\n    dialogNewQuestion.afterClosed().subscribe(newQuestion => {\r\n      if (!newQuestion)\r\n        return;\r\n\r\n      if (currentQuestion)\r\n        currentQuestion.childQuestion = newQuestion;\r\n\r\n      this.openSnackBar('Child question added', 'Ok')\r\n    });\r\n  }\r\n\r\n  editChildQuestion(id: any) {\r\n    let currentQuestion = this.questions.find(x => { return x.id === id });\r\n    if (!currentQuestion) {\r\n      console.error(\"question not found\")\r\n      this.editQuestionViewModel.editQuestionMode = false;\r\n      this.editQuestionViewModel.currentQuestion = undefined;\r\n      return;\r\n    }\r\n\r\n    let newQuestion = new Question();\r\n    newQuestion.questionType = currentQuestion.childQuestion?.questionType + '';\r\n    newQuestion.pointsNegative = currentQuestion.childQuestion?.pointsNegative;\r\n    newQuestion.pointsPositive = currentQuestion.childQuestion?.pointsPositive;\r\n    newQuestion.text = currentQuestion.childQuestion?.text;\r\n\r\n    const dialogNewQuestion = this.dialog.open(DialogAddQuestionComponent, {\r\n      width: '500px',\r\n      data: newQuestion\r\n    });\r\n\r\n    dialogNewQuestion.afterClosed().subscribe(newQuestion => {\r\n      if (!newQuestion)\r\n        return;\r\n\r\n      if (currentQuestion)\r\n        currentQuestion.childQuestion = newQuestion;\r\n\r\n      this.openSnackBar('Child updated', 'Ok')\r\n    });\r\n  }\r\n\r\n  saveQuestion(question: Question | undefined) {\r\n    if (!question)\r\n      return;\r\n\r\n    for (let index = 0; index < this.questions.length; index++) {\r\n      if (this.questions[index].id === question.id) {\r\n        this.editQuestionByIndex(index, question);\r\n        break;\r\n      }\r\n    }\r\n    this.onCloseEdit();\r\n  }\r\n\r\n\r\n\r\n  editQuestionByIndex(index: number, question: Question) {\r\n    this.questions[index].text = question.text as string;\r\n    this.questions[index].questionType = question.questionType;\r\n    this.questions[index].pointsPositive = question.pointsPositive;\r\n    this.questions[index].pointsNegative = question.pointsNegative;\r\n\r\n    if (question.childQuestion) {\r\n      this.questions[index].childQuestion = question.childQuestion;\r\n    }\r\n    if (!question.childQuestion?.text || question.childQuestion?.text === '')\r\n      this.questions[index].childQuestion = undefined;\r\n  }\r\n\r\n  onCloseEdit() {\r\n    this.editQuestionViewModel.editQuestionMode = false;\r\n    this.editQuestionViewModel.addQuestionMode = false;\r\n    this.editQuestionViewModel.currentQuestion = undefined;\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  deleteQuestion(id: any) {\r\n    this.questions = this.questions.filter(function (value, index, arr) { return value.id !== id; })\r\n  }\r\n\r\n  AddNewQuestionDialog() {\r\n    let newQuestion = new Question();\r\n    newQuestion.questionType = '1';\r\n    const dialogNewQuestion = this.dialog.open(DialogAddQuestionComponent, {\r\n      width: '500px',\r\n      data: newQuestion\r\n    });\r\n\r\n    dialogNewQuestion.afterClosed().subscribe(newQuestion => {\r\n      console.log('The dialog was closed');\r\n      console.log(newQuestion);\r\n      if (!newQuestion)\r\n        return;\r\n\r\n      this.saveNewQuestion(newQuestion);\r\n\r\n      this.openSnackBar('New message added', 'Ok')\r\n    });\r\n\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    let config = new MatSnackBarConfig();\r\n    config.panelClass = ['snack-bar'];\r\n\r\n    this.snackBar.open(message, action, {\r\n      duration: 5000,\r\n      panelClass: ['snack-bar']\r\n    });\r\n  }\r\n\r\n  saveNewQuestion(newQuestion: Question) {\r\n    newQuestion.id = this.newGuid();\r\n    this.questions.push(newQuestion as any);\r\n  }\r\n\r\n  openDialog(id: any): void {\r\n    let questionStrategy = this.questions.find(q => { return q.id === id })?.childQuestion?.questionTrueFalseStrategy;\r\n    const dialogRef = this.dialog.open(DialogEditPolicyComponent, {\r\n      width: '350px',\r\n      data: { trueFalseStrategy: questionStrategy, questionId: id }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      console.log(result);\r\n      if (!result)\r\n        return;\r\n      let question = this.questions.find(q => { return q.id === result.questionId })\r\n      if (!question) {\r\n        console.error(\"question not found\");\r\n        return;\r\n      }\r\n\r\n      if (question.childQuestion) {\r\n        question.childQuestion.questionTrueFalseStrategy = result.trueFalseStrategy;\r\n        console.log(question.childQuestion.questionTrueFalseStrategy)\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  // Results\r\n\r\n  addResult() {\r\n    let newTestResult = new TestResultModel();\r\n    newTestResult.id = this.newGuid();\r\n\r\n    const dialogRef = this.dialog.open(DialogEditTestResultModelComponent, {\r\n      width: '350px',\r\n      data: newTestResult\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (!result)\r\n        return;\r\n\r\n      this.testResultModels.push(result)\r\n    });\r\n  }\r\n\r\n  editTestResultModel(id: any) {\r\n    let newTestResult = new TestResultModel();\r\n    let currentResult = this.testResultModels.find(x => { return x.id === id });\r\n    if (!currentResult)\r\n      return;\r\n\r\n    newTestResult.id = currentResult.id;\r\n    newTestResult.message = currentResult.message;\r\n    newTestResult.points = currentResult.points;\r\n\r\n    const dialogRef = this.dialog.open(DialogEditTestResultModelComponent, {\r\n      width: '450px',\r\n      data: newTestResult\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (!result)\r\n        return;\r\n\r\n      if (currentResult) {\r\n        currentResult.message = result.message;\r\n        currentResult.points = result.points;\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteTestResultModel(id: any) {\r\n    this.testResultModels = this.testResultModels.filter(function (value, index, arr) { return value.id !== id; })\r\n  }\r\n\r\n  //quiz\r\n\r\n  startQuiz() {\r\n    this.questionWizardEngine.init(this.questions, this.testResultModels);\r\n    this.questionWizardEngine.setStateStart();\r\n    console.log(this.questions)\r\n  }\r\n\r\n  trueFalseAnswer(res: boolean) {\r\n    this.questionWizardEngine.currentQuestion.handleAnswer(res);\r\n    this.questionWizardEngine.next()\r\n  }\r\n\r\n  inputAnswer(res: string) {\r\n    this.questionWizardEngine.currentQuestion.handleAnswer(true, res);\r\n    this.questionWizardEngine.next()\r\n  }\r\n\r\n\r\n  newGuid() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n      return v.toString(16);\r\n    });\r\n  }\r\n}\r\n\r\n","\r\n\r\n<mat-card>\r\n\t<mat-card-content>\r\n\t\t<mat-card-title>Custom question builder</mat-card-title>\r\n\t\t<mat-card-subtitle>Build your custom question </mat-card-subtitle>\r\n\r\n\r\n\t\t<div fxLayout=\"row wrap\">\r\n\t\t\t<!-- column -->\r\n\t\t\t<div fxFlex.gt-lg=\"50\" fxFlex.gt-md=\"50\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n\t\t\t\t<mat-card>\r\n\t\t\t\t\t<div class=\"p-20 bg-info position-relative\">\r\n\t\t\t\t\t\t<h4 class=\"card-title text-white m-0\">Questions</h4>\r\n\t\t\t\t\t\t<h6 class=\"card-subtitle text-white m-0 op-5\">Drag n drop question list</h6>\r\n\t\t\t\t\t\t<button mat-mini-fab color=\"accent\" class=\"add-contact\"\r\n\t\t\t\t\t\t\t(click)=\"AddNewQuestionDialog()\">+</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t<div class=\"d-flex flex-wrap\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div cdkDropList class=\"example-list\" (cdkDropListDropped)=\"drop($event)\">\r\n\r\n\t\t\t\t\t\t\t\t<div class=\"c-question-droplist-flex\" *ngFor=\"let question of questions\" cdkDrag>\r\n\t\t\t\t\t\t\t\t\t<div class=\"d-flex flex-direction--column\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"c-question-droplist--column question-text--wrab parent\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"question-attributes--wrap\" [ngSwitch]=\"question.questionType\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h6 *ngSwitchCase=\"1\" class=\"text-success m-0\"><i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"mdi mdi-checkbox-blank-circle font-10 m-r-10 \"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tTrue/False question\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h6 *ngSwitchCase=\"2\" class=\"text-info m-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"mdi mdi-checkbox-blank-circle font-10 m-r-10 \"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tInput question\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"question-attributes--wrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h6 *ngIf=\"question.questionType != 2\" class=\"text-info m-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"mdi mdi-checkbox-blank-circle font-10 m-r-10 \"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tPositive points: {{question.pointsPositive}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h6 *ngIf=\"question.questionType != 2\" class=\"text-info m-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"mdi mdi-checkbox-blank-circle font-10 m-r-10 \"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNegative points: {{question.pointsNegative}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h6 *ngIf=\"question.questionType == 2\" class=\"text-info m-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"mdi mdi-checkbox-blank-circle font-10 m-r-10 \"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tPoints: {{question.pointsPositive}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{{question.text}}</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"question.childQuestion\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"c-question-droplist--column question-text--wrab child\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"question-attributes--wrap\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t[ngSwitch]=\"question.childQuestion.questionType\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h6 *ngSwitchCase=\"1\" class=\"text-success m-0\"><i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"mdi mdi-checkbox-blank-circle font-10 m-r-10 \"></i>True/False\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h6 *ngSwitchCase=\"2\" class=\"text-info m-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"mdi mdi-checkbox-blank-circle font-10 m-r-10 \"></i>Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"question-attributes--wrap\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t*ngIf=\"question.childQuestion.questionTrueFalseStrategy !== undefined\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t[ngSwitch]=\"question.childQuestion.questionTrueFalseStrategy\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h6 *ngSwitchCase=\"0\" class=\"text-danger m-0\"><i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"mdi mdi-checkbox-blank-circle font-10 m-r-10 \"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tStrateqy not specified\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h6 *ngSwitchCase=\"1\" class=\"text-inverse m-0\"><i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"mdi mdi-checkbox-blank-circle font-10 m-r-10 \"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>Skip</strong> if previous answer is true\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h6 *ngSwitchCase=\"2\" class=\"text-inverse m-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"mdi mdi-checkbox-blank-circle font-10 m-r-10 \"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>Show</strong> if previous answer is true\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"question-attributes--wrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h6 class=\"text-info m-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"mdi mdi-checkbox-blank-circle font-10 m-r-10 \"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tPositive points: {{question.childQuestion.pointsPositive}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h6 class=\"text-info m-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"mdi mdi-checkbox-blank-circle font-10 m-r-10 \"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNegative points: {{question.childQuestion.pointsNegative}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{{question.childQuestion.text}}</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"c-question-droplist--column c-question-droplist--column-menu-wrap\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t<button mat-icon-button [matMenuTriggerFor]=\"menu4\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon>more_vert</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t<mat-menu #menu4=\"matMenu\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button mat-menu-item (click)=\"editCard(question.id)\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Edit question</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button *ngIf=\"!question.childQuestion\" mat-menu-item\r\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"addChildQuestion(question.id)\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<mat-icon>add</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Add child question</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button *ngIf=\"question.childQuestion\" mat-menu-item\r\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"editChildQuestion(question.id)\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Edit child question</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button *ngIf=\"question.childQuestion\" mat-menu-item\r\n\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"openDialog(question.id)\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<mat-icon>policy</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Strategy</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button mat-menu-item (click)=\"deleteQuestion(question.id)\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<mat-icon>delete_sweep</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Delete</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</mat-menu>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t</mat-card>\r\n\t\t\t</div>\r\n\r\n\t\t\t<!-- Results -->\r\n\t\t\t<div fxFlex.gt-lg=\"50\" fxFlex.gt-md=\"50\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n\r\n\t\t\t\t<mat-card>\r\n\t\t\t\t\t<div class=\"p-20 bg-info position-relative\">\r\n\t\t\t\t\t\t<h4 class=\"card-title text-white m-0\">Results</h4>\r\n\t\t\t\t\t\t<h6 class=\"card-subtitle text-white m-0 op-5\">Add results</h6>\r\n\t\t\t\t\t\t<button mat-mini-fab color=\"accent\" class=\"add-contact\" (click)=\"addResult()\">+</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t<div class=\"d-flex flex-wrap\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div cdkDropList class=\"example-list\" (cdkDropListDropped)=\"dropTestResult($event)\">\r\n\r\n\t\t\t\t\t\t\t\t<div class=\"c-question-droplist-flex\" *ngFor=\"let testResultModel of testResultModels\"\r\n\t\t\t\t\t\t\t\t\tcdkDrag>\r\n\t\t\t\t\t\t\t\t\t<div class=\"d-flex flex-direction--column\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"c-question-droplist--column question-text--wrab parent\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"question-attributes--wrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h6 class=\"text-info m-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"mdi mdi-checkbox-blank-circle font-10 m-r-10 \"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tResult points: {{testResultModel.points}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{{testResultModel.message}}</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"c-question-droplist--column c-question-droplist--column-menu-wrap\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t<button mat-icon-button [matMenuTriggerFor]=\"menu4\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon>more_vert</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t<mat-menu #menu4=\"matMenu\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button mat-menu-item (click)=\"editTestResultModel(testResultModel.id)\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Edit</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button mat-menu-item (click)=\"deleteTestResultModel(testResultModel.id)\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<mat-icon>delete_sweep</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Delete</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</mat-menu>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t</mat-card>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</mat-card-content>\r\n</mat-card>\r\n\r\n<div style=\"display: flex; place-content: center;\">\r\n\r\n\t<mat-card fxFlex.gt-lg=\"50\" fxFlex.gt-md=\"50\" fxFlex.gt-xs=\"100\" fxFlex=\"100\" class=\"oh text-center little-profile\">\r\n\t\t<mat-card-content>\r\n\r\n\t\t\t<h3 class=\"m-b-0\">Quiz</h3>\r\n\t\t\t<h6 class=\"m-t-0 \" *ngIf=\"questionWizardEngine.state == 'STARTED'\">Quiz started</h6>\r\n\t\t\t<h6 class=\"m-t-0 \" *ngIf=\"questionWizardEngine.state == 'FINISHED'\">Quiz finished</h6>\r\n\t\t\t<mat-card-actions>\r\n\t\t\t\t<button mat-raised-button color=\"primary\" (click)=\"startQuiz()\">Start quiz</button>\r\n\t\t\t</mat-card-actions>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutWrap=\"wrap\" class=\"m-t-30\">\r\n\t\t\t\t<div fxFlex.gt-sm=\"33.33%\" fxFlex.gt-xs=\"33.33%\" fxFlex=\"100\">\r\n\t\t\t\t\t<h3 class=\"m-0 font-light\">{{questionWizardEngine.questions.length}}</h3>\r\n\t\t\t\t\t<small>Questions</small>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex.gt-sm=\"33.33%\" fxFlex.gt-xs=\"33.33%\" fxFlex=\"100\">\r\n\t\t\t\t\t<h3 class=\"m-0 font-light\">{{questionWizardEngine.currentIndex + 1}}</h3>\r\n\t\t\t\t\t<small>Current position</small>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex.gt-sm=\"33.33%\" fxFlex.gt-xs=\"33.33%\" fxFlex=\"100\">\r\n\t\t\t\t\t<h3 class=\"m-0 font-light\">{{questionWizardEngine.currentPoints}}</h3>\r\n\t\t\t\t\t<small>Current points</small>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</mat-card-content>\r\n\t</mat-card>\r\n\r\n\t<mat-card fxFlex.gt-lg=\"50\" fxFlex.gt-md=\"50\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n\t\t<mat-card-content>\r\n\t\t\t<mat-card-title>Quiz</mat-card-title>\r\n\t\t\t<div *ngIf=\"questionWizardEngine.state == 'STARTED'\" class=\"question-wrap\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\t{{questionWizardEngine.currentQuestion.text}}\r\n\t\t\t\t</p>\r\n\t\t\t\t<div *ngIf=\"questionWizardEngine.currentQuestion.questionType == 1\"\r\n\t\t\t\t\tclass=\"question-answer-button--wrap\">\r\n\t\t\t\t\t<button mat-raised-button color=\"primary\" (click)=\"trueFalseAnswer(true)\">Yes</button>\r\n\t\t\t\t\t<button mat-raised-button color=\"primary\" (click)=\"trueFalseAnswer(false)\">No</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div *ngIf=\"questionWizardEngine.currentQuestion.questionType == 2\">\r\n\t\t\t\t\t<button mat-raised-button color=\"primary\" (click)=\"inputAnswer(1)\">Next</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div *ngIf=\"questionWizardEngine.state == 'FINISHED'\" class=\"question-wrap\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\t{{questionWizardEngine.currentTestResult.message}}\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tPoints: {{questionWizardEngine.currentTestResult.points}}\r\n\t\t\t\t</p>\r\n\r\n\t\t\t</div>\r\n\t\t</mat-card-content>\r\n\t</mat-card>\r\n</div>","<h1 mat-dialog-title>Question strategy</h1>\r\n<div mat-dialog-content>\r\n  <p class=\"text-info\"><strong>The previous answer is TRUE</strong></p>\r\n\r\n    <label class=\"example-margin text-info m-10\">Next question should be:</label>\r\n    <mat-radio-group class=\"d-flex flex-direction--column m-b-30\"\r\n    [(ngModel)]=\"data.trueFalseStrategy\">\r\n    <mat-radio-button class=\"example-margin\" color=\"primary\" value=\"1\">\r\n      Skipped\r\n    </mat-radio-button>\r\n    <mat-radio-button class=\"example-margin\" color=\"accent\" value=\"2\">\r\n      Shown\r\n    </mat-radio-button>\r\n  </mat-radio-group>\r\n\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button [mat-dialog-close]=\"data\" cdkFocusInitial>Ok</button>\r\n</div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Question } from '../questionModels';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'app-dialog-overview-example-dialog',\r\n    templateUrl: './add-question-dialog.html'\r\n  })\r\n  export class DialogAddQuestionComponent {\r\n    constructor(\r\n      public dialogRef: MatDialogRef<DialogAddQuestionComponent>,\r\n      @Inject(MAT_DIALOG_DATA) public data: Question\r\n    ) {\r\n     }\r\n  \r\n    onNoClick(): void {\r\n      this.dialogRef.close();\r\n    }\r\n  }","<h1 mat-dialog-title>Add new question</h1>\r\n<div mat-dialog-content>\r\n  <p class=\"text-info\">Question type</p>\r\n\r\n  <mat-card-content>\r\n    <section class=\"example-section\">\r\n      <mat-radio-group [(ngModel)]=\"data.questionType\" class=\"d-flex flex-direction--column m-b-30\">\r\n        <mat-radio-button class=\"example-margin\" color=\"primary\" value=\"1\">\r\n          True/False\r\n        </mat-radio-button>\r\n        <mat-radio-button class=\"example-margin\" color=\"accent\" value=\"2\">\r\n          Input\r\n        </mat-radio-button>\r\n      </mat-radio-group>\r\n    </section>\r\n\r\n    <mat-form-field>\r\n      <input matInput [(ngModel)]=\"data.pointsPositive\"\r\n        type=\"number\" autocomplete=\"off\" placeholder=\"Points for 'TRUE' answer\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <input matInput [(ngModel)]=\"data.pointsNegative\"\r\n        type=\"number\" autocomplete=\"off\" placeholder=\"Points for 'FALSE' answer\">\r\n    </mat-form-field>\r\n    \r\n    <mat-form-field>\r\n      <textarea matInput [(ngModel)]=\"data.text\" placeholder=\"Question text\"></textarea>\r\n    </mat-form-field>\r\n  </mat-card-content>\r\n\r\n</div>\r\n<div mat-dialog-actions style=\"justify-content: flex-end;\">\r\n  <button mat-button [mat-dialog-close]=\"data\" cdkFocusInitial>Save</button>\r\n</div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Question, TestResultModel } from '../questionModels';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'app-dialog-overview-example-dialog',\r\n    templateUrl: './edit-test-result-model-dialog.html'\r\n  })\r\n  export class DialogEditTestResultModelComponent {\r\n    constructor(\r\n      public dialogRef: MatDialogRef<DialogEditTestResultModelComponent>,\r\n      @Inject(MAT_DIALOG_DATA) public data: TestResultModel\r\n    ) {\r\n     }\r\n  \r\n    onNoClick(): void {\r\n      this.dialogRef.close();\r\n    }\r\n  }","<h1 mat-dialog-title>Add new result</h1>\r\n<div mat-dialog-content>\r\n\r\n  <mat-card-content>\r\n    <mat-form-field>\r\n      <input matInput [(ngModel)]=\"data.points\"\r\n        type=\"number\" autocomplete=\"off\" placeholder=\"Points\">\r\n    </mat-form-field>\r\n    \r\n    <mat-form-field>\r\n      <textarea matInput [(ngModel)]=\"data.message\" placeholder=\"Message\"></textarea>\r\n    </mat-form-field>\r\n  </mat-card-content>\r\n\r\n</div>\r\n<div mat-dialog-actions style=\"justify-content: flex-end;\">\r\n  <button mat-button [mat-dialog-close]=\"data\" cdkFocusInitial>Save</button>\r\n</div>","export class Question {\r\n  public id: string | undefined;\r\n  public text: string | undefined;\r\n  public questionType: any = QuestionType.UNDEFINED;\r\n  public questionTrueFalseStrategy: any = TrueFalseQuestionStrategy.UNDEFINED;\r\n  public childQuestion: any;\r\n  public pointsPositive: any = 1;\r\n  public pointsNegative: any = 0;\r\n\r\n  public answerTrueFalse: AnswerTrueFalse = AnswerTrueFalse.UNDEFINED;\r\n  public inputAnswer: any;\r\n\r\n  getAnswerPoint(): number {\r\n    if (this.questionType == QuestionType.TRUE_FALSE_QUESTION) {\r\n      if (this.answerTrueFalse == AnswerTrueFalse.TRUE)\r\n        return this.pointsPositive;\r\n      if (this.answerTrueFalse == AnswerTrueFalse.FALSE)\r\n        return this.pointsNegative;\r\n    }\r\n\r\n    if (this.questionType == QuestionType.INPUT_QUESTION) {\r\n      return this.pointsPositive;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  public handleAnswer(answerTrueFalse: boolean = false, inputAnswer: any = false) {\r\n    if (answerTrueFalse)\r\n      this.answerTrueFalse = AnswerTrueFalse.TRUE\r\n    else\r\n      this.answerTrueFalse = AnswerTrueFalse.FALSE\r\n\r\n      this.inputAnswer = inputAnswer;\r\n  }\r\n\r\n}\r\n\r\nexport enum AnswerTrueFalse {\r\n  UNDEFINED,\r\n  TRUE,\r\n  FALSE\r\n}\r\n\r\n\r\nexport class EditQuestionViewModel {\r\n  public editQuestionMode: boolean = false;\r\n  public addQuestionMode: boolean = false;\r\n  public currentQuestion: Question | undefined;\r\n}\r\n\r\nexport enum QuestionType {\r\n  UNDEFINED,\r\n  TRUE_FALSE_QUESTION,\r\n  INPUT_QUESTION,\r\n}\r\n\r\nexport enum TrueFalseQuestionStrategy {\r\n  UNDEFINED,\r\n  SKIP_CHILD_IF_PARENT_IS_TRUE,\r\n  SHOW_CHILD_IF_PARENT_IS_TRUE,\r\n}\r\n\r\nexport class TestResultModel {\r\n  id: string = '';\r\n  points: number = 0;\r\n  message: string = '';\r\n}\r\n\r\nexport class ResultHandler {\r\n  questions: Array<Question> = new Array<Question>();\r\n  resultsList: Array<TestResultModel> = new Array<TestResultModel>();\r\n\r\n  calculateResult(): TestResultModel {\r\n    return new TestResultModel();\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import { Question, TestResultModel, TrueFalseQuestionStrategy, AnswerTrueFalse } from './questionModels'\r\n\r\nexport enum QuestionWizardEngineState {\r\n    STARTED = 'STARTED',\r\n    FINISHED = 'FINISHED',\r\n    IS_READY = 'IS_READY'\r\n}\r\n\r\n\r\nexport class QuestionWizardEngine {\r\n\r\n    public questions: Array<Question> = new Array<Question>();\r\n    public testResultModels: Array<TestResultModel> = new Array<TestResultModel>();;\r\n    public sequenceEngine: SequenceEngine<Question> = new SequenceEngine;\r\n\r\n    public state: QuestionWizardEngineState = QuestionWizardEngineState.IS_READY;\r\n    public currentQuestion: Question = new Question;\r\n    public currentIndex: number = 0;\r\n    public currentPoints: number = 0;\r\n\r\n    public currentTestResult: TestResultModel | undefined;\r\n\r\n    init(questions: Array<Question>, testResultModels: Array<TestResultModel>) {\r\n        this.questions = questions;\r\n        this.testResultModels = testResultModels;\r\n        this.sequenceEngine = new SequenceEngine();\r\n        this.sequenceEngine._items = questions;\r\n        this.currentIndex = 0;\r\n        this.currentPoints = 0;\r\n    }\r\n\r\n    setStateStart() {\r\n        console.log(\"setStateStart\")\r\n        this.sequenceEngine.setStateStart();\r\n        this.currentIndex = 0;\r\n        this.currentPoints = 0;\r\n\r\n        this.state = QuestionWizardEngineState.STARTED;\r\n        this.currentQuestion = this.questions[this.sequenceEngine.index];\r\n\r\n        this.currentTestResult = undefined;\r\n    }\r\n\r\n    next() {\r\n        console.log(this.sequenceEngine.isFinished())\r\n        if (this.sequenceEngine.isFinished()) {\r\n            return;\r\n        }\r\n        this.calcPoints()\r\n\r\n        let childQuestionPolicy = this.checkChildQuestion(this.currentQuestion);\r\n        if (childQuestionPolicy.showChild) {\r\n            this.currentQuestion = this.questions[this.sequenceEngine.index].childQuestion;\r\n            return;\r\n        }\r\n\r\n\r\n        this.sequenceEngine.next();\r\n        this.currentQuestion = this.questions[this.sequenceEngine.index];\r\n        this.currentIndex = this.sequenceEngine.index;\r\n\r\n        if (this.sequenceEngine.isFinished()) {\r\n            this.state = QuestionWizardEngineState.FINISHED;\r\n\r\n            this.handleTestResult();\r\n            return;\r\n        }\r\n    }\r\n\r\n    calcPoints() {\r\n        if (this.currentQuestion)\r\n            this.currentPoints += this.currentQuestion.getAnswerPoint();\r\n        else {\r\n            throw \"CurrentQuestion is undefined\";\r\n        }\r\n    }\r\n\r\n    private checkChildQuestion(question: Question): any {\r\n        let result = { showChild: false }\r\n\r\n        if (!question.childQuestion)\r\n            return result;\r\n\r\n        if (question.childQuestion.questionTrueFalseStrategy == TrueFalseQuestionStrategy.SHOW_CHILD_IF_PARENT_IS_TRUE) {\r\n            let parentAnswer = question.answerTrueFalse;\r\n            if (parentAnswer == AnswerTrueFalse.TRUE) {\r\n                result.showChild = true;\r\n            } else {\r\n                result.showChild = false;\r\n            }\r\n        }\r\n\r\n        if (question.childQuestion.questionTrueFalseStrategy == TrueFalseQuestionStrategy.SKIP_CHILD_IF_PARENT_IS_TRUE) {\r\n            let parentAnswer = question.answerTrueFalse;\r\n            if (parentAnswer == AnswerTrueFalse.TRUE)\r\n                result.showChild = false;\r\n            else\r\n                result.showChild = true;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    handleTestResult() {\r\n        this.currentTestResult = this.testResultModels.find(x => { return x.points == this.currentPoints });\r\n\r\n        if (!this.currentTestResult) {\r\n            this.currentTestResult = new TestResultModel();\r\n            this.currentTestResult.message = \"You haven`t specified this result!\";\r\n            this.currentTestResult.points = this.currentPoints;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport class SequenceEngine<T> {\r\n    public _items: Array<T> = new Array<T>();\r\n\r\n    private _currentIndex: number = 0;\r\n    private _state: SequenceState = SequenceState.IS_READY_TO_START;\r\n\r\n    public set items(items: Array<T>) {\r\n        this._items = items;\r\n    }\r\n\r\n    public isFinished(): boolean {\r\n        return this._state == SequenceState.IS_FINISHED;\r\n    }\r\n\r\n    public get index(): number {\r\n        return this._currentIndex;\r\n    }\r\n\r\n    setStateStart() {\r\n        this._currentIndex = 0;\r\n        this._state = SequenceState.IS_IN_PROGRESS;\r\n    }\r\n\r\n    getCurrentItem(): T {\r\n        return this.items[this._currentIndex];\r\n    }\r\n\r\n    public next() {\r\n        this._currentIndex++;\r\n        if (this._state === SequenceState.IS_FINISHED)\r\n            return;\r\n\r\n        if (this.checkReachSequenceEnd())\r\n            return;\r\n    }\r\n\r\n    //Private \r\n    private checkReachSequenceEnd(): boolean {\r\n\r\n        if (this._currentIndex === this._items.length) {\r\n            this._state = SequenceState.IS_FINISHED;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport enum SequenceState {\r\n    IS_READY_TO_START,\r\n    IS_IN_PROGRESS,\r\n    IS_FINISHED\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './destination.component.html',\r\n  styleUrls: ['./destination.component.scss']\r\n})\r\nexport class DestinationComponent {}\r\n","<mat-card>\r\n\t<mat-card-content>\r\n\t\t<mat-card-title>Destination B1</mat-card-title>\r\n\t\t<mat-card-subtitle>Grammar & Vocabulary with answer key</mat-card-subtitle>\r\n\t\t<mat-tab-group animationDuration=\"0ms\">\r\n\t\t\t<mat-tab>\r\n\t\t\t\t<ng-template mat-tab-label>\r\n\t\t\t\t\t<span class=\"tab-text\">Pressent Simple</span>\r\n\t\t\t\t\t<span class=\"tab-text\">Present Continious</span>\r\n\t\t\t\t\t<span class=\"tab-text\">State verbs</span>\r\n\t\t\t\t</ng-template>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<app-destinatin-present-simple>\r\n\t\t\t\t\t</app-destinatin-present-simple>\r\n\t\t\t\t</div>\r\n\t\t\t</mat-tab>\r\n\t\t\t<mat-tab label=\"Tab Two\">\r\n\t\t\t\tTab Two Content\r\n\t\t\t</mat-tab>\r\n\t\t</mat-tab-group>\r\n\t</mat-card-content>\r\n</mat-card>","export class Data{\r\n    public static f_q_1 = \"Every day, Helen gets up at half past seven\"\r\n    public static f_q_2 = \"Every day, Helen gets up at half past seven\"\r\n    \r\n    public static f_q_2_test = \"She \"\r\n}","import { Component } from '@angular/core';\r\nimport { Data } from './data';\r\n\r\n@Component({\r\n  selector: 'app-destinatin-present-simple',\r\n  templateUrl: './present-simple.component.html',\r\n  styleUrls: ['./present-simple.component.scss']\r\n})\r\nexport class PresentSimpleComponent {\r\n\r\n  public data = Data;\r\n\r\n}\r\n","<p>Present simple component</p>\r\n\r\n\r\n<div style=\"display: flex;\">\r\n\r\n\t<img style=\"width: 60%; margin-left: auto; margin-right: auto;\" src=\"assets/images/destination/p-simple-1.png\"\r\n\t\talt=\"Photo of a Shiba Inu\">\r\n</div>\r\n<div class=\"c-destination--wrap\">\r\n\r\n\t<mat-form-field>\r\n\t\t<input matInput [(ngModel)]= \"data.f_q_1\" placeholder=\"1\">\r\n\t</mat-form-field>\r\n\r\n\t<mat-form-field>\r\n\t\t<input matInput [(ngModel)]= \"data.f_q_2_test\" placeholder=\"2\">\r\n\t</mat-form-field>\r\n</div>","import { Component, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-dialog-overview-example-dialog',\r\n  template: `<h1 mat-dialog-title>Hi {{data.name}}</h1>\r\n<div mat-dialog-content>\r\n  <p>What's your favorite animal?</p>\r\n  <mat-form-field>\r\n    <input matInput tabindex=\"1\" [(ngModel)]=\"data.animal\">\r\n  </mat-form-field>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button [mat-dialog-close]=\"data.animal\" tabindex=\"2\">Ok</button>\r\n  <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">No Thanks</button>\r\n</div>`\r\n})\r\nexport class DialogOverviewExampleDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) { }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-dialog',\r\n  templateUrl: './dialog.component.html',\r\n  styleUrls: ['./dialog.component.scss']\r\n})\r\nexport class DialogComponent {\r\n  animal: string='';\r\n  name: string='';\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialogComponent, {\r\n      width: '250px',\r\n      data: { name: this.name, animal: this.animal }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.animal = result;\r\n    });\r\n  }\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- Fixed height Card Grid-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row wrap\">\r\n  <div fxFlex.gt-sm=\"100%\">\r\n    <mat-card>\r\n      <mat-card-content>\r\n        <mat-card-title>Dialog Overview</mat-card-title>\r\n        <mat-card-subtitle>The\r\n          <code>&lt;MatDialog&gt;</code> service can be used to open modal dialogs with Material Design styling and animations.</mat-card-subtitle>\r\n        <ol>\r\n          <li>\r\n            <mat-form-field>\r\n              <input matInput [(ngModel)]=\"name\" placeholder=\"What's your name?\">\r\n            </mat-form-field>\r\n          </li>\r\n          <li>\r\n            <button mat-raised-button (click)=\"openDialog()\">Pick one</button>\r\n          </li>\r\n          <li *ngIf=\"animal\">\r\n            You chose:\r\n            <i>{{animal}}</i>\r\n          </li>\r\n        </ol>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<!-- ============================================================== -->\r\n<!-- Basic Card Grid-->\r\n<!-- ============================================================== -->","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-expansion',\r\n  templateUrl: './expansion.component.html',\r\n  styleUrls: ['./expansion.component.scss']\r\n})\r\nexport class ExpansionComponent {\r\n  panelOpenState = false;\r\n  step = 0;\r\n\r\n  setStep(index: number) {\r\n    this.step = index;\r\n  }\r\n\r\n  nextStep() {\r\n    this.step++;\r\n  }\r\n\r\n  prevStep() {\r\n    this.step--;\r\n  }\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- Basic-->\r\n<!-- ============================================================== -->\r\n<mat-card>\r\n    <mat-card-content>\r\n        <mat-card-title>Basic Expansion</mat-card-title>\r\n        <mat-card-subtitle>Expansion panel <code class=\"\"><a href=\"https://material.angular.io/components/expansion/overview\">Official Component</a></code></mat-card-subtitle>\r\n        <mat-accordion>\r\n            <mat-expansion-panel>\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title> Personal data </mat-panel-title>\r\n                    <mat-panel-description> Type your name and age </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <mat-form-field>\r\n                    <input matInput placeholder=\"First name\"> </mat-form-field>\r\n                <mat-form-field>\r\n                    <input matInput placeholder=\"Age\"> </mat-form-field>\r\n            </mat-expansion-panel>\r\n            <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title> Self aware panel </mat-panel-title>\r\n                    <mat-panel-description> Currently I am {{panelOpenState ? 'open' : 'closed'}} </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <p>I'm visible because I am open</p>\r\n            </mat-expansion-panel>\r\n        </mat-accordion>\r\n    </mat-card-content>\r\n</mat-card>\r\n<!-- ============================================================== -->\r\n<!-- As an Accordion -->\r\n<!-- ============================================================== -->\r\n<mat-card>\r\n    <mat-card-content>\r\n    <mat-card-title>Accordion</mat-card-title>\r\n    <mat-card-subtitle>Expansion panel</mat-card-subtitle>\r\n    \r\n        <mat-accordion class=\"example-headers-align\">\r\n            <mat-expansion-panel [expanded]=\"step === 0\" (opened)=\"setStep(0)\" hideToggle=\"true\">\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title> Personal data </mat-panel-title>\r\n                    <mat-panel-description> Type your name and age\r\n                        <mat-icon>account_circle</mat-icon>\r\n                    </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <mat-form-field>\r\n                    <input matInput placeholder=\"First name\"> </mat-form-field>\r\n                <mat-form-field>\r\n                    <input matInput type=\"number\" min=\"1\" placeholder=\"Age\"> </mat-form-field>\r\n                <mat-action-row>\r\n                    <button mat-button color=\"primary\" (click)=\"nextStep()\">Next</button>\r\n                </mat-action-row>\r\n            </mat-expansion-panel>\r\n            <mat-expansion-panel [expanded]=\"step === 1\" (opened)=\"setStep(1)\" hideToggle=\"true\">\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title> Destination </mat-panel-title>\r\n                    <mat-panel-description> Type the country name\r\n                        <mat-icon>map</mat-icon>\r\n                    </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <mat-form-field>\r\n                    <input matInput placeholder=\"Country\"> </mat-form-field>\r\n                <mat-action-row>\r\n                    <button mat-button color=\"warn\" (click)=\"prevStep()\">Previous</button>\r\n                    <button mat-button color=\"primary\" (click)=\"nextStep()\">Next</button>\r\n                </mat-action-row>\r\n            </mat-expansion-panel>\r\n            <mat-expansion-panel [expanded]=\"step === 2\" (opened)=\"setStep(2)\" hideToggle=\"true\">\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title> Day of the trip </mat-panel-title>\r\n                    <mat-panel-description> Inform the date you wish to travel\r\n                        <mat-icon>date_range</mat-icon>\r\n                    </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <mat-form-field>\r\n                    <input matInput placeholder=\"Date\" [matDatepicker]=\"picker\" (focus)=\"picker.open()\" readonly> </mat-form-field>\r\n                <mat-datepicker #picker></mat-datepicker>\r\n                <mat-action-row>\r\n                    <button mat-button color=\"warn\" (click)=\"prevStep()\">Previous</button>\r\n                    <button mat-button color=\"primary\" (click)=\"nextStep()\">End</button>\r\n                </mat-action-row>\r\n            </mat-expansion-panel>\r\n        </mat-accordion>\r\n    </mat-card-content>\r\n</mat-card>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-grid',\r\n  templateUrl: './grid.component.html',\r\n  styleUrls: ['./grid.component.scss']\r\n})\r\nexport class GridComponent {\r\n  tiles = [\r\n    {\r\n      text: 'One',\r\n      cols: 3,\r\n      rows: 1,\r\n      color: 'lightblue'\r\n    },\r\n    {\r\n      text: 'Two',\r\n      cols: 1,\r\n      rows: 2,\r\n      color: 'lightgreen'\r\n    },\r\n    {\r\n      text: 'Three',\r\n      cols: 1,\r\n      rows: 1,\r\n      color: 'lightpink'\r\n    },\r\n    {\r\n      text: 'Four',\r\n      cols: 2,\r\n      rows: 1,\r\n      color: '#DDBDF1'\r\n    }\r\n  ];\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- Fixed height Card Grid-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\">\r\n    <div fxFlex.gt-sm=\"100%\" >\r\n        <mat-card>\r\n            <mat-card-content>\r\n              <mat-card-title>Fixed height grid-list</mat-card-title>\r\n                <mat-card-subtitle><code>&lt;mat-grid-list&gt;</code> is a two-dimensional list view that arranges cells into grid-based layout. See Material Design spec. <code><a href=\"https://material.io/guidelines/components/grid-lists.html\">Official Doc here</a></code></mat-card-subtitle>\r\n              <mat-grid-list cols=\"4\" rowHeight=\"100px\">\r\n                  <mat-grid-tile\r\n                      *ngFor=\"let tile of tiles\"\r\n                      [colspan]=\"tile.cols\"\r\n                      [rowspan]=\"tile.rows\"\r\n                      [style.background]=\"tile.color\">\r\n                    {{tile.text}}\r\n                  </mat-grid-tile>\r\n                </mat-grid-list>  \r\n            </mat-card-content>        \r\n        </mat-card>\r\n    </div>\r\n</div>    \r\n<!-- ============================================================== -->\r\n<!-- Basic Card Grid-->\r\n<!-- ============================================================== -->\r\n<mat-card>\r\n    <mat-card-content>\r\n      <mat-card-title>Basic grid-list</mat-card-title>\r\n      <mat-card-subtitle><code>&lt;mat-grid-list&gt;</code> is a two-dimensional list view that arranges cells into grid-based layout. See Material Design spec. <a href=\"https://material.io/guidelines/components/grid-lists.html\">here</a></mat-card-subtitle>\r\n      <mat-grid-list cols=\"2\" rowHeight=\"2:1\">\r\n        <mat-grid-tile>1</mat-grid-tile>\r\n        <mat-grid-tile>2</mat-grid-tile>\r\n        <mat-grid-tile>3</mat-grid-tile>\r\n        <mat-grid-tile>4</mat-grid-tile>\r\n      </mat-grid-list>  \r\n    </mat-card-content>        \r\n</mat-card>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-lists',\r\n  templateUrl: './lists.component.html',\r\n  styleUrls: ['./lists.component.scss']\r\n})\r\nexport class ListsComponent {\r\n  typesOfShoes = ['Boots', 'Clogs', 'Loafers', 'Moccasins', 'Sneakers'];\r\n  messages = [\r\n    {\r\n      from: 'Nirav joshi (nbj@gmail.com)',\r\n      image: 'assets/images/users/my-photo.png',\r\n      subject: 'Material angular',\r\n      content: 'This is the material angular template'\r\n    },\r\n    {\r\n      from: 'Sunil joshi (sbj@gmail.com)',\r\n      image: 'assets/images/users/2.jpg',\r\n      subject: 'Wrappixel',\r\n      content: 'We have wrappixel launched'\r\n    },\r\n    {\r\n      from: 'Vishal Bhatt (bht@gmail.com)',\r\n      image: 'assets/images/users/3.jpg',\r\n      subject: 'Task list',\r\n      content: 'This is the latest task hasbeen done'\r\n    }\r\n  ];\r\n\r\n  folders = [\r\n    {\r\n      name: 'Photos',\r\n      updated: new Date('1/1/16')\r\n    },\r\n    {\r\n      name: 'Recipes',\r\n      updated: new Date('1/17/16')\r\n    },\r\n    {\r\n      name: 'Work',\r\n      updated: new Date('1/28/16')\r\n    }\r\n  ];\r\n  notes = [\r\n    {\r\n      name: 'Vacation Itinerary',\r\n      updated: new Date('2/20/16')\r\n    },\r\n    {\r\n      name: 'Kitchen Remodel',\r\n      updated: new Date('1/18/16')\r\n    }\r\n  ];\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- Fixed height Card Grid-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\">\r\n\t\t<div fxFlex.gt-sm=\"100%\" >\r\n\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<mat-card-title>Basic list</mat-card-title>\r\n\t\t\t\t\t\t\t<mat-card-subtitle><code>&lt;mat-list&gt;</code> is a container component that wraps and formats a series of line items. As the base list component, it provides Material Design styling, but no behavior of its own.<code><a href=\"https://material.angular.io/components/list/overview\">Official Doc here</a></code></mat-card-subtitle>\r\n\t\t\t\t\t\t\t<mat-list role=\"list\">\r\n\t\t\t\t\t\t\t\t<mat-list-item role=\"listitem\">Item 1</mat-list-item>\r\n\t\t\t\t\t\t\t\t<mat-list-item role=\"listitem\">Item 2</mat-list-item>\r\n\t\t\t\t\t\t\t\t<mat-list-item role=\"listitem\">Item 3</mat-list-item>\r\n\t\t\t\t\t\t\t</mat-list>\r\n\t\t\t\t\t\t</mat-card-content>        \r\n\t\t\t\t</mat-card>\r\n\t\t</div>\r\n</div>\r\n<!-- ============================================================== -->\r\n<!-- List with selection-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\">\r\n\t\t<div fxFlex.gt-sm=\"50%\" >\r\n\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<mat-card-title>List with selection</mat-card-title>\r\n\t\t\t\t\t\t\t<mat-card-subtitle>A selection list provides an interface for selecting values, where each list item is an option.</mat-card-subtitle>\r\n\t\t\t\t\t\t\t<mat-selection-list #shoes>\r\n\t\t\t\t\t\t\t\t <mat-list-option *ngFor=\"let shoe of typesOfShoes\">\r\n\t\t\t\t\t\t\t\t\t\t{{shoe}}\r\n\t\t\t\t\t\t\t\t </mat-list-option>\r\n\t\t\t\t\t\t\t</mat-selection-list>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\tOptions selected: {{shoes.selectedOptions.selected.length}}\r\n\t\t\t\t\t\t\t</p>    \r\n\t\t\t\t\t\t</mat-card-content>        \r\n\t\t\t\t</mat-card>\r\n\t\t</div>\r\n\t\t<div fxFlex.gt-sm=\"50%\" >\r\n\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<mat-card-title>Multiline lists</mat-card-title>\r\n\t\t\t\t\t\t\t<mat-card-subtitle>A selection list provides an interface for selecting values, where each list item is an option.</mat-card-subtitle>\r\n\t\t\t\t\t\t\t<mat-list>\r\n\t\t\t\t\t\t\t\t<mat-list-item *ngFor=\"let message of messages\">\r\n\t\t\t\t\t\t\t\t\t<h3 matLine>{{message.from}}</h3>\r\n\t\t\t\t\t\t\t\t\t<p matLine class=\"text-muted\">{{message.subject}}</p>\r\n\t\t\t\t\t\t\t\t\t<p matLine class=\"text-muted\">{{message.content}}</p>    \r\n\t\t\t\t\t\t\t\t</mat-list-item>\r\n\t\t\t\t\t\t\t</mat-list>    \r\n\t\t\t\t\t\t</mat-card-content>        \r\n\t\t\t\t</mat-card>\r\n\t\t</div>\r\n</div>\r\n<!-- ============================================================== -->\r\n<!-- List with icons selection-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\">\r\n\t\t<div fxFlex.gt-sm=\"100%\" >\r\n\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<mat-card-title>Multiline lists</mat-card-title>\r\n\t\t\t\t\t\t\t<mat-card-subtitle>A selection list provides an interface for selecting values, where each list item is an option.</mat-card-subtitle>\r\n\t\t\t\t\t\t\t<mat-list>\r\n\t\t\t\t\t\t\t\t<mat-list-item *ngFor=\"let message of messages\">\r\n\t\t\t\t\t\t\t\t\t<img mat-list-avatar [src]=\"message.image\" alt=\"Image of {{message.from}}\">    \r\n\t\t\t\t\t\t\t\t\t<h3 matLine>{{message.from}}</h3>\r\n\t\t\t\t\t\t\t\t\t<p matLine class=\"text-muted\">{{message.content}}</p>     \r\n\t\t\t\t\t\t\t\t</mat-list-item>\r\n\t\t\t\t\t\t\t</mat-list>    \r\n\t\t\t\t\t\t</mat-card-content>        \r\n\t\t\t\t</mat-card>\r\n\t\t</div>\r\n</div> \r\n<!-- ============================================================== -->\r\n<!-- List with icons selection-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\">\r\n\t<div fxFlex.gt-sm=\"100%\" >\r\n\t\t<mat-card>\r\n\t\t\t<mat-card-content class=\"p-b-0 m-b-0\">\r\n\t\t\t\t<mat-card-title>List with sections</mat-card-title>\r\n\t\t\t\t<mat-card-subtitle>A selection list provides an interface for selecting values, where each list item is an option.</mat-card-subtitle>\r\n\t\t\t</mat-card-content>   \r\n\t\t\t<mat-list>\r\n\t\t\t\t<mat-card-content class=\"p-t-0\">    \r\n\t\t\t\t\t<h3 mat-subheader>Folders</h3>\r\n\t\t\t\t\t<mat-list-item *ngFor=\"let folder of folders\">\r\n\t\t\t\t\t\t<mat-icon mat-list-icon>folder</mat-icon>\r\n\t\t\t\t\t\t<h4 mat-line>{{folder.name}}</h4>\r\n\t\t\t\t\t\t<p mat-line> {{folder.updated | date}} </p>\r\n\t\t\t\t\t</mat-list-item>\r\n\t\t\t\t</mat-card-content>   \r\n\t\t\t\t<mat-divider></mat-divider>\r\n\t\t\t\t<mat-card-content>    \r\n\t\t\t\t\t<h3 mat-subheader>Notes</h3>\r\n\t\t\t\t\t<mat-list-item *ngFor=\"let note of notes\">\r\n\t\t\t\t\t\t<mat-icon mat-list-icon>note</mat-icon>\r\n\t\t\t\t\t\t<h4 mat-line>{{note.name}}</h4>\r\n\t\t\t\t\t\t<p mat-line> {{note.updated | date}} </p>\r\n\t\t\t\t\t</mat-list-item>\r\n\t\t\t\t</mat-card-content>      \r\n\t\t\t</mat-list>    \r\n\t\t</mat-card>\r\n\t</div>\r\n</div>","import 'hammerjs';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DemoMaterialModule } from '../demo-material-module';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop'\r\n\r\nimport { MaterialRoutes } from './material.routing';\r\nimport { ButtonsComponent } from './buttons/buttons.component';\r\n\r\nimport { CustomQuestionsComponent,DialogEditPolicyComponent  } from './custom-questions/custom-questions.component';\r\nimport { DialogAddQuestionComponent  } from './custom-questions/dialogs/dialog-add-question';\r\nimport { DialogEditTestResultModelComponent  } from './custom-questions/dialogs/edit-test-result-model-dialog';\r\n\r\nimport { GridComponent } from './grid/grid.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { TabsComponent } from './tabs/tabs.component';\r\nimport { StepperComponent } from './stepper/stepper.component';\r\nimport { ExpansionComponent } from './expansion/expansion.component';\r\nimport { ChipsComponent } from './chips/chips.component';\r\nimport { ToolbarComponent } from './toolbar/toolbar.component';\r\nimport { ProgressSnipperComponent } from './progress-snipper/progress-snipper.component';\r\nimport { ProgressComponent } from './progress/progress.component';\r\nimport {\r\n  DialogComponent,\r\n  DialogOverviewExampleDialogComponent\r\n} from './dialog/dialog.component';\r\nimport { TooltipComponent } from './tooltip/tooltip.component';\r\nimport { SnackbarComponent } from './snackbar/snackbar.component';\r\nimport { SliderComponent } from './slider/slider.component';\r\nimport { SlideToggleComponent } from './slide-toggle/slide-toggle.component';\r\nimport { MatFormFieldModule, MatInputModule } from '@angular/material';\r\nimport { DestinationComponent } from './destination-tab/destination.component';\r\nimport { PresentSimpleComponent } from './destination-tab/present-simple/present-simple.component';\r\n@NgModule({\r\n  imports: [\r\n    MatFormFieldModule,\r\n     MatInputModule,\r\n    CommonModule,\r\n    RouterModule.forChild(MaterialRoutes),\r\n    DemoMaterialModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    CdkTableModule,\r\n    DragDropModule\r\n  ],\r\n  providers: [],\r\n  entryComponents: [DialogOverviewExampleDialogComponent, DialogEditPolicyComponent, DialogAddQuestionComponent, \r\n    DialogEditTestResultModelComponent],\r\n  declarations: [\r\n    CustomQuestionsComponent,\r\n    DestinationComponent,\r\n    PresentSimpleComponent,\r\n    DialogEditPolicyComponent,\r\n    DialogAddQuestionComponent,\r\n    DialogEditTestResultModelComponent,\r\n    ButtonsComponent,\r\n    GridComponent,\r\n    ListsComponent,\r\n    MenuComponent,\r\n    TabsComponent,\r\n    StepperComponent,\r\n    ExpansionComponent,\r\n    ChipsComponent,\r\n    ToolbarComponent,\r\n    ProgressSnipperComponent,\r\n    ProgressComponent,\r\n    DialogComponent,\r\n    DialogOverviewExampleDialogComponent,\r\n    TooltipComponent,\r\n    SnackbarComponent,\r\n    SliderComponent,\r\n    SlideToggleComponent\r\n  ]\r\n})\r\nexport class MaterialComponentsModule {}\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { ButtonsComponent } from './buttons/buttons.component';\r\nimport { GridComponent } from './grid/grid.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { TabsComponent } from './tabs/tabs.component';\r\nimport { StepperComponent } from './stepper/stepper.component';\r\nimport { ExpansionComponent } from './expansion/expansion.component';\r\nimport { ChipsComponent } from './chips/chips.component';\r\nimport { ToolbarComponent } from './toolbar/toolbar.component';\r\nimport { ProgressSnipperComponent } from './progress-snipper/progress-snipper.component';\r\nimport { ProgressComponent } from './progress/progress.component';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { TooltipComponent } from './tooltip/tooltip.component';\r\nimport { SnackbarComponent } from './snackbar/snackbar.component';\r\nimport { SliderComponent } from './slider/slider.component';\r\nimport { SlideToggleComponent } from './slide-toggle/slide-toggle.component';\r\nimport { CustomQuestionsComponent } from './custom-questions/custom-questions.component';\r\nimport { DestinationComponent } from './destination-tab/destination.component';\r\n\r\nexport const MaterialRoutes: Routes = [\r\n  {\r\n    path: 'destination',\r\n    component: DestinationComponent\r\n  },\r\n  {\r\n    path: 'custom-questions',\r\n    component: CustomQuestionsComponent\r\n  },\r\n  {\r\n    path: 'button',\r\n    component: ButtonsComponent\r\n  },\r\n  {\r\n    path: 'grid',\r\n    component: GridComponent\r\n  },\r\n  {\r\n    path: 'lists',\r\n    component: ListsComponent\r\n  },\r\n  {\r\n    path: 'menu',\r\n    component: MenuComponent\r\n  },\r\n  {\r\n    path: 'tabs',\r\n    component: TabsComponent\r\n  },\r\n  {\r\n    path: 'stepper',\r\n    component: StepperComponent\r\n  },\r\n  {\r\n    path: 'expansion',\r\n    component: ExpansionComponent\r\n  },\r\n  {\r\n    path: 'chips',\r\n    component: ChipsComponent\r\n  },\r\n  {\r\n    path: 'toolbar',\r\n    component: ToolbarComponent\r\n  },\r\n  {\r\n    path: 'progress-snipper',\r\n    component: ProgressSnipperComponent\r\n  },\r\n  {\r\n    path: 'progress',\r\n    component: ProgressComponent\r\n  },\r\n  {\r\n    path: 'dialog',\r\n    component: DialogComponent\r\n  },\r\n  {\r\n    path: 'tooltip',\r\n    component: TooltipComponent\r\n  },\r\n  {\r\n    path: 'snackbar',\r\n    component: SnackbarComponent\r\n  },\r\n  {\r\n    path: 'slider',\r\n    component: SliderComponent\r\n  },\r\n  {\r\n    path: 'slide-toggle',\r\n    component: SlideToggleComponent\r\n  }\r\n];\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.scss']\r\n})\r\nexport class MenuComponent {}\r\n","<!-- ============================================================== -->\r\n<!-- row -->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\r\n\t\t<!-- Card column -->\r\n\t\t<div fxFlex.gt-sm=\"100%\" fxFlex=\"100\">\r\n\t\t\t\t<mat-card>\r\n\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t<mat-card-title>Basic menu</mat-card-title>\r\n\t\t\t\t\t\t<mat-card-subtitle><code>&lt;mat-menu&gt;</code> is a floating panel containing list of options.</mat-card-subtitle>\r\n\t\t\t\t\t\t<button mat-button [matMenuTriggerFor]=\"menu\">Menu</button>\r\n\t\t\t\t\t\t<mat-menu #menu=\"matMenu\">\r\n\t\t\t\t\t\t\t<button mat-menu-item>Item 1</button>\r\n\t\t\t\t\t\t\t<button mat-menu-item>Item 2</button>\r\n\t\t\t\t\t\t</mat-menu>\r\n\t\t\t\t\t</mat-card-content>    \r\n\t\t\t </mat-card>\r\n\t\t\t <mat-card>\r\n\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t<mat-card-title>On icon menu</mat-card-title>\r\n\t\t\t\t\t<mat-card-subtitle><code>&lt;mat-menu&gt;</code> is a floating panel containing list of options.</mat-card-subtitle>\r\n\t\t\t\t\t<button mat-icon-button [matMenuTriggerFor]=\"menu2\"><mat-icon>menu</mat-icon></button>\r\n\t\t\t\t\t<mat-menu #menu2=\"matMenu\">\r\n\t\t\t\t\t\t<button mat-menu-item>Item 1</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Item 2</button>\r\n\t\t\t\t\t</mat-menu>\r\n\t\t\t\t</mat-card-content>    \r\n\t\t\t</mat-card>\r\n\t\t\t<mat-card>\r\n\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t<mat-card-title>Nested menu</mat-card-title>\r\n\t\t\t\t\t<mat-card-subtitle><code>&lt;mat-menu&gt;</code> is a floating panel containing list of options.</mat-card-subtitle>\r\n\t\t\t\t\t<button mat-raised-button color=\"accent\" [matMenuTriggerFor]=\"animals\">Animal index</button>\r\n\r\n\t\t\t\t\t<mat-menu #animals=\"matMenu\">\r\n\t\t\t\t\t\t<button mat-menu-item [matMenuTriggerFor]=\"vertebrates\">Vertebrates</button>\r\n\t\t\t\t\t\t<button mat-menu-item [matMenuTriggerFor]=\"invertebrates\">Invertebrates</button>\r\n\t\t\t\t\t</mat-menu>\r\n\r\n\t\t\t\t\t<mat-menu #vertebrates=\"matMenu\">\r\n\t\t\t\t\t\t<button mat-menu-item [matMenuTriggerFor]=\"fish\">Fishes</button>\r\n\t\t\t\t\t\t<button mat-menu-item [matMenuTriggerFor]=\"amphibians\">Amphibians</button>\r\n\t\t\t\t\t\t<button mat-menu-item [matMenuTriggerFor]=\"reptiles\">Reptiles</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Birds</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Mammals</button>\r\n\t\t\t\t\t</mat-menu>\r\n\r\n\t\t\t\t\t<mat-menu #invertebrates=\"matMenu\">\r\n\t\t\t\t\t\t<button mat-menu-item>Insects</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Molluscs</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Crustaceans</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Corals</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Arachnids</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Velvet worms</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Horseshoe crabs</button>\r\n\t\t\t\t\t</mat-menu>\r\n\r\n\t\t\t\t\t<mat-menu #fish=\"matMenu\">\r\n\t\t\t\t\t\t<button mat-menu-item>Baikal oilfish</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Bala shark</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Ballan wrasse</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Bamboo shark</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Banded killifish</button>\r\n\t\t\t\t\t</mat-menu>\r\n\r\n\t\t\t\t\t<mat-menu #amphibians=\"matMenu\">\r\n\t\t\t\t\t\t<button mat-menu-item>Sonoran desert toad</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Western toad</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Arroyo toad</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Yosemite toad</button>\r\n\t\t\t\t\t</mat-menu>\r\n\r\n\t\t\t\t\t<mat-menu #reptiles=\"matMenu\">\r\n\t\t\t\t\t\t<button mat-menu-item>Banded Day Gecko</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Banded Gila Monster</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Black Tree Monitor</button>\r\n\t\t\t\t\t\t<button mat-menu-item>Blue Spiny Lizard</button>\r\n\t\t\t\t\t\t<button mat-menu-item disabled>Velociraptor</button>\r\n\t\t\t\t\t</mat-menu>\r\n\t\t\t\t</mat-card-content>    \r\n\t\t\t</mat-card>\r\n\t\t\t<mat-card>\r\n\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t<mat-card-title>With icon menu</mat-card-title>\r\n\t\t\t\t\t\t<mat-card-subtitle><code>&lt;mat-menu&gt;</code> is a floating panel containing list of options.</mat-card-subtitle>\r\n\t\t\t\t\t\t<button mat-icon-button [matMenuTriggerFor]=\"menu4\">\r\n\t\t\t\t\t\t\t<mat-icon>more_vert</mat-icon>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<mat-menu #menu4=\"matMenu\">\r\n\t\t\t\t\t\t\t<button mat-menu-item>\r\n\t\t\t\t\t\t\t\t<mat-icon>dialpad</mat-icon>\r\n\t\t\t\t\t\t\t\t<span>Redial</span>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button mat-menu-item disabled>\r\n\t\t\t\t\t\t\t\t<mat-icon>voicemail</mat-icon>\r\n\t\t\t\t\t\t\t\t<span>Check voicemail</span>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button mat-menu-item>\r\n\t\t\t\t\t\t\t\t<mat-icon>notifications_off</mat-icon>\r\n\t\t\t\t\t\t\t\t<span>Disable alerts</span>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</mat-menu>\r\n\t\t\t\t\t</mat-card-content>    \r\n\t\t\t</mat-card>\r\n\t\t\t<mat-card>\r\n\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t<mat-card-title>Customizing menu position <span class=\"bg-success text-white rounded font-12 pl-5 pr-5\">New</span></mat-card-title>\r\n\t\t\t\t\t\t<mat-card-subtitle>By default, the menu will display below (y-axis), after (x-axis), without overlapping its trigger. The position can be changed using the <code>xPosition (before | after)</code> and <code>yPosition (above | below)</code> attributes. The menu can be forced to overlap the trigger using the <code>overlapTrigger</code> attribute.</mat-card-subtitle>\r\n\t\t\t\t\t\t<mat-menu #appMenu=\"matMenu\" yPosition=\"above\">\r\n\t\t\t\t\t\t  <button mat-menu-item>Settings</button>\r\n\t\t\t\t\t\t  <button mat-menu-item>Help</button>\r\n\t\t\t\t\t\t</mat-menu>\r\n\r\n\t\t\t\t\t\t<button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\r\n\t\t\t\t\t\t  <mat-icon>more_vert</mat-icon>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</mat-card-content>    \r\n\t\t\t</mat-card>\r\n\t\t\t<mat-card>\r\n\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t<mat-card-title>Menu positioning <span class=\"bg-success text-white rounded font-12 pl-5 pr-5\">New</span></mat-card-title>\r\n\t\t\t\t\t\t<button mat-button [matMenuTriggerFor]=\"aboveMenu\">Above</button>\r\n\t\t\t\t\t\t<mat-menu #aboveMenu=\"matMenu\" yPosition=\"above\">\r\n\t\t\t\t\t\t  <button mat-menu-item>Item 1</button>\r\n\t\t\t\t\t\t  <button mat-menu-item>Item 2</button>\r\n\t\t\t\t\t\t</mat-menu>\r\n\r\n\t\t\t\t\t\t<button mat-button [matMenuTriggerFor]=\"belowMenu\">Below</button>\r\n\t\t\t\t\t\t<mat-menu #belowMenu=\"matMenu\" yPosition=\"below\">\r\n\t\t\t\t\t\t  <button mat-menu-item>Item 1</button>\r\n\t\t\t\t\t\t  <button mat-menu-item>Item 2</button>\r\n\t\t\t\t\t\t</mat-menu>\r\n\r\n\t\t\t\t\t\t<button mat-button [matMenuTriggerFor]=\"beforeMenu\">Before</button>\r\n\t\t\t\t\t\t<mat-menu #beforeMenu=\"matMenu\" xPosition=\"before\">\r\n\t\t\t\t\t\t  <button mat-menu-item>Item 1</button>\r\n\t\t\t\t\t\t  <button mat-menu-item>Item 2</button>\r\n\t\t\t\t\t\t</mat-menu>\r\n\r\n\r\n\t\t\t\t\t\t<button mat-button [matMenuTriggerFor]=\"afterMenu\">After</button>\r\n\t\t\t\t\t\t<mat-menu #afterMenu=\"matMenu\" xPosition=\"after\">\r\n\t\t\t\t\t\t  <button mat-menu-item>Item 1</button>\r\n\t\t\t\t\t\t  <button mat-menu-item>Item 2</button>\r\n\t\t\t\t\t\t</mat-menu>\r\n\t\t\t\t\t</mat-card-content>    \r\n\t\t\t</mat-card>\r\n\t\t</div>    \r\n</div>    ","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-snipper',\r\n  templateUrl: './progress-snipper.component.html',\r\n  styleUrls: ['./progress-snipper.component.scss']\r\n})\r\nexport class ProgressSnipperComponent {\r\n  color = 'warn';\r\n  mode = 'determinate';\r\n  value = 50;\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- Fixed height Card Grid-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\">\r\n\t\t<div fxFlex.gt-sm=\"100%\" >\r\n\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<mat-card-title>Basic Progress spinner</mat-card-title>\r\n\t\t\t\t\t\t\t<mat-card-subtitle><code>&lt;mat-progress-spinner&gt;</code> are a circular indicators of progress and activity.</mat-card-subtitle>\r\n\t\t\t\t\t\t\t<mat-spinner></mat-spinner>  \r\n\t\t\t\t\t\t</mat-card-content>        \r\n\t\t\t\t</mat-card>\r\n\t\t</div> \r\n</div>    \r\n<!-- ============================================================== -->\r\n<!-- Basic Card Grid-->\r\n<!-- ============================================================== -->\r\n<mat-card>\r\n\t\t<mat-card-content>\r\n\t\t\t<mat-card-title>Configurable progress spinner</mat-card-title>\r\n\t\t\t\r\n\t\t\t<section class=\"example-section m-t-20\">\r\n\t\t\t\t<label class=\"example-margin\">Color:</label>\r\n\t\t\t\t<mat-radio-group [(ngModel)]=\"color\" class=\"m-l-20\">\r\n\t\t\t\t\t<mat-radio-button class=\"example-margin\" value=\"primary\" class=\"m-r-10\">\r\n\t\t\t\t\t\tPrimary\r\n\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t<mat-radio-button class=\"example-margin\" value=\"accent\" class=\"m-r-10\">\r\n\t\t\t\t\t\tAccent\r\n\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t<mat-radio-button class=\"example-margin\" value=\"warn\">\r\n\t\t\t\t\t\tWarn\r\n\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t</mat-radio-group>\r\n\t\t\t</section>\r\n\t\t\t\t<br/>\r\n\t\t\t<section class=\"example-section\">\r\n\t\t\t\t<label class=\"example-margin\">Mode:</label>\r\n\t\t\t\t<mat-radio-group [(ngModel)]=\"mode\" class=\"m-l-20\">\r\n\t\t\t\t\t<mat-radio-button class=\"example-margin\" value=\"determinate\" class=\"m-r-10\">\r\n\t\t\t\t\t\tDeterminate\r\n\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t<mat-radio-button class=\"example-margin\" value=\"indeterminate\">\r\n\t\t\t\t\t\tIndeterminate\r\n\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t</mat-radio-group>\r\n\t\t\t</section>\r\n\t\t\t<br/>\r\n\t\t\t<section class=\"example-section\" *ngIf=\"mode == 'determinate'\">\r\n\t\t\t\t<label class=\"example-margin\">Progress:</label>\r\n\t\t\t\t<mat-slider class=\"example-margin\" [(ngModel)]=\"value\"></mat-slider>\r\n\t\t\t</section>\r\n\t\t\t<h4 class=\"example-h2\">Result</h4>\r\n\r\n\t\t\t<mat-progress-spinner\r\n\t\t\t\t\tclass=\"example-margin\"\r\n\t\t\t\t\t[color]=\"color\"\r\n\t\t\t\t\t[mode]=\"mode\"\r\n\t\t\t\t\t[value]=\"value\">\r\n\t\t\t</mat-progress-spinner>    \r\n\t\t</mat-card-content>        \r\n</mat-card>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-progress',\r\n  templateUrl: './progress.component.html',\r\n  styleUrls: ['./progress.component.scss']\r\n})\r\nexport class ProgressComponent {\r\n  color = 'primary';\r\n  mode = 'determinate';\r\n  value = 50;\r\n  bufferValue = 75;\r\n\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- Fixed height Card Grid-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\">\r\n    <div fxFlex.gt-sm=\"100%\" >\r\n        <mat-card>\r\n            <mat-card-content>\r\n              <mat-card-title>Determinate progress-bar</mat-card-title>\r\n              <mat-card-subtitle><code>&lt;mat-progress-bar mode=\"determinate\"&gt;</code> is a horizontal progress-bar for indicating progress and activity.</mat-card-subtitle>\r\n              <mat-progress-bar mode=\"determinate\" value=\"40\"></mat-progress-bar>  \r\n            </mat-card-content>        \r\n        </mat-card>\r\n    </div> \r\n</div>\r\n<!-- ============================================================== -->\r\n<!-- Fixed height Card Grid-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\">\r\n    <div fxFlex.gt-sm=\"100%\" >\r\n        <mat-card>\r\n            <mat-card-content>\r\n              <mat-card-title>Indeterminate progress-bar</mat-card-title>\r\n              <mat-card-subtitle><code>&lt;mat-progress-bar mode=\"indeterminate\"&gt;</code> is a horizontal progress-bar for indicating progress and activity.</mat-card-subtitle>\r\n              <mat-progress-bar mode=\"indeterminate\" value=\"40\"></mat-progress-bar>  \r\n            </mat-card-content>        \r\n        </mat-card>\r\n    </div> \r\n</div>\r\n<!-- ============================================================== -->\r\n<!-- Fixed height Card Grid-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\">\r\n    <div fxFlex.gt-sm=\"100%\" >\r\n        <mat-card>\r\n            <mat-card-content>\r\n              <mat-card-title>Buffer progress-bar</mat-card-title>\r\n              <mat-card-subtitle><code>&lt;mat-progress-bar mode=\"buffer\"&gt;</code> is a horizontal progress-bar for indicating progress and activity.</mat-card-subtitle>\r\n              <mat-progress-bar mode=\"buffer\"></mat-progress-bar>  \r\n            </mat-card-content>        \r\n        </mat-card>\r\n    </div> \r\n</div>\r\n<!-- ============================================================== -->\r\n<!-- Fixed height Card Grid-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\">\r\n    <div fxFlex.gt-sm=\"100%\" >\r\n        <mat-card>\r\n            <mat-card-content>\r\n              <mat-card-title>Query  progress-bar</mat-card-title>\r\n              <mat-card-subtitle><code>&lt;mat-progress-bar mode=\"query\"&gt;</code> is a horizontal progress-bar for indicating progress and activity.</mat-card-subtitle>\r\n              <mat-progress-bar mode=\"query\"></mat-progress-bar>  \r\n            </mat-card-content>        \r\n        </mat-card>\r\n    </div> \r\n</div>\r\n<!-- ============================================================== -->\r\n<!-- Fixed height Card Grid-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\">\r\n    <div fxFlex.gt-sm=\"100%\" >\r\n        <mat-card>\r\n            <mat-card-content>\r\n              <mat-card-title>Colored  progress-bar</mat-card-title>\r\n              <mat-card-subtitle><code>&lt;mat-progress-bar mode=\"determinate\"&gt;</code> is a horizontal progress-bar for indicating progress and activity.</mat-card-subtitle>\r\n              <mat-progress-bar mode=\"determinate\" value=\"40\" color=\"primary\"></mat-progress-bar><br/>  \r\n              <mat-progress-bar mode=\"determinate\" value=\"80\" color=\"accent\"></mat-progress-bar><br/>  \r\n              <mat-progress-bar mode=\"determinate\" value=\"20\" color=\"warn\"></mat-progress-bar>      \r\n            </mat-card-content>        \r\n        </mat-card>\r\n    </div> \r\n</div>\r\n<!-- ============================================================== -->\r\n<!-- Fixed height Card Grid-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\">\r\n    <div fxFlex.gt-sm=\"100%\" >\r\n        <mat-card>\r\n            <mat-card-content>\r\n              <mat-card-title>Configurable   progress-bar</mat-card-title>\r\n              <mat-card-subtitle><code>&lt;mat-progress-bar mode=\"query\"&gt;</code> is a horizontal progress-bar for indicating progress and activity.</mat-card-subtitle>\r\n              <section class=\"example-section\">\r\n                  <label class=\"example-margin\">Color:</label>\r\n                  <mat-radio-group [(ngModel)]=\"color\">\r\n                    <mat-radio-button class=\"example-margin\" value=\"primary\">\r\n                      Primary\r\n                    </mat-radio-button>\r\n                    <mat-radio-button class=\"example-margin\" value=\"accent\">\r\n                      Accent\r\n                    </mat-radio-button>\r\n                    <mat-radio-button class=\"example-margin\" value=\"warn\">\r\n                      Warn\r\n                    </mat-radio-button>\r\n                  </mat-radio-group>\r\n                </section>\r\n                <br/>\r\n                <section class=\"example-section\">\r\n                  <label class=\"example-margin\">Mode:</label>\r\n                  <mat-radio-group [(ngModel)]=\"mode\">\r\n                    <mat-radio-button class=\"example-margin\" value=\"determinate\">\r\n                      Determinate\r\n                    </mat-radio-button>\r\n                    <mat-radio-button class=\"example-margin\" value=\"indeterminate\">\r\n                      Indeterminate\r\n                    </mat-radio-button>\r\n                    <mat-radio-button class=\"example-margin\" value=\"buffer\">\r\n                      Buffer\r\n                    </mat-radio-button>\r\n                    <mat-radio-button class=\"example-margin\" value=\"query\">\r\n                      Query\r\n                    </mat-radio-button>\r\n                  </mat-radio-group>\r\n                </section>\r\n                \r\n                <section class=\"example-section\" *ngIf=\"mode == 'determinate' || mode == 'buffer'\">\r\n                  <label class=\"example-margin\">Progress:</label>\r\n                  <mat-slider class=\"example-margin\" [(ngModel)]=\"value\"></mat-slider>\r\n                </section>\r\n                <section class=\"example-section\" *ngIf=\"mode == 'buffer'\">\r\n                  <label class=\"example-margin\">Buffer:</label>\r\n                  <mat-slider class=\"example-margin\" [(ngModel)]=\"bufferValue\"></mat-slider>\r\n                </section>\r\n                <h2 class=\"example-h2\">Result</h2>\r\n\r\n                <section class=\"example-section\">\r\n                  <mat-progress-bar\r\n                      class=\"example-margin\"\r\n                      [color]=\"color\"\r\n                      [mode]=\"mode\"\r\n                      [value]=\"value\"\r\n                      [bufferValue]=\"bufferValue\">\r\n                  </mat-progress-bar>\r\n                </section>\r\n            </mat-card-content>        \r\n        </mat-card>\r\n    </div> \r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-slide-toggle',\r\n  templateUrl: './slide-toggle.component.html',\r\n  styleUrls: ['./slide-toggle.component.scss']\r\n})\r\nexport class SlideToggleComponent {\r\n  color = 'accent';\r\n  checked = false;\r\n  disabled = false;\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- Fixed height Card Grid-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\">\r\n    <div fxFlex.gt-sm=\"100%\" >\r\n        <mat-card>\r\n            <mat-card-content>\r\n              <mat-card-title>Basic slide-toggles</mat-card-title>\r\n              <mat-card-subtitle><code>&lt;mat-slide-toggle&gt;</code> is an on/off control that can be toggled via clicking or dragging.</mat-card-subtitle>\r\n              <mat-slide-toggle>Slide me!</mat-slide-toggle>\r\n            </mat-card-content>        \r\n        </mat-card>\r\n    </div>\r\n</div>    \r\n<!-- ============================================================== -->\r\n<!-- Basic Card Grid-->\r\n<!-- ============================================================== -->\r\n<mat-card>\r\n    <mat-card-content>\r\n      <mat-card-title>Basic grid-list</mat-card-title>\r\n      <mat-card-subtitle><code>&lt;mat-slide-toggle&gt;</code> is an on/off control that can be toggled via clicking or dragging.</mat-card-subtitle>\r\n      <section class=\"example-section\">\r\n      <label class=\"example-margin\">Color:</label>\r\n      <mat-radio-group [(ngModel)]=\"color\">\r\n        <mat-radio-button class=\"example-margin\" color=\"primary\" value=\"primary\">\r\n          Primary\r\n        </mat-radio-button>\r\n        <mat-radio-button class=\"example-margin\" color=\"accent\" value=\"accent\">\r\n          Accent\r\n        </mat-radio-button>\r\n        <mat-radio-button class=\"example-margin\" color=\"warn\" value=\"warn\">\r\n          Warn\r\n        </mat-radio-button>\r\n      </mat-radio-group>\r\n    </section>\r\n\r\n    <section class=\"example-section\">\r\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"checked\">Checked</mat-checkbox>\r\n    </section>\r\n\r\n    <section class=\"example-section\">\r\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"disabled\">Disabled</mat-checkbox>\r\n    </section>\r\n    <h2 class=\"example-h2\">Result</h2>\r\n\r\n    <section class=\"example-section\">\r\n      <mat-slide-toggle\r\n          class=\"example-margin\"\r\n          [color]=\"color\"\r\n          [checked]=\"checked\"\r\n          [disabled]=\"disabled\">\r\n        Slide me!\r\n      </mat-slide-toggle>\r\n    </section>  \r\n    </mat-card-content>        \r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-slider',\r\n  templateUrl: './slider.component.html',\r\n  styleUrls: ['./slider.component.scss']\r\n})\r\nexport class SliderComponent {\r\n\r\n  demo: number=0;\r\n  val = 50;\r\n  min = 0;\r\n  max = 100;\r\n\r\n  constructor() {}\r\n}\r\n","<mat-card>\r\n  <mat-card-content>    \r\n  <mat-card-title>Slider</mat-card-title>\r\n  <mat-card-subtitle>mat-slider allows for the selection of a value from a range via mouse, touch, or keyboard, similar to <code class=\"\"><a href=\"https://material.angular.io/components/slider/overview\">Official Component</a></code></mat-card-subtitle>\r\n    \r\n    <h4 class=\"m-b-0\">Basic Slider</h4>\r\n    <mat-slider color=\"warn\" value=\"40\"></mat-slider>\r\n      \r\n    <h4  class=\"m-b-0\">value Slider</h4>\r\n    Label <mat-slider #slidey color=\"primary\"  value=\"40\"></mat-slider>\r\n    {{slidey.value}}\r\n\r\n    <h4 class=\"m-b-0\">With Min and Max</h4>\r\n    <mat-form-field><input [(ngModel)]=\"min\" matInput > </mat-form-field> <mat-form-field> <input [(ngModel)]=\"max\" matInput></mat-form-field><br/>\r\n    <mat-slider [min]=\"min\" [max]=\"max\" tickInterval=\"5\" #slider2 color=\"warn\"></mat-slider>\r\n    {{slider2.value}}\r\n    \r\n\r\n    <h4 class=\"m-b-0\">Disabled Slider</h4>\r\n    <mat-slider disabled #slider3></mat-slider>\r\n    {{slider3.value}}\r\n\r\n      <h4 class=\"m-b-0\">Vertical slider</h4>\r\n    <mat-slider vertical  value=\"50\"></mat-slider>\r\n      \r\n    <h4 class=\"m-b-0\">Selecting a value</h4>\r\n    <mat-slider min=\"1\" max=\"100\" step=\"20\" #slider5></mat-slider>\r\n    {{slider5.value}}\r\n\r\n      <h4 class=\"m-b-0\">Slider with set tick interval</h4>\r\n    <mat-slider tickInterval=\"auto\"></mat-slider>\r\n    <mat-slider tickInterval=\"9\"></mat-slider>\r\n\r\n      <h4 class=\"m-b-0\">Slider with Thumb Label</h4>\r\n    <mat-slider thumbLabel></mat-slider>\r\n\r\n      <h4 class=\"m-b-0\">Slider with one-way binding</h4>\r\n    <mat-slider [value]=\"val\" step=\"40\"></mat-slider>\r\n      <mat-form-field><input [(ngModel)]=\"val\" matInput></mat-form-field>\r\n\r\n      <h4 class=\"m-b-0\">Slider with two-way binding</h4>\r\n    <mat-slider [(ngModel)]=\"demo\" step=\"40\"></mat-slider>\r\n      <mat-form-field><input [(ngModel)]=\"demo\" matInput></mat-form-field>\r\n\r\n      <h4 class=\"m-b-0\">Inverted slider</h4>\r\n    <mat-slider invert value=\"50\" tickInterval=\"5\"></mat-slider>\r\n\r\n    \r\n\r\n      <h4 class=\"m-b-0\">Inverted vertical slider</h4>\r\n    <mat-slider vertical invert thumbLabel tickInterval=\"auto\" value=\"50\"></mat-slider>\r\n  </mat-card-content>\r\n</mat-card>","import { Component } from '@angular/core';\r\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-snackbar',\r\n  templateUrl: './snackbar.component.html',\r\n  styleUrls: ['./snackbar.component.scss']\r\n})\r\nexport class SnackbarComponent {\r\n  constructor(public snackBar: MatSnackBar) {}\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n    <mat-card-content>\r\n        <mat-card-title>Basic snack-bar</mat-card-title>\r\n        <mat-card-subtitle>matSnackBar is a service for displaying snack-bar notifications. <code class=\"\"><a href=\"https://material.angular.io/components/snack-bar/overview\">Official Component</a></code></mat-card-subtitle>\r\n        <mat-form-field>\r\n            <input matInput value=\"Disco party!\" placeholder=\"Message\" #message> </mat-form-field>\r\n        <mat-form-field>\r\n            <input matInput value=\"Dance\" placeholder=\"Action\" #action> </mat-form-field>\r\n        <button mat-raised-button color=\"warn\" (click)=\"openSnackBar(message.value, action.value)\">Show snack-bar</button>\r\n    </mat-card-content>\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {STEPPER_GLOBAL_OPTIONS} from '@angular/cdk/stepper';\r\n\r\n@Component({\r\n\tselector: 'app-stepper',\r\n\ttemplateUrl: './stepper.component.html',\r\n\tstyleUrls: ['./stepper.component.scss'],\r\n\tproviders: [{\r\n\t    provide: STEPPER_GLOBAL_OPTIONS, useValue: {displayDefaultIndicatorType: false}\r\n\t}]\r\n})\r\nexport class StepperComponent implements OnInit {\r\n\tisLinear = false;\r\n\tfirstFormGroup: FormGroup=Object.create(null);\r\n\tsecondFormGroup: FormGroup=Object.create(null);\r\n\r\n\tisLinearvarient = false;\r\n  \tvarientfirstFormGroup: FormGroup=Object.create(null);\r\n \tvarientsecondFormGroup: FormGroup=Object.create(null);\r\n\r\n \tisLinearposition = false;\r\n  \tpositionfirstFormGroup: FormGroup=Object.create(null);\r\n \tpositionsecondFormGroup: FormGroup=Object.create(null);\r\n\r\n\r\n \toptionalfirstFormGroup: FormGroup=Object.create(null);\r\n\toptionalsecondFormGroup: FormGroup=Object.create(null);\r\n\tisOptional = false;\r\n\r\n\teditablefirstFormGroup: FormGroup=Object.create(null);\r\n\teditablesecondFormGroup: FormGroup=Object.create(null);\r\n\tisEditable = false;\r\n\r\n\tcustomizefirstFormGroup: FormGroup=Object.create(null);\r\n\tcustomizesecondFormGroup: FormGroup=Object.create(null);\r\n\r\n\terrorfirstFormGroup: FormGroup=Object.create(null);\r\n\terrorsecondFormGroup: FormGroup=Object.create(null);\r\n\r\n\tconstructor(private _formBuilder: FormBuilder) {}\r\n\r\n\tngOnInit() {\r\n\t\tthis.firstFormGroup = this._formBuilder.group({\r\n\t\t\tfirstCtrl: ['', Validators.required]\r\n\t\t});\r\n\t\tthis.secondFormGroup = this._formBuilder.group({\r\n\t\t\tsecondCtrl: ['', Validators.required]\r\n\t\t});\r\n\r\n\t\t// varient\r\n\t\tthis.varientfirstFormGroup = this._formBuilder.group({\r\n\t\t      varientfirstCtrl: ['', Validators.required]\r\n\t\t});\r\n\t\tthis.varientsecondFormGroup = this._formBuilder.group({\r\n\t\t      varientsecondCtrl: ['', Validators.required]\r\n\t\t});\r\n\r\n\t\t// position\r\n\t\tthis.positionfirstFormGroup = this._formBuilder.group({\r\n\t\t      positionfirstCtrl: ['', Validators.required]\r\n\t\t});\r\n\t\tthis.positionsecondFormGroup = this._formBuilder.group({\r\n\t\t      positionsecondCtrl: ['', Validators.required]\r\n\t\t});\r\n\r\n\t\t// optional\r\n\t\tthis.optionalfirstFormGroup = this._formBuilder.group({\r\n\t\t      optionalfirstCtrl: ['', Validators.required]\r\n\t\t});\r\n\t\tthis.optionalsecondFormGroup = this._formBuilder.group({\r\n\t\t      optionalsecondCtrl: ['', Validators.required]\r\n\t\t});\r\n\r\n\t\t// editable\r\n\t\tthis.editablefirstFormGroup = this._formBuilder.group({\r\n\t\t      editablefirstCtrl: ['', Validators.required]\r\n\t\t});\r\n\t\tthis.editablesecondFormGroup = this._formBuilder.group({\r\n\t\t      editablesecondCtrl: ['', Validators.required]\r\n\t\t});\r\n\r\n\t\t// customize\r\n\t\tthis.customizefirstFormGroup = this._formBuilder.group({\r\n\t\t      customizefirstCtrl: ['', Validators.required]\r\n\t\t});\r\n\t\tthis.customizesecondFormGroup = this._formBuilder.group({\r\n\t\t      customizesecondCtrl: ['', Validators.required]\r\n\t\t});\r\n\r\n\t\t// error\r\n\t\tthis.errorfirstFormGroup = this._formBuilder.group({\r\n\t\t      errorfirstCtrl: ['', Validators.required]\r\n\t\t});\r\n\t\tthis.errorsecondFormGroup = this._formBuilder.group({\r\n\t\t      errorsecondCtrl: ['', Validators.required]\r\n\t\t});\r\n\t}\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- row -->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\r\n\t<!-- Card column -->\r\n\t<div fxFlex.gt-sm=\"100%\" fxFlex=\"100\">\r\n\t\t<mat-card>\r\n\t\t\t<mat-card-content>\r\n\t\t\t\t<mat-card-title>Stepper</mat-card-title>\r\n\t\t\t\t<mat-card-subtitle>Check the <code class=\"\"><a href=\"https://material.angular.io/components/stepper/overview\">Official Component</a></code></mat-card-subtitle>\r\n\t\t\t\t<button mat-raised-button (click)=\"isLinear = true\" id=\"toggle-linear\">Enable linear mode</button>\r\n\t\t\t\t<mat-horizontal-stepper [linear]=\"isLinear\">\r\n\t\t\t\t\t<mat-step [stepControl]=\"firstFormGroup\">\r\n\t\t\t\t\t\t<form [formGroup]=\"firstFormGroup\">\r\n\t\t\t\t\t\t\t<ng-template matStepLabel>Fill out your name</ng-template>\r\n\t\t\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t\t\t<input matInput placeholder=\"Last name, First name\" formControlName=\"firstCtrl\" required>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<button mat-raised-button color=\"warn\" matStepperNext>Next</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</mat-step>\r\n\t\t\t\t\t<mat-step [stepControl]=\"secondFormGroup\">\r\n\t\t\t\t\t\t<form [formGroup]=\"secondFormGroup\">\r\n\t\t\t\t\t\t\t<ng-template matStepLabel>Fill out your address</ng-template>\r\n\t\t\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t\t\t<input matInput placeholder=\"Address\" formControlName=\"secondCtrl\" required>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<button mat-raised-button color=\"accent\" matStepperPrevious>Back</button>\r\n\t\t\t\t\t\t\t\t<button mat-raised-button color=\"warn\" matStepperNext>Next</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</mat-step>\r\n\t\t\t\t\t<mat-step>\r\n\t\t\t\t\t\t<ng-template matStepLabel>Done</ng-template>\r\n\t\t\t\t\t\tYou are now done.\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<button mat-raised-button color=\"accent\" matStepperPrevious>Back</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</mat-step>\r\n\t\t\t\t</mat-horizontal-stepper>\r\n\t\t\t</mat-card-content>\r\n\t\t</mat-card>    \r\n\t</div>\r\n</div>\r\n\r\n<!-- ============================================================== -->\r\n<!-- row -->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\r\n\t<!-- Card column -->\r\n\t<div fxFlex.gt-sm=\"100%\" fxFlex=\"100\">\r\n\t\t<mat-card>\r\n\t\t\t<mat-card-content>\r\n\t\t\t\t<mat-card-title>Stepper variants <span class=\"bg-success text-white rounded font-12 pl-5 pr-5\">New</span></mat-card-title>\r\n\t\t\t\t<mat-card-subtitle>There are two stepper components: <code>mat-horizontal-stepper</code> and <code>mat-vertical-stepper</code>. They can be used the same way. The only difference is the orientation of stepper.</mat-card-subtitle>\r\n\r\n\t\t\t\t<button mat-raised-button (click)=\"isLinearvarient = !isLinearvarient\" id=\"toggle-linear\">\r\n\t\t\t\t  {{!isLinearvarient ? 'Enable linear mode' : 'Disable linear mode'}}\r\n\t\t\t\t</button>\r\n\t\t\t\t<mat-vertical-stepper [linear]=\"isLinearvarient\" #steppervarient class=\"m-t-20\">\r\n\t\t\t\t  <mat-step [stepControl]=\"varientfirstFormGroup\">\r\n\t\t\t\t    <form [formGroup]=\"varientfirstFormGroup\">\r\n\t\t\t\t      <ng-template matStepLabel>Fill out your name</ng-template>\r\n\t\t\t\t      <mat-form-field>\r\n\t\t\t\t        <input matInput placeholder=\"Last name, First name\" formControlName=\"varientfirstCtrl\" required>\r\n\t\t\t\t      </mat-form-field>\r\n\t\t\t\t      <div>\r\n\t\t\t\t        <button mat-raised-button matStepperNext color=\"accent\">Next</button>\r\n\t\t\t\t      </div>\r\n\t\t\t\t    </form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step [stepControl]=\"varientsecondFormGroup\">\r\n\t\t\t\t    <form [formGroup]=\"varientsecondFormGroup\">\r\n\t\t\t\t      <ng-template matStepLabel>Fill out your address</ng-template>\r\n\t\t\t\t      <mat-form-field>\r\n\t\t\t\t        <input matInput placeholder=\"Address\" formControlName=\"varientsecondCtrl\" required>\r\n\t\t\t\t      </mat-form-field>\r\n\t\t\t\t      <div class=\"button-row\">\r\n\t\t\t\t        <button mat-raised-button color=\"primary\" matStepperPrevious>Back</button>\r\n\t\t\t\t        <button mat-raised-button color=\"accent\" matStepperNext>Next</button>\r\n\t\t\t\t      </div>\r\n\t\t\t\t    </form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step>\r\n\t\t\t\t    <ng-template matStepLabel>Done</ng-template>\r\n\t\t\t\t    You are now done.\r\n\t\t\t\t    <div class=\"button-row\">\r\n\t\t\t\t      <button mat-raised-button color=\"primary\" matStepperPrevious>Back</button>\r\n\t\t\t\t      <button mat-raised-button color=\"warn\" (click)=\"steppervarient.reset()\">Reset</button>\r\n\t\t\t\t    </div>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t</mat-vertical-stepper>\r\n\t\t\t</mat-card-content>\r\n\t\t</mat-card>    \r\n\t</div>\r\n</div>\r\n\r\n\r\n<!-- ============================================================== -->\r\n<!-- row -->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\r\n\t<!-- Card column -->\r\n\t<div fxFlex.gt-sm=\"100%\" fxFlex=\"100\">\r\n\t\t<mat-card>\r\n\t\t\t<mat-card-content>\r\n\t\t\t\t<mat-card-title>Stepper Label <span class=\"bg-success text-white rounded font-12 pl-5 pr-5\">New</span></mat-card-title>\r\n\t\t\t\t<mat-card-subtitle>If a step's label is only text, then the <code>label</code> attribute can be used.</mat-card-subtitle>\r\n\t\t\t\t<mat-horizontal-stepper labelPosition=\"bottom\" #stepperposition>\r\n\t\t\t\t    <mat-step [stepControl]=\"positionfirstFormGroup\">\r\n\t\t\t\t        <form [formGroup]=\"positionfirstFormGroup\">\r\n\t\t\t\t            <ng-template matStepLabel>Fill out your name</ng-template>\r\n\t\t\t\t            <mat-form-field>\r\n\t\t\t\t                <input matInput placeholder=\"Last name, First name\" formControlName=\"positionfirstCtrl\" required>\r\n\t\t\t\t            </mat-form-field>\r\n\t\t\t\t            <div>\r\n\t\t\t\t                <button mat-raised-button matStepperNext color=\"accent\">Next</button>\r\n\t\t\t\t            </div>\r\n\t\t\t\t        </form>\r\n\t\t\t\t    </mat-step>\r\n\t\t\t\t    <mat-step [stepControl]=\"positionsecondFormGroup\" optional>\r\n\t\t\t\t        <form [formGroup]=\"positionsecondFormGroup\">\r\n\t\t\t\t            <ng-template matStepLabel>Fill out your address</ng-template>\r\n\t\t\t\t            <mat-form-field>\r\n\t\t\t\t                <input matInput placeholder=\"Address\" formControlName=\"positionsecondCtrl\" required>\r\n\t\t\t\t            </mat-form-field>\r\n\t\t\t\t            <div class=\"button-row\">\r\n\t\t\t\t                <button mat-raised-button color=\"primary\" matStepperPrevious>Back</button>\r\n\t\t\t\t       \t \t<button mat-raised-button color=\"accent\" matStepperNext>Next</button>\r\n\t\t\t\t            </div>\r\n\t\t\t\t        </form>\r\n\t\t\t\t    </mat-step>\r\n\t\t\t\t    <mat-step>\r\n\t\t\t\t        <ng-template matStepLabel>Done</ng-template>\r\n\t\t\t\t        You are now done.\r\n\t\t\t\t        <div class=\"button-row m-t-10\">\r\n\t\t\t\t            <button mat-raised-button color=\"primary\" matStepperPrevious>Back</button>\r\n\t\t\t\t            <button mat-raised-button color=\"warn\" (click)=\"stepperposition.reset()\">Reset</button>\r\n\t\t\t\t        </div>\r\n\t\t\t\t    </mat-step>\r\n\t\t\t\t</mat-horizontal-stepper>\r\n\t\t\t</mat-card-content>\r\n\t\t</mat-card>    \r\n\t</div>\r\n</div>\r\n\r\n\r\n<!-- ============================================================== -->\r\n<!-- row -->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\r\n\t<!-- Card column -->\r\n\t<div fxFlex.gt-sm=\"100%\" fxFlex=\"100\">\r\n\t\t<mat-card>\r\n\t\t\t<mat-card-content>\r\n\t\t\t\t<mat-card-title>Stepper with optional steps <span class=\"bg-success text-white rounded font-12 pl-5 pr-5\">New</span></mat-card-title>\r\n\t\t\t\t<mat-card-subtitle>If completion of a step in linear stepper is not required, then the <code>optional</code> attribute can be set on <code>mat-step</code>.</mat-card-subtitle>\r\n\t\t\t\t<button mat-raised-button (click)=\"isOptional = !isOptional\">\r\n\t\t\t\t  {{!isOptional ? 'Enable optional steps' : 'Disable optional steps'}}\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<mat-horizontal-stepper linear #stepperoptional>\r\n\t\t\t\t  <mat-step [stepControl]=\"optionalfirstFormGroup\">\r\n\t\t\t\t    <form [formGroup]=\"optionalfirstFormGroup\">\r\n\t\t\t\t      <ng-template matStepLabel>Fill out your name</ng-template>\r\n\t\t\t\t      <mat-form-field>\r\n\t\t\t\t        <input matInput placeholder=\"Last name, First name\" formControlName=\"optionalfirstCtrl\" required>\r\n\t\t\t\t      </mat-form-field>\r\n\t\t\t\t      <div>\r\n\t\t\t\t        <button mat-raised-button matStepperNext color=\"accent\">Next</button>\r\n\t\t\t\t      </div>\r\n\t\t\t\t    </form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step [stepControl]=\"optionalsecondFormGroup\" [optional]=\"isOptional\">\r\n\t\t\t\t    <form [formGroup]=\"optionalsecondFormGroup\">\r\n\t\t\t\t      <ng-template matStepLabel>Fill out your address</ng-template>\r\n\t\t\t\t      <mat-form-field>\r\n\t\t\t\t        <input matInput placeholder=\"Address\" formControlName=\"optionalsecondCtrl\" required>\r\n\t\t\t\t      </mat-form-field>\r\n\t\t\t\t      <div class=\"button-row\">\r\n\t\t\t                <button mat-raised-button color=\"primary\" matStepperPrevious>Back</button>\r\n\t\t\t       \t \t<button mat-raised-button color=\"accent\" matStepperNext>Next</button>\r\n\t\t\t            </div>\r\n\t\t\t\t    </form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step>\r\n\t\t\t\t    <ng-template matStepLabel>Done</ng-template>\r\n\t\t\t\t    You are now done.\r\n\t\t\t\t    <div class=\"button-row m-t-20\">\r\n\t\t\t\t      <button mat-raised-button color=\"primary\" matStepperPrevious>Back</button>\r\n\t\t\t\t      <button mat-raised-button color=\"warn\" (click)=\"stepperoptional.reset()\">Reset</button>\r\n\t\t\t\t    </div>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t</mat-horizontal-stepper>\r\n\t\t\t</mat-card-content>\r\n\t\t</mat-card>    \r\n\t</div>\r\n</div>\r\n\r\n<!-- ============================================================== -->\r\n<!-- row -->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\r\n\t<!-- Card column -->\r\n\t<div fxFlex.gt-sm=\"100%\" fxFlex=\"100\">\r\n\t\t<mat-card>\r\n\t\t\t<mat-card-content>\r\n\t\t\t\t<mat-card-title>Stepper with editable steps <span class=\"bg-success text-white rounded font-12 pl-5 pr-5\">New</span></mat-card-title>\r\n\t\t\t\t<mat-card-subtitle>By default, steps are editable, which means users can return to previously completed steps and edit their responses. <code>editable=\"false\"</code> can be set on <code>mat-step</code> to change the default.</mat-card-subtitle>\r\n\t\t\t\t<button mat-raised-button (click)=\"isEditable = !isEditable\">\r\n\t\t\t\t  {{!isEditable ? 'Enable edit mode' : 'Disable edit mode'}}\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<mat-horizontal-stepper linear #steppereditable>\r\n\t\t\t\t  <mat-step [stepControl]=\"editablefirstFormGroup\">\r\n\t\t\t\t    <form [formGroup]=\"editablefirstFormGroup\">\r\n\t\t\t\t      <ng-template matStepLabel>Fill out your name</ng-template>\r\n\t\t\t\t      <mat-form-field>\r\n\t\t\t\t        <input matInput placeholder=\"Last name, First name\" formControlName=\"editablefirstCtrl\" required>\r\n\t\t\t\t      </mat-form-field>\r\n\t\t\t\t      <div>\r\n\t\t\t\t        <button mat-raised-button matStepperNext color=\"accent\">Next</button>\r\n\t\t\t\t      </div>\r\n\t\t\t\t    </form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step [stepControl]=\"editablesecondFormGroup\" [editable]=\"isEditable\">\r\n\t\t\t\t    <form [formGroup]=\"editablesecondFormGroup\">\r\n\t\t\t\t      <ng-template matStepLabel>Fill out your address</ng-template>\r\n\t\t\t\t      <mat-form-field>\r\n\t\t\t\t        <input matInput placeholder=\"Address\" formControlName=\"editablesecondCtrl\" required>\r\n\t\t\t\t      </mat-form-field>\r\n\t\t\t\t      <div class=\"button-row\">\r\n\t\t\t                \t<button mat-raised-button color=\"primary\" matStepperPrevious>Back</button>\r\n\t\t\t       \t \t<button mat-raised-button color=\"accent\" matStepperNext>Next</button>\r\n\t\t\t            </div>\r\n\t\t\t\t    </form>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t  <mat-step>\r\n\t\t\t\t    <ng-template matStepLabel>Done</ng-template>\r\n\t\t\t\t    You are now done.\r\n\t\t\t\t    <div  class=\"button-row m-t-20\">\r\n\t\t\t\t      <button mat-raised-button color=\"primary\" matStepperPrevious>Back</button>\r\n\t\t\t\t      <button mat-raised-button color=\"warn\" (click)=\"steppereditable.reset()\">Reset</button>\r\n\t\t\t\t    </div>\r\n\t\t\t\t  </mat-step>\r\n\t\t\t\t</mat-horizontal-stepper>\r\n\t\t\t</mat-card-content>\r\n\t\t</mat-card>    \r\n\t</div>\r\n</div>\r\n\r\n<!-- ============================================================== -->\r\n<!-- row -->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\r\n\t<!-- Card column -->\r\n\t<div fxFlex.gt-sm=\"100%\" fxFlex=\"100\">\r\n\t\t<mat-card>\r\n\t\t\t<mat-card-content>\r\n\t\t\t\t<mat-card-title>Stepper with customized states <span class=\"bg-success text-white rounded font-12 pl-5 pr-5\">New</span></mat-card-title>\r\n\t\t\t\t<mat-horizontal-stepper #steppercustomize>\r\n\t\t\t\t  \t<mat-step [stepControl]=\"customizefirstFormGroup\">\r\n\t\t\t\t\t    <form [formGroup]=\"customizefirstFormGroup\">\r\n\t\t\t\t\t      <ng-template matStepLabel>Fill out your name</ng-template>\r\n\t\t\t\t\t      <mat-form-field>\r\n\t\t\t\t\t        <input matInput placeholder=\"Last name, First name\" formControlName=\"customizefirstCtrl\" required>\r\n\t\t\t\t\t      </mat-form-field>\r\n\t\t\t\t\t      <div>\r\n\t\t\t\t\t        <button mat-raised-button color=\"accent\" matStepperNext>Next</button>\r\n\t\t\t\t\t      </div>\r\n\t\t\t\t\t    </form>\r\n\t\t\t\t\t </mat-step>\r\n\t\t\t\t\t<mat-step [stepControl]=\"customizesecondFormGroup\">\r\n\t\t\t\t\t    <form [formGroup]=\"customizesecondFormGroup\">\r\n\t\t\t\t\t      <ng-template matStepLabel>Fill out your address</ng-template>\r\n\t\t\t\t\t      <mat-form-field>\r\n\t\t\t\t\t        <input matInput placeholder=\"Address\" formControlName=\"customizesecondCtrl\" required>\r\n\t\t\t\t\t      </mat-form-field>\r\n\t\t\t\t\t      <div class=\"button-row\">\r\n\t\t\t\t\t        <button mat-raised-button color=\"primary\" matStepperPrevious>Back</button>\r\n\t\t\t\t\t        <button mat-raised-button color=\"accent\" matStepperNext>Next</button>\r\n\t\t\t\t\t      </div>\r\n\t\t\t\t\t    </form>\r\n\t\t\t\t  \t</mat-step>\r\n\t\t\t\t  \t<mat-step>\r\n\t\t\t\t\t    <ng-template matStepLabel>Done</ng-template>\r\n\t\t\t\t\t    You are now done.\r\n\t\t\t\t\t    <div class=\"button-row\">\r\n\t\t\t\t\t      <button mat-raised-button color=\"primary\" matStepperPrevious>Back</button>\r\n\t\t\t\t\t      <button mat-raised-button color=\"warn\" (click)=\"steppercustomize.reset()\">Reset</button>\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t  \t</mat-step>\r\n\t\t\t\t</mat-horizontal-stepper>\r\n\r\n\t\t\t\t<mat-horizontal-stepper class=\"m-t-20\">\r\n\t\t\t\t  \t<mat-step label=\"Step 1\" state=\"phone\">\r\n\t\t\t\t\t    <p>Put down your phones.</p>\r\n\t\t\t\t\t    <div>\r\n\t\t\t\t\t      <button mat-raised-button color=\"accent\" matStepperNext>Next</button>\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t  \t</mat-step>\r\n\t\t\t\t  \t<mat-step label=\"Step 2\" state=\"chat\">\r\n\t\t\t\t\t    <p>Socialize with each other.</p>\r\n\t\t\t\t\t    <div class=\"button-row\">\r\n\t\t\t\t\t      <button mat-raised-button color=\"primary\" matStepperPrevious>Back</button>\r\n\t\t\t\t\t      <button mat-raised-button color=\"accent\" matStepperNext>Next</button>\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t  \t</mat-step>\r\n\t\t\t\t  \t<mat-step label=\"Step 3\">\r\n\t\t\t\t    \t\t<p>You're welcome.</p>\r\n\t\t\t\t  \t</mat-step>\r\n\r\n\t\t\t\t\t<!-- Icon overrides. -->\r\n\t\t\t\t\t<ng-template matStepperIcon=\"phone\">\r\n\t\t\t\t\t    <mat-icon>call_end</mat-icon>\r\n\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t<ng-template matStepperIcon=\"chat\">\r\n\t\t\t\t\t    <mat-icon>forum</mat-icon>\r\n\t\t\t\t\t</ng-template>\r\n\t\t\t\t</mat-horizontal-stepper>\r\n\t\t\t</mat-card-content>\r\n\t\t</mat-card>    \r\n\t</div>\r\n</div>\r\n\r\n<!-- ============================================================== -->\r\n<!-- row -->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\r\n\t<!-- Card column -->\r\n\t<div fxFlex.gt-sm=\"100%\" fxFlex=\"100\">\r\n\t\t<mat-card>\r\n\t\t\t<mat-card-content>\r\n\t\t\t\t<mat-card-title>Error State <span class=\"bg-success text-white rounded font-12 pl-5 pr-5\">New</span></mat-card-title>\r\n\t\t\t\t<mat-card-subtitle>The stepper can now show error states by simply providing the <code>showError</code> option to the <code>STEPPER_GLOBAL_OPTIONS</code> in your application's root module as mentioned above.</mat-card-subtitle>\r\n\t\t\t\t\r\n\t\t\t\t<mat-horizontal-stepper linear #steppererror>\r\n\t\t\t\t\t <mat-step [stepControl]=\"errorfirstFormGroup\" errorMessage=\"Name is required.\">\r\n\t\t\t\t\t    <form [formGroup]=\"errorfirstFormGroup\">\r\n\t\t\t\t\t      <ng-template matStepLabel>Fill out your name</ng-template>\r\n\t\t\t\t\t      <mat-form-field>\r\n\t\t\t\t\t        <input matInput placeholder=\"Last name, First name\" formControlName=\"errorfirstCtrl\" required>\r\n\t\t\t\t\t      </mat-form-field>\r\n\t\t\t\t\t      <div>\r\n\t\t\t\t\t        <button mat-raised-button color=\"accent\" matStepperNext>Next</button>\r\n\t\t\t\t\t      </div>\r\n\t\t\t\t\t    </form>\r\n\t\t\t\t\t</mat-step>\r\n\t\t\t\t\t<mat-step [stepControl]=\"errorsecondFormGroup\" errorMessage=\"Address is required.\">\r\n\t\t\t\t\t    <form [formGroup]=\"errorsecondFormGroup\">\r\n\t\t\t\t\t      <ng-template matStepLabel>Fill out your address</ng-template>\r\n\t\t\t\t\t      <mat-form-field>\r\n\t\t\t\t\t        <input matInput placeholder=\"Address\" formControlName=\"errorsecondCtrl\" required>\r\n\t\t\t\t\t      </mat-form-field>\r\n\t\t\t\t\t      <div class=\"button-row\">\r\n\t\t\t\t\t        <button mat-raised-button color=\"primary\" matStepperPrevious>Back</button>\r\n\t\t\t\t\t        <button mat-raised-button color=\"accent\" matStepperNext>Next</button>\r\n\t\t\t\t\t      </div>\r\n\t\t\t\t\t    </form>\r\n\t\t\t\t\t</mat-step>\r\n\t\t\t\t\t<mat-step>\r\n\t\t\t\t\t    <ng-template matStepLabel>Done</ng-template>\r\n\t\t\t\t\t    You are now done.\r\n\t\t\t\t\t    <div class=\"button-row\">\r\n\t\t\t\t\t      <button mat-raised-button color=\"primary\" matStepperPrevious>Back</button>\r\n\t\t\t\t\t      <button mat-raised-button color=\"warn\" (click)=\"steppererror.reset()\">Reset</button>\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t\t</mat-step>\r\n\t\t\t\t</mat-horizontal-stepper>\r\n\t\t\t\t\r\n\t\t\t</mat-card-content>\r\n\t\t</mat-card>    \r\n\t</div>\r\n</div>\r\n\r\n\r\n\r\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tabs',\r\n  templateUrl: './tabs.component.html',\r\n  styleUrls: ['./tabs.component.scss']\r\n})\r\nexport class TabsComponent {\r\n\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- row -->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\r\n\t\t<!-- Card column -->\r\n\t\t<div fxFlex.gt-sm=\"100%\" fxFlex=\"100\">\r\n\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t\t<mat-card-title>Basic Tab </mat-card-title>\r\n\t\t\t\t\t\t\t\t<mat-card-subtitle>Check the <code class=\"\"><a href=\"https://material.angular.io/components/tabs/overview\">Official Component</a></code></mat-card-subtitle>\r\n\t\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t\t\t<mat-tab-group>\r\n\t\t\t\t\t\t\t\t<mat-tab label=\"Tab 1\"><mat-card-content>Content 1</mat-card-content></mat-tab>\r\n\t\t\t\t\t\t\t\t<mat-tab label=\"Tab 2\"><mat-card-content>Content 2</mat-card-content></mat-tab>\r\n\t\t\t\t\t\t</mat-tab-group>\r\n\t\t\t\t</mat-card>    \r\n\t\t</div>\r\n</div>\r\n\r\n<!-- ============================================================== -->\r\n<!-- row -->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\r\n\t<!-- Card column -->\r\n\t<div fxFlex.gt-sm=\"100%\" fxFlex=\"100\">\r\n\t\t<mat-card>\r\n\t\t\t<mat-card-content>\r\n\t\t\t\t\t<mat-card-title>Complex Tab Example (Responsive tab)</mat-card-title>\r\n\t\t\t</mat-card-content>\r\n\t\t\t<mat-tab-group class=\"demo-tab-group\">\r\n\t\t\t\t<mat-tab label=\"Tab 1\">\r\n\t\t\t\t\t<div class=\"demo-tab-content\">\r\n\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\r\n\t\t\t\t\t\tPhasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\r\n\t\t\t\t\t\tIn sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\r\n\t\t\t\t\t\tfeugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\r\n\t\t\t\t\t\torci enim rutrum enim, vel tempor sapien arcu a tellus.\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</mat-tab>\r\n\t\t\t\t<mat-tab label=\"Tab 2\">\r\n\t\t\t\t\t<ng-template mat-tab-label>\r\n\t\t\t\t\t\t⭐\r\n\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t<div class=\"demo-tab-content\">\r\n\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\r\n\t\t\t\t\t\tPhasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\r\n\t\t\t\t\t\tIn sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\r\n\t\t\t\t\t\tfeugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\r\n\t\t\t\t\t\torci enim rutrum enim, vel tempor sapien arcu a tellus.\r\n\t\t\t\t\t</div>  \r\n\t\t\t\t</mat-tab>\r\n\t\t\t\t<mat-tab label=\"Tab 3\" disabled>\r\n\t\t\t\t\tNo content  \r\n\t\t\t\t</mat-tab>\r\n\t\t\t\t<mat-tab label=\"Tab 4\">\r\n\t\t\t\t <div class=\"demo-tab-content\">\r\n\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\r\n\t\t\t\t\t\tPhasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\r\n\t\t\t\t\t\tIn sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\r\n\t\t\t\t\t\tfeugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\r\n\t\t\t\t\t\torci enim rutrum enim, vel tempor sapien arcu a tellus.\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\r\n\t\t\t\t\t\tPhasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\r\n\t\t\t\t\t\tIn sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\r\n\t\t\t\t\t\tfeugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\r\n\t\t\t\t\t\torci enim rutrum enim, vel tempor sapien arcu a tellus.\r\n\t\t\t\t\t</div>  \r\n\t\t\t\t</mat-tab>\r\n\t\t\t\t<mat-tab label=\"Tab 5\">\r\n\t\t\t\t\tNo content  \r\n\t\t\t\t</mat-tab>\r\n\t\t\t\t<mat-tab label=\"Tab 6\">\r\n\t\t\t\t\tNo content  \r\n\t\t\t\t</mat-tab>\r\n\t\t\t</mat-tab-group>\r\n\t\t</mat-card>    \r\n\t</div>\r\n</div>\r\n\r\n<!-- ============================================================== -->\r\n<!-- row -->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\r\n\t<!-- Card column -->\r\n\t<div fxFlex.gt-sm=\"100%\" fxFlex=\"100\">\r\n\t\t<mat-card>\r\n\t\t\t<mat-card-content>\r\n\t\t\t\t<mat-card-title>Label alignment <span class=\"bg-success text-white rounded font-12 pl-5 pr-5\">New</span></mat-card-title>\r\n\t\t\t\t<mat-card-subtitle>If you want to align the tab labels in the center or towards the end of the container, you can do so using the <code>[mat-align-tabs]</code> attribute.</mat-card-subtitle>\r\n\t\t\t</mat-card-content>\r\n\t\t\t<mat-tab-group mat-align-tabs=\"start\">\r\n\t\t\t\t<mat-tab label=\"First\">\r\n\t\t\t\t  \t<div class=\"p-20\">Content 1</div>\r\n\t\t\t\t</mat-tab>\r\n\t\t\t\t<mat-tab label=\"Second\">\r\n\t\t\t\t  \t<div class=\"p-20\">Content 2</div>\r\n\t\t\t\t</mat-tab>\r\n\t\t\t\t<mat-tab label=\"Third\">\r\n\t\t\t\t  \t<div class=\"p-20\">Content 3</div>\r\n\t\t\t\t</mat-tab>\r\n\t\t\t</mat-tab-group>\r\n\r\n\t\t\t<mat-tab-group mat-align-tabs=\"center\">\r\n\t\t\t  \t<mat-tab label=\"First\">\r\n\t\t\t  \t\t<div class=\"p-20\">Content 1</div>\r\n\t\t\t  \t</mat-tab>\r\n\t\t\t  \t<mat-tab label=\"Second\">\r\n\t\t\t  \t\t<div class=\"p-20\">Content 2</div>\r\n\t\t\t  \t</mat-tab>\r\n\t\t\t  \t<mat-tab label=\"Third\">\r\n\t\t\t  \t\t<div class=\"p-20\">Content 3</div>\r\n\t\t\t  \t</mat-tab>\r\n\t\t\t</mat-tab-group>\r\n\r\n\t\t\t<mat-tab-group mat-align-tabs=\"end\">\r\n\t\t\t  \t<mat-tab label=\"First\">\r\n\t\t\t  \t\t<div class=\"p-20\">Content 1</div>\r\n\t\t\t  \t</mat-tab>\r\n\t\t\t  \t<mat-tab label=\"Second\">\r\n\t\t\t  \t\t<div class=\"p-20\">Content 2</div>\r\n\t\t\t  \t</mat-tab>\r\n\t\t\t  \t<mat-tab label=\"Third\">\r\n\t\t\t  \t\t<div class=\"p-20\">Content 3</div>\r\n\t\t\t  \t</mat-tab>\r\n\t\t\t</mat-tab-group>\r\n\t\t</mat-card>    \r\n\t</div>\r\n</div>\r\n\r\n<!-- ============================================================== -->\r\n<!-- row -->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\r\n\t<!-- Card column -->\r\n\t<div fxFlex.gt-sm=\"100%\" fxFlex=\"100\">\r\n\t\t<mat-card>\r\n\t\t\t<mat-card-content class=\"m-b-0\">\r\n\t\t\t\t<mat-card-title>Tab group animations <span class=\"bg-success text-white rounded font-12 pl-5 pr-5\">New</span></mat-card-title>\r\n\t\t\t\t<mat-card-subtitle>If you want to align the tab labels in the center or towards the end of the container, you can do so using the <code>[mat-align-tabs]</code> attribute.</mat-card-subtitle>\r\n\t\t\t</mat-card-content>\r\n\t\t\t<div class=\"p-l-20 p-r-20 p-b-20\">\r\n\t\t\t\t<h5 class=\"m-0\">No animation</h5>\r\n\t\t\t\t<mat-tab-group animationDuration=\"0ms\">\r\n\t\t\t\t  <mat-tab label=\"First\">Content 1</mat-tab>\r\n\t\t\t\t  <mat-tab label=\"Second\">Content 2</mat-tab>\r\n\t\t\t\t  <mat-tab label=\"Third\">Content 3</mat-tab>\r\n\t\t\t\t</mat-tab-group>\r\n\r\n\t\t\t\t<h5 class=\"m-b-0\">Very slow animation</h5>\r\n\t\t\t\t<mat-tab-group animationDuration=\"2000ms\">\r\n\t\t\t\t  <mat-tab label=\"First\">Content 1</mat-tab>\r\n\t\t\t\t  <mat-tab label=\"Second\">Content 2</mat-tab>\r\n\t\t\t\t  <mat-tab label=\"Third\">Content 3</mat-tab>\r\n\t\t\t\t</mat-tab-group>\r\n\t\t\t</div>\t\t\t\r\n\t\t</mat-card>    \r\n\t</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.scss']\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<mat-card class=\"no-shadow\">\r\n  <mat-card-content>\r\n  <mat-card-title>Toolbar</mat-card-title>\r\n  <mat-card-subtitle>matToolbar is a container for headers, titles, or actions.<code class=\"\"><a href=\"https://material.angular.io/components/toolbar/overview\">Official Component</a></code></mat-card-subtitle>\r\n  \r\n    <p>Basic toolbar:</p>\r\n    <mat-toolbar>My App</mat-toolbar>\r\n    <p>The primary color toolbar:</p>\r\n    <mat-toolbar color=\"primary\">\r\n      <span>Primary Toolbar</span>\r\n      <span fxFlex></span>\r\n      <button mat-button href=\"#\" mat-icon-button>\r\n        <mat-icon>search</mat-icon>\r\n      </button>\r\n      <button mat-button href=\"#\" mat-icon-button>\r\n        <mat-icon>more_vert</mat-icon>\r\n      </button>\r\n    </mat-toolbar>\r\n    <p>Multiple row</p>\r\n    <mat-toolbar>  \r\n      <mat-toolbar-row>\r\n        <span>First Row</span>\r\n      </mat-toolbar-row>\r\n\r\n      <mat-toolbar-row>\r\n        <span>Second Row</span>\r\n      </mat-toolbar-row>\r\n    </mat-toolbar>\r\n    <p>Positining toolbar</p>\r\n    <mat-toolbar color=\"primary\">\r\n  <span>Application Title</span>\r\n\r\n  <!-- This fills the remaining space of the current row -->\r\n  <span class=\"example-fill-remaining-space\"></span>\r\n\r\n  <span>Right Aligned Text</span>\r\n</mat-toolbar>  \r\n    <p>An accent toolbar using the second toolbar row:</p>\r\n    <mat-toolbar color=\"accent\">\r\n      <mat-toolbar-row>\r\n        <span>Second Line Toolbar</span>\r\n      </mat-toolbar-row>\r\n    </mat-toolbar>\r\n    <p>A primary toolbar using the third toolbar row:</p>\r\n    <mat-toolbar class=\"bg-success\" color=\"warn\">\r\n  <mat-toolbar-row>\r\n    <span>Custom Toolbar</span>\r\n  </mat-toolbar-row>\r\n\r\n  <mat-toolbar-row>\r\n    <span>Second Line</span>\r\n    <span class=\"example-spacer\"></span>\r\n    <mat-icon class=\"example-icon\">verified_user</mat-icon>\r\n  </mat-toolbar-row>\r\n\r\n  <mat-toolbar-row>\r\n    <span>Third Line</span>\r\n    <span class=\"example-spacer\"></span>\r\n    <mat-icon class=\"example-icon\">favorite</mat-icon>\r\n    <mat-icon class=\"example-icon\">delete</mat-icon>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n  </mat-card-content>\r\n</mat-card>","import { Component } from '@angular/core';\r\nimport { TooltipPosition } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-tooltip',\r\n  templateUrl: './tooltip.component.html',\r\n  styleUrls: ['./tooltip.component.scss']\r\n})\r\nexport class TooltipComponent {\r\n  position = 'before';\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- Fixed height Card Grid-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\">\r\n\t\t<div fxFlex.gt-sm=\"100%\" >\r\n\t\t\t\t<mat-card>\r\n\t\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t\t<mat-card-title>Basic Tooltip</mat-card-title>\r\n\t\t\t\t\t\t\t<mat-card-subtitle>The Angular Material tooltip provides a text label that is displayed when the user hovers over or longpresses an element. add <code>matTooltip=\"yourtext\"</code> to any element </mat-card-subtitle>\r\n\t\t\t\t\t\t\t\t<span matTooltip=\"Tooltip!\">I have a tooltip</span>\r\n\t\t\t\t\t\t</mat-card-content>        \r\n\t\t\t\t</mat-card>\r\n\t\t</div>\r\n</div>  \r\n<!-- ============================================================== -->\r\n<!-- Fixed height Card Grid-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row\">\r\n\t<div fxFlex.gt-sm=\"100%\" >\r\n\t\t<mat-card>\r\n\t\t\t<mat-card-content>\r\n\t\t\t\t<mat-card-title>Positioning Tooltip</mat-card-title>\r\n\t\t\t\t<mat-card-subtitle>Add <code>matTooltipPosition=\"below, above, left, right, before, after\"</code> to any element</mat-card-subtitle>\r\n\t\t\t\t<div class=\"button-row\">\r\n\t\t\t\t\t<button mat-raised-button color=\"accent\" matTooltip=\"Tooltip!\" matTooltipPosition=\"above\">Above tooltip</button>\r\n\t\t\t\t\t<button mat-raised-button color=\"warn\" matTooltip=\"Tooltip!\" matTooltipPosition=\"below\">below tooltip</button>\r\n\t\t\t\t\t<button mat-raised-button color=\"primary\" matTooltip=\"Tooltip!\" matTooltipPosition=\"left\">left tooltip</button>\r\n\t\t\t\t\t<button mat-raised-button color=\"warn\" matTooltip=\"Tooltip!\" matTooltipPosition=\"right\">right tooltip</button>\r\n\t\t\t\t\t<button mat-raised-button color=\"accent\" matTooltip=\"Tooltip!\" matTooltipPosition=\"before\">Before tooltip</button>\r\n\t\t\t\t</div>\r\n\t\t\t</mat-card-content>        \r\n\t\t</mat-card>\r\n\t</div>\r\n</div>\r\n<mat-card>\r\n\t<mat-card-content>    \r\n\t<mat-card-title>Tooltip with custom position</mat-card-title>\r\n\t<mat-card-subtitle>The Angular Material tooltip provides a text label that is displayed when the user hovers over or longpresses an element.</mat-card-subtitle>\r\n\t\r\n\t\t<div class=\"example-tooltip-host\" matTooltip=\"Tooltip!\" [matTooltipPosition]=\"position\">\r\n\t\t\t<span>Show tooltip</span>\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<mat-select class=\"example-select\" [(ngModel)]=\"position\">\r\n\t\t\t\t\t<mat-option value=\"before\">Before</mat-option>\r\n\t\t\t\t\t<mat-option value=\"after\">After</mat-option>\r\n\t\t\t\t\t<mat-option value=\"above\">Above</mat-option>\r\n\t\t\t\t\t<mat-option value=\"below\">Below</mat-option>\r\n\t\t\t\t\t<mat-option value=\"left\">Left</mat-option>\r\n\t\t\t\t\t<mat-option value=\"right\">Right</mat-option>\r\n\t\t\t\t</mat-select>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t</mat-card-content>\r\n</mat-card>\r\n"]}